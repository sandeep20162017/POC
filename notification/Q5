@model IEnumerable<BCES.Models.Admin.UserViewModel>

@{
    ViewData["Title"] = "User Management";
}

<h4>User Management</h4>

@(Html.Kendo().Grid<BCES.Models.Admin.UserViewModel>()
    .Name("userGrid")
    .Columns(columns =>
    {
        columns.Bound(u => u.UserADId).Title("User ID");
        columns.Bound(u => u.UserName).Title("User Name");
        columns.Bound(u => u.RoleName)
            .Title("Role Name")
            .EditorTemplateName("RoleNameDropDown");
        
        columns.Bound(u => u.SiteIds)
            .Title("Site Name")
            .ClientTemplate("# if (typeof Sites != 'undefined' && Sites && Sites.length > 0) { # #= Sites.map(site => site.SiteName).join(', ') # # } else { # Select Site # } #")
            .EditorTemplateName("SiteCheckBoxGroup");

        // Replace Command column with Custom Delete Button
        columns.Template(@<text></text>)
            .ClientTemplate("<button class='custom-delete-btn k-button k-button-icon'>Delete</button>")
            .Title("Actions");
    })
    .ToolBar(toolbar =>
    {
        toolbar.Create();
        toolbar.Save();
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Sortable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Events(events => events
            .RequestEnd("onRequestEnd")
            .Error("onDataSourceError"))
        .Read(read => read.Url(Url.Action("ReadUsers", "UserManagementGrid")).Type(HttpVerbs.Get))
        .Create(create => create.Url(Url.Action("AddUser", "UserManagementGrid")).Type(HttpVerbs.Post))
        .Update(update => update.Url(Url.Action("UpdateUser", "UserManagementGrid")).Type(HttpVerbs.Post))
        .Destroy(destroy => destroy.Url(Url.Action("DeleteUser", "UserManagementGrid", new { userID = "{0}" })).Type(HttpVerbs.Post))
        .Model(model =>
        {
            model.Id(u => u.UserID);
            model.Field(u => u.UserName).Editable(true);
            model.Field(u => u.RoleId).DefaultValue(0);
            model.Field(u => u.RoleName).Editable(true);
            model.Field(u => u.SiteIds).DefaultValue(new List<int>());
            model.Field(u => u.SiteNames).DefaultValue(new List<string>());
        })
    )
)

<div id="notification"></div>

@section Scripts {
    <!-- Existing scripts -->
    <script>
        $(document).ready(function() {
            // Custom Delete Button Handler
            $("#userGrid").on("click", ".custom-delete-btn", function(e) {
                e.preventDefault();

                var grid = $("#userGrid").data("kendoGrid");
                var row = $(this).closest("tr");
                var dataItem = grid.dataItem(row);

                // Show custom confirmation dialog
                kendo.confirm("Are you sure you want to delete this record?")
                    .then(function() {
                        grid.dataSource.remove(dataItem); // Mark for deletion
                        grid.dataSource.sync(); // Immediate sync
                    })
                    .fail(function() {
                        grid.cancelRow(row);
                    });
            });
        });

        // Rest of your existing scripts (onRequestEnd, onDataSourceError, etc.)
    </script>
}
