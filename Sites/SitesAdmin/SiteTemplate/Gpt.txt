You are ASP.NEt core expert. you have excellent knowledge of Telerik ASP.NET Core controls. Based on the following details and sample, generate code for CheckBoxGroup.cshtml for Sites.
My application has userid, UserName and Siteid, Site names. One user can have access to one or many  sites. To display sites, I want to use Kendo CheckBoxGroup. UserView (Index) has  functionality to add user, edit user and delete user. CheckBoxGroup control must mark the item checked for the specific value received from the database (onload). Same for Edit. Pls provide any JavaScript changes. I need all the changes in one single file pls. Prefer server side controls.

Details About my application :
UserViewModel
{
    public int UserId { get; set; }
    public string UserName { get; set; }
    public int RoleId { get; set; }
    public string RoleName { get; set; }
    public List<Site> Sites { get; set; } = new();
}

public class Site
{
    public int SiteId { get; set; }
    public string Sitename { get; set; }
}

Index.cshtml :
@(Html.Kendo().Grid<BCES.Models.Admin.UserViewModel>().Name("userGrid").Columns(columns=> {columns.Bound(u=>UserName).Title("Username"); columns.Bound(u=>u,RoleName.Title("RoleName").EditorTemplatename("RoleNameDropDown"); columns.Bound(u=>u.sites).Title("Sites").EditorTemplateName("SiteCheckBoxGroup") //Call Editor template like this.

database table details : SCES.sites (siteId, Sitename), SCES.Users(UserId, UserName, RoleId(FK)), UserSites(UserId, SiteId),  SCES.Roles(RoleId, RoleName). I want to use flattened UserViewModel. User will have only one role but can have multiple sites. I preferer SQL joins (dapper calls) rather than LINQ.

You can refer following example for your solution :
Index.cshtml :
@model Kendo.Mvc.Examples.Models.CheckBoxGroupViewModel
<div>
        <label class="label">Select color:</label>
        @(Html.Kendo().CheckBoxGroup()
            .Name("checkboxgroup-second")
            .Layout("horizontal")
            .Value(Model.CheckBoxGroupValue)
            .BindTo(Model.Items)
        )
    </div>
</div>

<script>
        $(document).ready( function () {
            $("#selectAllCheckbox").change(function () {
                var checkBoxGroup = $("#checkboxgroup").data("kendoCheckBoxGroup")
                if (this.checked) {
                    checkBoxGroup.checkAll(true)
                } else {
                    checkBoxGroup.checkAll(false)
                }
            });
        });
    </script>
IndexController.cs :
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using Kendo.Mvc.Examples.Models;
using Kendo.Mvc.UI;

namespace Kendo.Mvc.Examples.Controllers
{
    public partial class CheckBoxGroupController : Controller
    {
        [Demo]
        public IActionResult Index()
        {
            var itemsList = new List<IInputGroupItem>()
            {
                new InputGroupItemModel ()
                {
                    Label = "Green",
                    Enabled = true,
                    CssClass = "green",
                    Encoded = false,
                    Value = "one",
                    HtmlAttributes = new Dictionary<string,object>() { { "data-custom", "custom" } }
                },
                 new InputGroupItemModel ()
                {
                    Label = "Blue",
                    Enabled = true,
                    Encoded = false,
                    CssClass = "blue",
                    Value = "two"
                },
                  new InputGroupItemModel ()
                {
                    Label = "Red",
                    Enabled = true,
                    Encoded = false,
                    Value = "three",
                    CssClass = "red",
                    HtmlAttributes = new Dictionary<string,object>() { { "data-custom", "custom" } }
                }
            };

            return View(new CheckBoxGroupViewModel() { Items = itemsList, CheckBoxGroupValue = new string[] { "two" } });
        }
    }
}
InputGroupModel.cs :
using Kendo.Mvc.UI;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Kendo.Mvc.Examples.Models
{
    public class InputGroupItemModel : IInputGroupItem
    {
        public IDictionary<string, object> HtmlAttributes { get; set; }

        public string CssClass { get; set; }

        public bool? Enabled { get; set; }

        public bool? Encoded { get; set; }

        public string Label { get; set; }

        public string Value { get; set; }
    }
}
CheckBoxGroupviewModels.cs
using Kendo.Mvc.UI;
using System.Collections.Generic;

namespace Kendo.Mvc.Examples.Models
{
    public class CheckBoxGroupViewModel
    {
        public List<IInputGroupItem> Items { get; set; }
        public string[] CheckBoxGroupValue { get; set;  }
    }
}