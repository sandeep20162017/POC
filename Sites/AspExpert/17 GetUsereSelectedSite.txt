using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Threading.Tasks;
using Dapper;

private async Task<string> GetUserSelectedSites(List<int> selectedSiteIds)
{
    // Ensure the list of selected site IDs is not empty
    if (selectedSiteIds == null || !selectedSiteIds.Any())
    {
        return string.Empty;
    }

    try
    {
        // Create the SQL query with placeholders for the site IDs
        var query = "SELECT SiteName FROM SCES.Sites WHERE SiteId IN @SelectedSiteIds";

        // Execute the query using Dapper
        var siteNames = await _dbConnection.QueryAsync<string>(query, new { SelectedSiteIds = selectedSiteIds });

        // Concatenate the site names into a single string
        return string.Join(", ", siteNames);
    }
    catch (Exception ex)
    {
        // Log the exception (you can replace this with your actual logging mechanism)
        Console.WriteLine($"An error occurred: {ex.Message}");

        // Rethrow the exception or return a default value
        throw; // or return string.Empty;
    }
}