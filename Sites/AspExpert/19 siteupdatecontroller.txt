public class UserViewModel
{
    public int UserId { get; set; }
    public string Username { get; set; }
    public List<SiteModel> Sites { get; set; } = new List<SiteModel>();

    // Function to update the Sites list based on selectedSiteIds and selectedSiteNames
    public static UserViewModel UpdateSiteInModel(UserViewModel userView, List<string> selectedSiteIds, List<string> selectedSiteNames)
    {
        // Clear the existing Sites list to avoid duplicates
        userView.Sites.Clear();

        // Iterate through the selectedSiteIds and selectedSiteNames
        for (int i = 0; i < selectedSiteIds.Count; i++)
        {
            try
            {
                // Parse the SiteId from string to int
                if (int.TryParse(selectedSiteIds[i], out int siteId))
                {
                    // Create a new SiteModel instance
                    var site = new SiteModel
                    {
                        SiteId = siteId,
                        SiteName = selectedSiteNames[i]
                    };

                    // Add the new SiteModel to the Sites list
                    userView.Sites.Add(site);
                }
                else
                {
                    // Handle the case where the SiteId cannot be parsed
                    throw new FormatException($"Invalid SiteId format: {selectedSiteIds[i]}");
                }
            }
            catch (Exception ex)
            {
                // Log the exception or handle it as needed
                Console.WriteLine($"Error updating site: {ex.Message}");
            }
        }

        // Return the updated UserViewModel
        return userView;
    }
}