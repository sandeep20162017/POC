You are Oracle and MS SQL expert.
Pls help migrate following Oracle query to MS SQL query.
Table, function and colun names match n Oracle SQL schema.
Only differene is table, column and function names in MS SQL
Example in Oracle table table is STOCK_CODED_PARTS  in MS SQL it will be STOCKCODEDPARTS (without underscore)
Also for MS SQL use schema name SBCES for table and functions.
Use folliwng query to get partdescription, keyword and part cost. Generate a single oracle query based on the 
following oracle sql statements.

SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0)) AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B2 ) AND REBUILT_PART = 'N' AND LINK_TYPE =UPPER(:B1 ) UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED, NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(:B2 ) AND NSC_PARTS_USED.LINK_TYPE = UPPER(:B1 ) AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME
SELECT COST_CENTRE AS "CC", SUM(TOTAL_COST) AS "TOTAL COST", SUM(TAXABLE_COST)AS "TAXABLE COST" FROM TEMP_MATERIALS_LIST GROUP BY COST_CENTRE ORDER BY COST_CENTRE ASC

INSERT INTO TEMP_MATERIALS_LIST VALUES (:B5 ,:B4 ,:B1 ,:B3 ,:B2 ,:B1 )

SELECT COUNT(*) FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = UPPER(:B2 ) AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER(:B1 )

SELECT COUNT(*) FROM OEM_KITS_TOTAL2 WHERE OEM_KITS_TOTAL2.LINK = :B1 

SELECT ROUND(SUM(NVL(TOTAL_COST,0)),2) AS RB_COST FROM TEMP_MATERIALS_LIST

SELECT DISTINCT(MMS_REBUILT_CODE) AS MMS_REBUILT_CODE FROM ( SELECT SC_PARTS_USED.MMS_REBUILT_CODE FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = 'RB' UNION SELECT SC_PARTS_USED.LINK_CODE FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = 'RB' )

SELECT SC_PARTS_USED.MMS_REBUILT_CODE AS MMS_REBUILT_CODE, SC_PARTS_USED.LINK_CODE AS LINK_CODE FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = 'RB'

SELECT UPPER(REBUILT_STOCK_NUM) AS "rebuilt_stock_num", MMS_STOCK_CODE, KEYWORD, DETAILED_DESC, NVL(SOP_NUMBER,' ') AS "sop_number", NVL(JOB_NUMBER,' ') AS "job_number", CORE_PART_NUM, CORE_CHARGE, ESTIMATED_COST, DATE_MODIFIED, ACTIVE, ROWID FROM RB_MASTERLIST

Convert the final query to MS SQL using above rules.
