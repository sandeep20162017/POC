[HttpPost]
[AllowAnonymous]
public async Task<IActionResult> UpdateLabourType([DataSourceRequest] DataSourceRequest request, LabourTypeModel model)
{
    if (model == null || model.LabourType <= 0)
        return BadRequest("Invalid LabourType value.");

    try
    {
        var updateQuery = @"
            UPDATE [SBCES].[EmplClass]
            SET 
                LabourDefn = @LabourDefn,
                WageGroup = @WageGroup,
                HrsPerWeek = @HrsPerWeek,
                DateEntered = @DateEntered,
                OverheadType = @OverheadType
            WHERE 
                LabourType = @LabourType";

        var parameters = new
        {
            LabourType = model.LabourType,
            LabourDefn = model.LabourDefn ?? (object)DBNull.Value,
            WageGroup = model.WageGroup ?? (object)DBNull.Value,
            HrsPerWeek = model.HrsPerWeek ?? (object)DBNull.Value,
            DateEntered = DateTime.Now,
            OverheadType = model.OverheadType
        };

        var rowsAffected = await _dbConnection.ExecuteAsync(updateQuery, parameters);

        if (rowsAffected > 0)
        {
            return Json(new { success = true });
        }
        else
        {
            return NotFound("LabourType not found.");
        }
    }
    catch (Exception ex)
    {
        _logger.LogError(ex, "An error occurred while updating LabourType with ID {LabourType}", model.LabourType);
        return StatusCode(500, $"An error occurred while updating the LabourType: {ex.Message}");
    }
}
