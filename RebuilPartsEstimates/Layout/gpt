You are ASp.NET core 8.0 and Telerik UI ASP.NET Core expert.
I need to change font size of the grid data (across all the pages). Suggest and add comments for  the changes.
I also need greed horizontal column and row lines to be black. I should be able to change background an fore ground color. For referene use the color theme as in the below css.
You can use following telerik-styles-min.css for referene.
Give me the full file with changes.

telerik-styles-min.css :

footer {
    background-color: honeydew; /* Dark grey background */
    color: black; /* White text color */
    text-align: center;
    padding: 10px 0;
    width: 100%;
    border-top: 1px solid #ddd; /* Optional: Add a border to separate footer from content */
    font-size: 10px; /* ssk*/
}

.footer-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    padding: 0 20px;
}

.footer-left, .footer-right {
    display: inline-block;
    margin: 0 10px;
    font-weight: bold;
    font-size: 10px; /*ssk4 */
}
/* Header Container */
.header_container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: blanchedalmond; /* Change to your desired background color */
    height: 40px; /* Change to your desired height */
    padding: 0 20px; /* Add padding as needed */
}

/* Logo */
.logo {
    margin-right: auto; /* Push the logo to the left */
}

    .logo img {
        height: 40px; /* Adjust the height of the logo as needed */
    }

/* App Name */
.app-name {
    text-align: center;
    color: black; /* Change to your desired text color */
    margin: 0 auto; /* Center the app name */
}

/* User Info */
.user-info-new {
    display: flex;
    align-items: center;
    margin-left: auto; /* Push the user info to the right */
}

    .user-info-new .user-image {
        height: 30px; /* Adjust the height of the user image as needed */
        margin-right: 10px; /* Add spacing between image and name */
    }

    .user-info-new .user-name-new {
        color: black; /* Change to your desired text color */
    }
/* Main Menu Styles */
.k-menu {
    background-color: honeydew; /* Background color for main menu */
    font-size: 10px; /* Font size */
    font-weight: bold; /* Bold font */
    color: black; /* Font color */
    width: 100%; /* Full width */
    border-radius: 8px; /* Rounded corners */
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow */
}

    /* Menu Items */
    .k-menu .k-item {
        padding: 10px 15px; /* Adjust padding for better spacing */
        color: black; /* Default text color */
        text-align: left;
        font-weight: bold; /* Bold font */
        font-size: 10px; /* Font size */
        background-color: honeydew; /* Background color for main menu */
        border-radius: 8px; /* Rounded corners */
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    }

        /* Hover Effect */
        .k-menu .k-item:hover {
            background-color: #c9e4c5; /* Slightly darker green for hover */
            color: black; /* Text color on hover */
            border-radius: 8px; /* Keep the rounded effect on hover */
        }

        /* Selected Menu Item */
        .k-menu .k-item.k-state-selected {
            background-color: #b5d3b0; /* Darker shade for selected item */
            color: black; /* Text color for selected item */
            font-weight: bold; /* Emphasize selected item */
        }

    /* Submenu Styles */
    .k-menu .k-group {
        background-color: #e9f7df; /* Light green for submenu background */
        border-radius: 8px; /* Rounded submenu corners */
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.15); /* Shadow for submenu */
    }

        /* Submenu Items */
        .k-menu .k-group .k-item {
            color: black; /* Submenu font color */
            font-weight: bold; /* Bold font for submenu */
        }

            /* Submenu Hover */
            .k-menu .k-group .k-item:hover {
                background-color: #cfe8d3; /* Slightly darker shade for submenu hover */
                color: black; /* Keep text bold and black */
                border-radius: 4px; /* Subtle rounding for submenu hover */
            }

/* Kendo Grid Container */
.k-grid {
    background-color: #f9f9f9; /* Light background color for the grid */
    border-radius: 8px; /* Rounded corners */
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    width: 100%; /* Full width */
}

    /* Grid Header */
    .k-grid .k-grid-header {
        background-color: azure; /* Black background for the header */
        color: black; /* White text color for the header */
        font-weight: bold; /* Bold font for the header */
        border-radius: 8px 8px 0 0; /* Rounded top corners */
        font-size: 10px;
        border-color : black;
    }

        /* Grid Header Cells */
        .k-grid .k-grid-header .k-header {
            padding: 11px; /* Adjust padding for better spacing */
            text-align: left; /* Center-align text */
            color: black; /* White text color for the header */
            font-weight: bold; /* Bold font for the header */
        }

    /* Grid Rows */
    .k-grid .k-grid-content .k-row {
        font-size: 10px; /* Font size for rows */
        background-color:antiquewhite; /* White background for rows */
    }

    /* Alternating Rows */
    .k-grid .k-grid-content .k-alt {
        background-color: #f2f9f1; /* Light green background for alternating rows */
    }

    /* Grid Cells */
    .k-grid .k-grid-content .k-row td {
        padding: 5px; /* Adjust padding for better spacing */
        border-bottom: 1px solid #e0e0e0; /* Light border between rows */
    }

/* Kendo Buttons */
.k-button {
    background-color: #b5d3b0; /* Light green background for buttons */
    color: black; /* Black text color for buttons */
    border-radius: 20px; /* Rounded buttons */
    padding: 8px 16px; /* Adjust padding for better spacing */
    font-weight: bold; /* Bold font for buttons */
    border: none; /* Remove default border */
    cursor: pointer; /* Pointer cursor on hover */
    transition: background-color 0.3s ease; /* Smooth transition for hover effect */
    font-size : 10px;
}

    /* Button Hover Effect */
    .k-button:hover {
        background-color: #c9e4c5; /* Slightly darker green for hover */
        color: black; /* Keep text color black on hover */
    }

    /* Button Focus Effect */
    .k-button:focus {
        outline: none; /* Remove default focus outline */
        box-shadow: 0 0 0 2px rgba(181, 211, 176, 0.5); /* Subtle focus shadow */
    }

Index.cshtml :
@using BCES.Models.Parts
@using BCES.Models.Common
@model IEnumerable<BCES.Models.Parts.RebuiltPartsViewModel>

@{
    ViewData["Title"] = "Rebuilt Parts";
}

<h4>Rebuilt Parts</h4>

@(Html.Kendo().Grid<RebuiltPartsViewModel>()
    .Name("RebuiltPartsGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.RebuiltStockNum).Title("Rebuilt Stock Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.MmsStockCode).Title("MMS Stock Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.DetailedDesc).Title("Description").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.Keyword).Title("Keyword").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.JobNumber).Title("Job Number").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.CorePartNum).Title("Core Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.CoreCharge).Title("Core Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
        columns.Bound(c => c.BuyNewCost).Title("Buy Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
        columns.Bound(c => c.RemanCost).Title("Remanufactured Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
        columns.Command(command =>
        {
            command.Edit();
        }).Title("Actions");
    })
    .ToolBar(toolbar => { toolbar.Create(); })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .ClientDetailTemplateId("template")
    .Resizable(r => r.Columns(true))
    .Groupable(g => g.ShowFooter(false))
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            model.Id(c => c.RbMasterlistId);
            model.Field(c => c.RbMasterlistId);
            model.Field(c => c.RebuiltStockNum).Editable(true);
            model.Field(c => c.MmsStockCode).Editable(true);
            model.Field(c => c.VehicleSeries).DefaultValue(new List<BCES.Models.Common.ListOfBusesModel>()).Editable(true);
        })
        .Read(read => read.Url(Url.Action("GetRebuiltPartsView", "RebuiltParts")).Type(HttpVerbs.Get))
        .Create(create => create.Url(Url.Action("AddRebuiltPartsView", "RebuiltParts")).Type(HttpVerbs.Post))
        .Update(update => update.Url(Url.Action("UpdateRebuiltPartsView", "RebuiltParts")).Type(HttpVerbs.Post))
    )
)

<div id="estimates-container"></div>

<!-- Add a placeholder for the notification -->
<div id="notification"></div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var grid = $("#RebuiltPartsGrid").data("kendoGrid");

            // Initialize Kendo Notification for displaying messages
            var notificationElement = $("#notification");
            if (notificationElement.length === 0) {
                console.error("Notification element not found in the DOM.");
            } else {
                var notification = notificationElement.kendoNotification({
                    position: {
                        pinned: true,
                        top: 50,
                        right: 50
                    },
                    autoHideAfter: 5000, // Hide after 5 seconds
                    stacking: "down"
                }).data("kendoNotification");

                grid.bind("detailInit", function (e) {
                    console.log("Detail initialization started for RebuiltStockNum: " + e.data.RebuiltStockNum);

                    // Get the container for the detail template
                    var container = e.detailCell.find("#detail-template-" + e.data.RebuiltStockNum);

                    // Load the TabStrip structure
                    container.html(`
                                <div id="tabstrip-container-${e.data.RebuiltStockNum}">
                                    <ul>
                                        <li class="k-state-active">Labour Details</li>
                                        <li>Material Details</li>
                                    </ul>
                                    <div id="labour-details-content"></div>
                                    <div id="material-details-content"></div>
                                </div>
                                <div class="action-buttons">
                                    <button class="k-button k-button-primary" id="save-button">Save</button>
                                    <button class="k-button k-button-secondary" id="archive-button">Archive</button>
                                    <button class="k-button k-button-secondary" id="cancel-button">Cancel</button>
                                </div>
                            `);

                    // Initialize the Kendo TabStrip
                    var tabStrip = $("#tabstrip-container-" + e.data.RebuiltStockNum).kendoTabStrip({
                        animation: { open: { effects: "fadeIn" } },
                        select: function (e) {
                            var tabIndex = $(e.item).index(); // Get the index of the selected tab

                            // Check for unsaved changes in the current tab
                            var currentTabContent = tabStrip.contentElement(tabStrip.select().index());
                            var currentGrid = $(currentTabContent).find(".k-grid").data("kendoGrid");

                            if (currentGrid && (currentGrid.dataSource.hasChanges())) {
                                // Show a warning notification
                                if (notification) {
                                   // notification.show(currentGrid.dataSource.hasChanges(), "warning") ;
                                    //notification.show(currentGrid.editCell, "warning");

                                    notification.show("You have unsaved changes. Click on Update or Cancel changes before clicking next tab.", "warning");
                                } else {
                                    console.error("Notification is not initialized.");
                                }
                                e.preventDefault(); // Prevent the tab switch
                                return;
                            }

                            // Load the partial view content for the selected tab
                            var tabUrl = tabIndex === 0
                                ? '@Url.Action("LabourDetailsPartial", "RebuiltParts")'
                                : '@Url.Action("MaterialDetailsPartial", "RebuiltParts")';

                            $.get(tabUrl)
                                .done(function (data) {
                                    $(e.contentElement).html(data);
                                    kendo.init($(e.contentElement)); // Reinitialize Kendo widgets
                                })
                                .fail(function (xhr, status, error) {
                                    console.error("Error loading tab content: ", error);
                                    if (notification) {
                                        notification.show("An error occurred while loading the tab content. Please try again.", "error");
                                    } else {
                                        console.error("Notification is not initialized.");
                                    }
                                });
                        }
                    }).data("kendoTabStrip");

                    // Load the first tab's content
                    $.get('@Url.Action("LabourDetailsPartial", "RebuiltParts")')
                        .done(function (data) {
                            $("#labour-details-content").html(data);
                            kendo.init($("#labour-details-content")); // Reinitialize Kendo widgets
                        })
                        .fail(function (xhr, status, error) {
                            console.error("Error loading initial tab content: ", error);
                            if (notification) {
                                notification.show("An error occurred while loading the initial tab content. Please try again.", "error");
                            } else {
                                console.error("Notification is not initialized.");
                            }
                        });

                    // Handle button click events
                    container.on("click", "#save-button", function () {
                        $.post('@Url.Action("SaveDetails", "RebuiltParts")')
                            .done(function (data) {
                                if (notification) {
                                    notification.show("Changes saved successfully!", "success");
                                } else {
                                    console.error("Notification is not initialized.");
                                }
                            })
                            .fail(function (xhr, status, error) {
                                console.error("Error saving changes: ", error);
                                if (notification) {
                                    notification.show("An error occurred while saving changes. Please try again.", "error");
                                } else {
                                    console.error("Notification is not initialized.");
                                }
                            });
                    });

                    container.on("click", "#archive-button", function () {
                        $.post('@Url.Action("ArchiveDetails", "RebuiltParts")')
                            .done(function (data) {
                                if (notification) {
                                    notification.show("Record archived successfully!", "success");
                                } else {
                                    console.error("Notification is not initialized.");
                                }
                            })
                            .fail(function (xhr, status, error) {
                                console.error("Error archiving record: ", error);
                                if (notification) {
                                    notification.show("An error occurred while archiving the record. Please try again.", "error");
                                } else {
                                    console.error("Notification is not initialized.");
                                }
                            });
                    });

                    container.on("click", "#cancel-button", function () {
                        $.post('@Url.Action("CancelDetails", "RebuiltParts")')
                            .done(function (data) {
                                if (notification) {
                                    notification.show("Changes discarded!", "info");
                                } else {
                                    console.error("Notification is not initialized.");
                                }
                            })
                            .fail(function (xhr, status, error) {
                                console.error("Error discarding changes: ", error);
                                if (notification) {
                                    notification.show("An error occurred while discarding changes. Please try again.", "error");
                                } else {
                                    console.error("Notification is not initialized.");
                                }
                            });
                    });
                });
            }
        });
    </script>

    <script id="template" type="text/x-kendo-template">
        <div id="detail-template-#=RebuiltStockNum#"></div>
    </script>

    <script>
        function dataBound() {
            this.expandRow(this.tbody.find("tr.k-master-row").first());
        }
    </script>

    <script>
        // Warn user if they try to navigate away with unsaved changes
        $(document).on("change", ".k-grid input, .k-grid select", function () {
            var grid = $(this).closest(".k-grid").data("kendoGrid");
            if (grid && grid.dataSource.hasChanges()) {
                window.onbeforeunload = function () {
                    return "change called. You have unsaved changes. Are you sure you want to leave?";
                };
            } else {
                window.onbeforeunload = null;
            }
        });
    </script>
}
_Layout.cshtml :
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] Cost Estimation System</title>

    <environment names="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
       @*  <link rel="stylesheet" href="~/css/site.css" /> *@
    </environment>

    <environment names="Staging,Production">
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
              asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" crossorigin="anonymous" />
        <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
    </environment>
    <link href="https://kendo.cdn.telerik.com/2021.2.511/styles/kendo.bootstrap-v4.min.css" rel="stylesheet" type="text/css" crossorigin="anonymous" />
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="https://kendo.cdn.telerik.com/2021.2.511/js/jszip.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2021.2.511/js/kendo.all.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2021.2.511/js/kendo.aspnetmvc.min.js"></script>
    <!-- Kendo UI CSS -->
    <link href="https://kendo.cdn.telerik.com/2021.2.511/styles/kendo.common.min.css" rel="stylesheet" crossorigin="anonymous" />
    <link href="https://kendo.cdn.telerik.com/2021.2.511/styles/kendo.default-v2.min.css" rel="stylesheet" crossorigin="anonymous" />
    <link href="https://kendo.cdn.telerik.com/2021.2.511/styles/kendo.bootstrap-v4.min.css" rel="stylesheet" crossorigin="anonymous" />
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
   @*  <script src="@Url.Content("~/js/site.js")"></script> *@
    
    
    <link rel="stylesheet" href="~/css/header-footer.css" />
    <link rel="stylesheet" href="~/css/telerik-styles-min.css" />
        

</head>
<body>
    @* <nav class="navbar navbar-dark bg-dark">
    <div class="container-fluid d-flex justify-content-between p-0">
    <a class="navbar-brand d-flex align-items-center" asp-controller="Home" asp-action="Index">Your .NET Core Application</a>
    <button id="configure" class="k-rpanel-toggle k-button k-primary btn-toggle">
    <span class="k-icon k-i-menu"></span>
    </button>
    </div>
    </nav> *@
    <header>
        <div class="header_container-new">
            <div class="logo">
                <img src="~/images/ttc-main-logo.png" alt="Logo" />
            </div>
            <div class="app-name">
                <h4>Cost Estimate System</h4>
            </div>
            <div class="user-info-new">
                <img src="~/images/user.jpg" alt="User" class="user-image" />
                <span class="user-name"> | User : </span>
                <span class="user-name">Sandeep Kanao | </span>
                <span class="user-name">Role: </span>
                <span class="user-name">@ViewBag.RoleName</span>
               
            </div>
        </div>
    </header>
    <div id="responsive-panel" class="navbar navbar-dark bg-light mb-4">
        <kendo-responsivepanel name="responsive-panel" auto-close="false" breakpoint="768" orientation="top">
            @* <div>
            UserName : @ViewBag.UserName;
            RoleId : @ViewBag.RoleId;
            RoleName : @ViewBag.RoleName;
            </div> *@
            @(Html.Kendo().Menu()
                .Name("Menu")
                .Items(items =>
                {
                    items.Add().Text("Home").Action("Index", "Home", new { area = "" }).ImageUrl(Url.Content("~/images/home.png"));
                    items.Add().Text("Material Parts").ImageUrl(Url.Content("~/images/part.png"))

                    .Items(children =>
                    {
                        children.Add().Text("Stock Coded Parts")
                    .Action("Index", "StockCodedParts", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                        children.Add().Text(" Non Stock Coded Parts")
                    .Action("NscPartsUsedIndex", "NscPartsUsed").ImageUrl(Url.Content("~/images/part.png"));

                        children.Add().Text(" Rebuilt Parts")
                    .Action("RebuiltPartsIndex", "RebuiltParts", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));
                    });
                    
                    items.Add().Text("Vehicles").Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/vehicle.png"));

                    items.Add().Text("BuyOrMake").Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/buy.png"));
                    items.Add().Text("Reports").Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/home.png"));
                   @*  if(@ViewBag.RoleId == 1) *@ 
                    {
                        items.Add().Text("Administration").Action("Index", "UserManagementGrid", new { area = "" }).ImageUrl(Url.Content("~/images/admin.png"))
                        .Items(children =>
                        {
                            children.Add().Text("User Management")
                    .Action("Index", "UserManagementGrid", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text("Role Management")
                    .Action("Index", "Role", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text("Site Management")
                    .Action("Index", "Site", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text(" List Of Vehicles")
                    .Action("Index", "Common").ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text("Change Settings")
                    .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));
                        });
                    }

                    items.Add().Text("Help").Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));
                })
                .HighlightPath(true)
                .Orientation(MenuOrientation.Horizontal)

                .HtmlAttributes(new { @class = "rounded-menu" })
                )
        </kendo-responsivepanel>
    </div>

    <main>
        <div class="container-fluid">
            @RenderBody()
        </div>



    </main>

    <footer class="border-top footer text-muted">
        <div class="footer-container">
            <div class="footer-left">
                &copy; TTC 2024 - Bus Maintenance Cost Estimate System | System No.: 0105
            </div>
            <div class="footer-right">
                Build Number: 1  | Build Date: 12/05/2024 | Version: 0.1
            </div>
        </div>
    </footer>

    <environment names="Development">
        <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
       
    </environment>
    <environment names="Staging,Production">
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"
                asp-fallback-src="~/lib/bootstrap/dist/js/bootstrap.min.js"
                asp-fallback-test="window.jQuery && window.jQuery.fn && window.jQuery.fn.modal"></script>
    </environment>

    @RenderSection("scripts", required: false)
</body>
</html>
