@model BCES.Models.Parts.RebuiltPartEstimates

<!-- Include the necessary Kendo script and style references -->
@section Scripts {
    @* Add Kendo UI scripts *@
}

@section Styles {
    @* Add Kendo UI styles *@
}

<div id="tilelayout-container">
    @(Html.Kendo().TileLayout()
        .Name("RebuiltPartEstimatesLayout")
        .Columns(3)
        .RowsHeight("120px")
        .ColumnsWidth("300px")
        .Containers(c => {
            c.Add().Header(h => h.Text("Job Details"))
                .BodyTemplateId("job-details-template")
                .ColSpan(3)
                .RowSpan(1);

            c.Add().Header(h => h.Text("Labour"))
                .BodyTemplateId("labour-grid-template")
                .ColSpan(2)
                .RowSpan(3);

            c.Add().Header(h => h.Text("Cost Summary"))
                .BodyTemplateId("cost-summary-template")
                .ColSpan(1)
                .RowSpan(3);
        })
        .Reorderable(true)
        .Resizable(true)
    )
</div>

<script id="job-details-template" type="text/x-kendo-template">
    <div class="job-details">
        <p>Job Number: #= JobNumber #</p>
        <p>Rebuilt Number: #= RebuiltNumber #</p>
        <p>Keyword: #= Keyword #</p>
    </div>
</script>

<script id="labour-grid-template" type="text/x-kendo-template">
    @(Html.Kendo().Grid<BCES.Models.Parts.LabourViewModel>()
        .Name("LabourGrid")
        .Columns(columns => {
            columns.Bound(m => m.LabourType).Title("Type");
            columns.Bound(m => m.Hours).Title("Hours").Width(80);
            columns.Command(cmd => {
                cmd.Edit().Text("Edit");
                cmd.Destroy().Text("Delete");
            }).Width(200);
        })
        .Editable(edit => edit.Mode(GridEditMode.InLine))
        .Scrollable()
        .DataSource(ds => ds
            .Ajax()
            .Read(read => read.Action("GetLabour", "RebuiltParts"))
            .Update(update => update.Action("UpdateLabour", "RebuiltParts"))
            .Create(create => create.Action("CreateLabour", "RebuiltParts"))
            .Destroy(delete => delete.Action("DeleteLabour", "RebuiltParts"))
        )
        .ToClientTemplate()
    )
</script>

<script id="cost-summary-template" type="text/x-kendo-template">
    <div class="cost-summary">
        <p>Labour Total: #= LabourTotal #</p>
        <p>Material Cost: #= MaterialCost #</p>
        <p>Total Cost: #= TotalCost #</p>
    </div>
</script>

<div class="buttons-panel">
    <button id="btnArchive" class="k-button">Archive</button>
    <button id="btnSave" class="k-button">Save</button>
    <button id="btnUpdate" class="k-button">Update</button>
</div>

<script>
    $(document).ready(function () {
        $("#btnArchive").click(function () {
            postAction("Archive");
        });
        $("#btnSave").click(function () {
            postAction("Save");
        });
        $("#btnUpdate").click(function () {
            postAction("Update");
        });

        function postAction(action) {
            $.post("/Parts/RebuiltParts/ActionHandler", { action: action }, function (response) {
                alert(response.message);
            });
        }
    });
</script>
