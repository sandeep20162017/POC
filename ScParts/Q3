error :
VehiclesIndex:1065 Grid or its dataSource is undefined. Skipping data reload.
Additional details :
    @model IEnumerable<BCES.Models.Parts.StockCodedPartsViewModel>

@{
    ViewData["Title"] = "Stock Coded Parts Details";
    var scGridName = $"ScPartsMaterialDetailsRebuiltPartsGrid_{ViewBag.PartNum}";
    
}
<input type="hidden" id="scGridNameField" value="@scGridName" /> @* save gridname in hidden field for JS *@
<h6>Stock Coded Parts Used</h6>

@(
Html.Kendo().Grid<BCES.Models.Parts.StockCodedPartsViewModel>()    
     .Name($"ScPartsMaterialDetailsRebuiltPartsGrid_{ViewBag.PartNum}")  
      .Events(events => events
                    .DataBound("onScGridDataBound")

                )
    .Columns(columns =>
    {
       // columns.Bound(c => c.MMSStockCode).Title("Stock Code").IncludeInMenu(false).EditorTemplateName("ComboBoxEditor").Width(70);
        columns.Bound(c => c.MMSStockCode)
                        .Title("Stock Code")
                        .HtmlAttributes(new { @class = "stock-code-cell", data_field = "MMSStockCode" })
                        .IncludeInMenu(false)
                        .EditorTemplateName("ComboBoxEditor")
                        .Width(70);
      @*  columns.Command(command =>
        {
            command.Custom("Populate Details").Click("refreshScPartDetails").IconClass("k-i-reload").HtmlAttributes(new { @class = "k-button k-button-icontext" });

        }).Width(60); *@
        //  columns.Bound(c => c.PartType).Title("Part Type");
        //  columns.Bound(c => c.Keyword).Title("Keyword").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).EditorTemplateName("AutoCompleteEditor");
        //   columns.Bound(c => c.DetailedDesc).Title("Part Description");
        //  columns.Bound(c => c.UnitCost).Title("Unit Cost").Width(30);
        columns.Bound(c => c.Qty).Title("Qty").Width(20);
        columns.Bound(c => c.Percentage).Title("%").Width(50);
        columns.Bound(c => c.LinkCode).Hidden(true);
        columns.Bound(c => c.CC).Title("CC").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).EditorTemplateName("ComboBoxEditor").Width(40); ;
             
        columns.Bound(c => c.CoreCost).Title("Core Cost").Format("{0:N2}").Width(100); 
     //   columns.Bound(c => c.TotalCost).Title("Total Cost").Format("{0:N2}").Width(100); ;
      
       
        // columns.Bound(c => c.DateRevised).Title("Date Revised");
       @*  columns.Command(command =>
        {
            if (@ViewBag.RoleId == 1)
            {
               // command.Edit().Text(" ").IconClass("k-icon k-i-edit").HtmlAttributes(new { title = "Edit" }); // Edit button with tooltip
            }
            if (@ViewBag.RoleId == 1)
            {

                command.Destroy().Text(" ").IconClass("k-icon k-i-delete").HtmlAttributes(new { title = "Delete" }); // Delete button with tooltip
            }
        }).Width(100); *@
        columns.Command(command =>
        {
            if (@ViewBag.RoleId == 1)
            {
                // command.Edit().Text(" ").IconClass("k-icon k-i-edit").HtmlAttributes(new { title = "Edit" }); // Edit button with tooltip
            }
            if (@ViewBag.RoleId == 1)
            {

                command.Custom("Delete")
                 .Click("showDeleteConfirmation")
                 .Text(" ")
                 .IconClass("k-icon k-i-delete")
                 .HtmlAttributes(new
                 {
                     @class = "text-danger",
                     title = "Delete",
                     data_grid = $"ScPartsMaterialDetailsRebuiltPartsGrid_{ViewBag.PartNum}",
                     data_url = Url.Action("DeleteScPartsUsedInEstimates", "ScPartsUsedInEstimates"),
                     data_id_field = "id",
                     //  data_mmsstockcode_field = "parentPartId",
                     data_grid_type = "SCPartGrid"
                 });
            }
        }).Width(100);
    })
  
     .ToolBar(toolbar =>
    {
        if (@ViewBag.RoleId == 1)
        {
            toolbar.Create();
            toolbar.Save();
        }
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Sortable()
    .Resizable(r => r.Columns(true))
    //.Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(c => c.MMSStockCode); 
            model.Field(c => c.MMSStockCode);
         //   model.Field(c => c.PartType).Editable(false);
         //   model.Field(c => c.DetailedDesc).Editable(false);
        })

        .Events(events =>
        {
            events.RequestEnd("onScRequestEnd");
            events.Error("onDataSourceError");
        })

        .Read(read => read.Url(Url.Action("GetScPartsUsedInEstimates", "ScPartsUsedInEstimates") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Get))
        .Create(create => create.Url(Url.Action("CreateScPartsUsedInEstimates", "ScPartsUsedInEstimates") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
        .Update(update => update.Url(Url.Action("UpdateScPartsUsedInEstimates", "ScPartsUsedInEstimates") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
        .Destroy(delete => delete.Url(Url.Action("DeleteScPartsUsedInEstimates", "ScPartsUsedInEstimates") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
    )
)

@(Html.Kendo().Dialog()
    .Name("partDetailsDialog")
    .Title("Part Details")
    .Width(400)
    .Modal(true)
    .Visible(false)
    .Actions(actions =>
    {
        actions.Add().Text("Close").Primary(true);
    })
)

