I have Telerick ASP.NET core grid. I need to display 'USAVED' when row is getting edited (iSDirty) and isNew. Following JS correctly renders
UNSAVED for a new row but not for the edited row.
@(Html.Kendo().Grid<VehicleViewModel>()
.Name($"VehicleGrid")    
.Columns(columns =>
{
columns.Bound(c => c.VehicleListId).Title("Estimate #")

.ClientTemplate("#= VehicleListId && VehicleListId !== 0 ? VehicleListId : '(System Generated)' #")
.Filterable(ftb => ftb.Cell(cell => {
cell.Operator("eq"); // Equal to
cell.ShowOperators(true); // Hide the operator dropdown
}))
...
 .Editable(editable => editable.Mode(GridEditMode.InCell))
 .Events(events => events
 .ExcelExport("onExcelExport")
 .DetailExpand("onDetailExpand")
 .DetailCollapse("onDetailCollapse")
 .DataBound("onVehGridDataBound")
 .Save("onVehGridSave")
// .Edit("onVehEdit") 
 )
JS :
function onVehGridDataBound(e) {
    // Maintain new row styling after paging/sorting
    e.sender.items().each(function () {
        const dataItem = e.sender.dataItem(this);
        if (dataItem.isNew()) {
            $(this).addClass("newly-added-row");
        }
    });
    //ssk12 - Add/Save buttons
    const grid = e.sender;
    const ds = grid.dataSource;
    unsavedChangesExist = false;

    // Clear previous styling
    $(".unsaved-row, .unsaved-cell, .unsaved-badge").remove();

    // Apply new styling
    ds.view().forEach(item => {
        const row = grid.tbody.find(`tr[data-uid='${item.uid}']`);

        if (item.dirty || item.isNew()) {
            // Add row class
            row.addClass("unsaved-row");

            // Add badge to first cell
            const firstCell = row.find("td:first");
            if (!firstCell.find(".unsaved-badge").length) {
                firstCell.append(`<span class="unsaved-badge">UNSAVED</span>`);
            }

            // Highlight modified cells
            Object.keys(item.modified || {}).forEach(field => {
                row.find(`td[data-field='${field}']`)
                    .addClass("unsaved-cell");
            });

            unsavedChangesExist = true;
        }
    });

    // Update tab indicator
    const tabStrip = $("#vehicleTabStrip").data("kendoTabStrip");
    if (tabStrip?.items().length) {
        $(tabStrip.items()[0].element)
            .find(".k-link")
            .toggleClass("has-unsaved", unsavedChangesExist);
    }

    //ssk12 start - Disable Save/Add
    var gridName = grid.element.attr('id'); //  like "LabourDetailsGrid_123"
    var originalAddCommand = null;


    // Initialize only once
    if (!originalAddCommand) {
        originalAddCommand = grid.addRow;
    }

    // Modify add command behavior
    grid.addRow = function () {
        if (!grid.dataSource.hasChanges()) {
            originalAddCommand.call(grid);
        }
    };

    grid.dataSource.bind("change", function () {
        updateToolbarButtons(gridName);
    });

    updateToolbarButtons(gridName);

    //ssk12 end - Disable Save/Add
}
