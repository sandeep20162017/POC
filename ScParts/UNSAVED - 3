ðŸŽ¨ CSS: Style the "UNSAVED" badge (small red box)
css
Copy
Edit
.unsaved-badge {
    position: absolute;
    background-color: #dc3545; /* Bootstrap red */
    color: #fff;
    padding: 2px 6px;
    font-size: 10px;
    font-weight: bold;
    border-radius: 3px;
    z-index: 999;
    transition: left 0.1s ease-in-out; /* smooth movement */
    pointer-events: none;
}
ðŸ§  JavaScript: Attach to grid and handle dynamic badge placement
javascript
Copy
Edit
function onVehGridDataBound(e) {
    const grid = e.sender;
    const dataItems = grid.dataSource.view();
    const gridContent = grid.wrapper.find('.k-grid-content');

    // Clean up previous state
    $('.unsaved-badge').remove();
    grid.tbody.find('tr').removeClass('unsaved-new unsaved-edited');

    dataItems.forEach(item => {
        const row = grid.tbody.find(`tr[data-uid="${item.uid}"]`);
        const isNew = item.isNew();
        const isDirty = item.dirty;

        if (isNew || isDirty) {
            row.addClass(isNew ? 'unsaved-new' : 'unsaved-edited');
            const firstCell = row.find('td:first');

            const $badge = $('<div class="unsaved-badge">UNSAVED</div>').attr('data-uid', item.uid);
            grid.wrapper.append($badge);
            positionUnsavedBadge($badge, firstCell, gridContent);
        }
    });

    // Bind scroll event only once
    gridContent.off('scroll.unsaved').on('scroll.unsaved', function () {
        $('.unsaved-badge').each(function () {
            const uid = $(this).attr('data-uid');
            const row = grid.tbody.find(`tr[data-uid="${uid}"]`);
            const firstCell = row.find('td:first');
            positionUnsavedBadge($(this), firstCell, gridContent);
        });
    });
}

function positionUnsavedBadge(badge, cell, gridContent) {
    const gridOffset = gridContent.offset();
    const cellOffset = cell.offset();
    const scrollTop = gridContent.scrollTop();
    const scrollLeft = gridContent.scrollLeft();

    badge.css({
        top: cellOffset.top - gridOffset.top + cell.outerHeight() + 3,
        left: cellOffset.left - gridOffset.left - scrollLeft + 5
    });
}
