Pls assist fixing following error. Also make sure each coulmn has space. Give me fulll filewith changes along  with existing functionality
public IActionResult ScDetailsPartial(string id, string gridType)
{
    ViewBag.PartNum = id;
    if (gridType == null)
    {
        ViewBag.GridType = "VehicleGrid";
    }
    else
    {
        ViewBag.GridType = gridType;

    }

    var model = new List<BCES.Models.Parts.StockCodedPartsViewModel> { };

    return PartialView("_ScPartsUsed", model);

}
ScDetailsPartial :
Payload :
id: 4321
gridType: VehicleGrid
Response :

<div id="scPartsContainer">
    <h6>Stock Coded Parts Used</h6>

    <!-- Grid Container -->
    <div id="scGridContainer">
        <div id="ScPartsGrid_4321" name="ScPartsGrid_4321"></div><script>kendo.syncReady(function(){jQuery("#ScPartsGrid_4321").kendoGrid({"columns":[{"title":"Stock Code","template":"\u003ca class=\u0027sc-link\u0027 data-sc-code=\u0027#= MMSStockCode #\u0027 href=\u0027javascript:void(0)\u0027\u003e#= MMSStockCode #\u003c/a\u003e","field":"MMSStockCode","filterable":{"checkAll":false},"encoded":true},{"title":"Part Type","field":"PartType","filterable":{"checkAll":false},"encoded":true},{"title":"Supplier Num","field":"OrigSupplierNum","filterable":{"checkAll":false},"encoded":true},{"title":"Supplier Name","field":"OrigSupplierName","filterable":{"checkAll":false},"encoded":true},{"title":"Unit Cost","field":"UnitCost","format":"{0:c}","filterable":{"checkAll":false},"encoded":true},{"title":"Qty","field":"Qty","filterable":{"checkAll":false},"encoded":true},{"title":"Total Cost","field":"TotalCost","format":"{0:c}","filterable":{"checkAll":false},"encoded":true},{"title":"Actions","command":[{"attr":{"class":"sc-delete-btn"},"text":"Delete","name":"Delete"}]}],"scrollable":false,"dataSource":{"type":(function(){if(kendo.data.transports['aspnetmvc-ajax']){return 'aspnetmvc-ajax';} else{throw new Error('The kendo.aspnetmvc.min.js script is not included.');}})(),"transport":{"read":{"url":"/ScPartsUsedInEstimates/GetScPartsUsedInEstimates/4321?gridType=VehicleGrid"},"prefix":""},"serverPaging":true,"serverSorting":true,"serverFiltering":true,"serverGrouping":true,"serverAggregates":true,"filter":[],"schema":{"data":"Data","total":"Total","errors":"Errors","model":{"fields":{"UnitCost":{"type":"number","defaultValue":null},"Qty":{"type":"string"},"Percentage":{"type":"string"},"CoreCost":{"type":"number","defaultValue":null},"TotalCost":{"type":"number","defaultValue":null},"CC":{"type":"string"},"Keyword":{"type":"string"},"MMSStockCode":{"type":"string"},"CorePartNumber":{"type":"string"},"MmsCost":{"type":"number","defaultValue":null},"PartType":{"type":"string"},"JobNumber":{"type":"string"},"DetailedDesc":{"type":"string"},"DateEntered":{"type":"string"},"CoreCharge":{"type":"number","defaultValue":null},"PartCost":{"type":"number","defaultValue":null},"MmsNewCost":{"type":"number","defaultValue":null},"OrigSupplierNum":{"type":"string"},"OrigSupplierName":{"type":"string"},"CostSavingPerUnitDummy":{"type":"string"},"PercentageSavingPerUnitDummy":{"type":"string"},"LinkCode":{"type":"string"},"LastModifiedBy":{"type":"string"},"LastModifiedDate":{"type":"date","defaultValue":null}}}}}});});</script>
    </div>

    <button id="scAddNew" class="k-button k-primary" style="margin-bottom:8px;">
        <span class="k-icon k-i-plus"></span> Add New Stock Coded Part
    </button>

    <form id="scDetailForm" style="display:none;">
        <div class="section-title">Part Details</div>
        <!-- Row 1 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">StockCode</label>
                <input id="scStockCode" class="stock-field" readonly style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">PartType</label>
                <input id="scPartType" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Supplier Num</label>
                <input id="scSupplierNum" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
        </div>
        <!-- Row 2 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Supplier Name</label>
                <input id="scSupplierName" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Part Description</label>
                <input id="scPartDesc" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Part Unit Cost</label>
                <input id="scUnitCost" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
        </div>
        <!-- Row 3 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Core Cost</label>
                <input id="scCoreCost" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Cost Centre</label>
                <input id="scCostCentre" class="stock-field" style="width:100%; height:28px;" />
            </div>
        </div>
        <!-- Row 4 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Qty</label>
                <input id="scQty" class="stock-field" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Percentage</label>
                <input id="scPerc" class="stock-field" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Total Cost</label>
                <input id="scTotCost" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
        </div>
        <!-- Row 5 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Last Modified By</label>
                <input id="scModBy" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Last Modified Date</label>
                <input id="scModDate" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
        </div>
        <div style="margin-top:8px;">
            <button id="scUpdateBtn" type="button" class="k-button k-primary">Update</button>
            <button id="scCancelBtn" type="button" class="k-button">Cancel</button>
        </div>
    </form>
</div>

<style>
    /* Reuse VehPopUp styles */
    .form-container {
        background: white;
        padding: 12px;
        border-radius: 4px;
        box-shadow: 0 1px 4px rgba(0,0,0,0.05);
    }

    .section-title {
        font-size: 12px;
        color: #2c3e50;
        margin-bottom: 6px;
        padding-bottom: 4px;
        border-bottom: 1px solid #3498db;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .form-row {
        display: flex;
        gap: 8px;
        margin-bottom: 6px;
        align-items: flex-start;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        flex: 1;
    }

    .form-label {
        font-size: 11px;
        color: #2c3e50;
        font-weight: 600;
        margin-bottom: 3px;
    }

    .stock-field, .read-only {
        border: 1px solid #d1d5db;
        border-radius: 3px;
        padding: 4px 8px;
        min-height: 28px;
        font-size: 12px;
    }

    .read-only {
        background: #f8fafc !important;
        color: #4b5563 !important;
        cursor: not-allowed !important;
    }

    h6 {
        font-size: 13px;
        color: #2c3e50;
        margin-bottom: 8px;
        border-bottom: 1px solid #3498db;
        padding-bottom: 4px;
    }

    .k-button {
        padding: 4px 6px;
        font-size: 12px;
        height: 28px;
        border-radius: 3px;
    }

        .k-button.k-primary {
            background: #3f51b5;
            color: white;
            border-color: #3f51b5;
        }

    #scPartsContainer {
        padding: 15px;
        background-color: #f9fafb;
        border-radius: 6px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    }
</style>

<script>
    // Self-executing function to encapsulate all stock-coded parts functionality
    (function() {
            // Private variables for this instance
            const partNum = "4321";
            const gridName = "ScPartsGrid_4321";
            const container = $("#scPartsContainer");

            // Initialize stock-coded parts functionality
            function initStockCodedParts() {
                bindStockCodedEvents();
                initializeStockCodedGrid();
            }

            // Initialize grid with proper parameters
            function initializeStockCodedGrid() {
                const grid = container.find("#" + gridName).data("kendoGrid");
                if (grid) {
                    grid.dataSource.read({
                        id: partNum,
                        gridType: "VehicleGrid"
                    });
                }
            }

            // Bind all event handlers for stock-coded parts
            function bindStockCodedEvents() {
                // Delegated event for grid links
                container.on('click', '.sc-link', function(e) {
                    e.preventDefault();
                    const stockCode = $(this).data('sc-code');
                    loadStockCodedPartDetails(stockCode);
                });

                // Delegated event for delete buttons
                container.on('click', '.sc-delete-btn', function(e) {
                    e.preventDefault();
                    const grid = container.find("#" + gridName).data("kendoGrid");
                    const row = $(this).closest("tr");
                    const dataItem = grid.dataItem(row);
                    onStockCodedDeleteClick(dataItem);
                });

                // Add new button
                container.find("#scAddNew").click(showStockCodedAddForm);

                // Cancel button
                container.find("#scCancelBtn").click(hideStockCodedDetailForm);

                // Update/Save button
                container.find("#scUpdateBtn").click(saveStockCodedPart);

                // Auto-calculate total cost
                container.find("#scQty, #scPerc").on("change input", calculateStockCodedTotalCost);
            }

            // Delete handler for stock-coded parts
            function onStockCodedDeleteClick(dataItem) {
                kendo.confirm("Delete this stock-coded part?").then(function() {
                    $.ajax({
                        url: '/ScPartsUsedInEstimates/DeleteScPartsUsedInEstimates',
                        type: 'POST',
                        data: {
                            id: dataItem.MMSStockCode,
                            parentPartId: partNum,
                            gridType: "VehicleGrid"
                        },
                        success: function() {
                            const grid = container.find("#" + gridName).data("kendoGrid");
                            grid.dataSource.read({
                                id: partNum,
                                gridType: "VehicleGrid"
                            });
                            kendo.alert("Stock-coded part deleted successfully");
                        },
                        error: function(xhr) {
                            kendo.alert("Delete failed: " + xhr.responseText);
                        }
                    });
                });
            }

            // Load stock-coded part details via AJAX
            function loadStockCodedPartDetails(stockCode) {
                container.find(".sc-link").prop("disabled", true);

                $.get('/ScPartsUsedInEstimates/GetScPartUsedDetail', {
                    mmsStockCode: stockCode,
                    vehicleListId: partNum
                }, function(data) {
                    if (data) {
                        container.find("#scStockCode").val(data.MMSStockCode);
                        container.find("#scPartType").val(data.PartType);
                        container.find("#scSupplierNum").val(data.OrigSupplierNum);
                        container.find("#scSupplierName").val(data.OrigSupplierName);
                        container.find("#scUnitCost").val(data.UnitCost);
                        container.find("#scQty").val(data.Qty);
                        container.find("#scTotCost").val(data.TotalCost);
                        container.find("#scCoreCost").val(data.CoreCost);
                        container.find("#scCostCentre").val(data.CostCentre);
                        container.find("#scPerc").val(data.Percentage);
                        container.find("#scPartDesc").val(data.PartDescription);
                        container.find("#scModBy").val(data.ModBy);
                        container.find("#scModDate").val(data.ModDate ? new Date(data.ModDate).toLocaleString() : "");

                        container.find("#scDetailForm").data("mode", "edit");
                        showStockCodedDetailForm();
                    }
                }).always(function() {
                    container.find(".sc-link").prop("disabled", false);
                });
            }

            // Show form for adding new stock-coded part
            function showStockCodedAddForm() {
                clearStockCodedDetailForm();
                container.find("#scDetailForm").data("mode", "add");
                showStockCodedDetailForm();
            }

            // Save stock-coded part via AJAX
            function saveStockCodedPart() {
                const mode = container.find("#scDetailForm").data("mode");
                const isAdd = mode === "add";

                const partData = {
                    MMSStockCode: isAdd ? prompt("Enter Stock Code:") : container.find("#scStockCode").val(),
                    CC: container.find("#scCostCentre").val(),
                    Qty: container.find("#scQty").val(),
                    Percentage: container.find("#scPerc").val(),
                    UnitCost: container.find("#scUnitCost").val(),
                    CoreCost: container.find("#scCoreCost").val(),
                    LinkCode: partNum
                };

                if (isAdd && !partData.MMSStockCode) {
                    kendo.alert("Stock Code is required for stock-coded parts!");
                    return;
                }

                const url = isAdd
                    ? '/ScPartsUsedInEstimates/CreateScPartsUsedInEstimates'
                    : '/ScPartsUsedInEstimates/UpdateScPartsUsedInEstimates';

                const method = 'POST';

                $.ajax({
                    url: url,
                    type: method,
                    data: {
                        id: partNum,
                        gridType: "VehicleGrid",
                        model: partData
                    },
                    success: function() {
                        const grid = container.find("#" + gridName).data("kendoGrid");
                        grid.dataSource.read({
                            id: partNum,
                            gridType: "VehicleGrid"
                        });
                        hideStockCodedDetailForm();
                        kendo.alert("Stock-coded part saved successfully");
                    },
                    error: function(xhr) {
                        kendo.alert("Save failed: " + xhr.responseText);
                    }
                });
            }

            // Calculate total cost for stock-coded part
            function calculateStockCodedTotalCost() {
                const qty = parseInt(container.find("#scQty").val()) || 0;
                const unitCost = parseFloat(container.find("#scUnitCost").val()) || 0;
                const perc = parseInt(container.find("#scPerc").val()) || 0;
                const total = qty * unitCost * (1 + perc/100);
                container.find("#scTotCost").val(total.toFixed(2));
            }

            // Clear stock-coded part form
            function clearStockCodedDetailForm() {
                container.find("#scDetailForm input").val("");
            }

            // Show stock-coded part form
            function showStockCodedDetailForm() {
                container.find("#scDetailForm").show();
            }

            // Hide stock-coded part form
            function hideStockCodedDetailForm() {
                container.find("#scDetailForm").hide();
            }

            // Initialize when document is ready
            $(document).ready(function() {
                initStockCodedParts();
            });
        })();
</script>
GetVehicleById :
Payload :
id: 4321
Response :

<div class="popup-container">
    <div class="popup-header">
        <div class="popup-title">Estimate #4321</div>
        <div class="tab-actions">
            <button id="btnEdit" class="k-button" style="">
                <span class="k-icon k-i-edit"></span> Edit
            </button>
            <button id="btnSave" class="k-button k-primary">
                <span class="k-icon k-i-save"></span> Save
            </button>
        </div>
    </div>

    <div class="form-container">
        <form id="vehicleForm">
            <input data-val="true" data-val-required="The VehicleListId field is required." id="VehicleListId" name="VehicleListId" type="hidden" value="4321" />

            <!-- Vehicle Information Section -->
            <div class="section-title">Vehicle Information</div>

            <!-- Row 1: Estimate #, Vehicle Series, Quantity -->
            <div class="form-row">
                <div class="form-group">
                    <label class="form-label" for="VehicleListId">Estimate #</label>
                    <input class="k-textbox read-only" data-val="true" data-val-required="The VehicleListId field is required." id="VehicleListId" name="VehicleListId" readonly="readonly" style="width:100%; padding: 4px 6px; height: 28px;" type="text" value="4321" /><script>kendo.syncReady(function(){jQuery("#VehicleListId").kendoTextBox({"value":"4321"});});</script>
                </div>

                <div class="form-group">
                    <label class="form-label required-label" for="VehSeriesCode">Vehicle Series</label>
                    

<input class="auto-lock-column required-cell" data-column="VehSeriesCode" data-lock-map="" data-role="combobox" data-value-primitive="true" id="VehSeriesCode" name="VehSeriesCode" required="required" type="text" value="ELF  MODEL 122" /><script>kendo.syncReady(function(){jQuery("#VehSeriesCode").kendoComboBox({"dataBound":onComboBoxDataBound,"change":onComboBoxChange,"autoBind":false,"dataTextField":"Text","dataValueField":"Value","enforceMinLength":true,"noDataTemplate":"\u003cdiv style=\u0027color: red; font-weight: bold;\u0027\u003eInvalid Selection\u003c/div\u003e","placeholder":"Search...","template":"#= Text #","text":"ELF  MODEL 122","value":"ELF  MODEL 122","filter":"contains","dataSource":{"transport":{"read":{"url":"/AutoComplete/GetAutoCompleteData","data":getComboBoxParams,"type":"GET"},"prefix":""},"serverFiltering":true,"filter":[],"schema":{"errors":"Errors"}}});});</script>
                </div>

                <div class="form-group">
                    <label class="form-label required-label" for="NumOfVehicles">Quantity</label>
                    <input class="vehicle-field" data-val="true" data-val-required="Field is required" id="NumOfVehicles" name="NumOfVehicles" required="required" style="width:100%; height: 28px;" type="text" value="85" /><script>kendo.syncReady(function(){jQuery("#NumOfVehicles").kendoNumericTextBox({"format":"0","min":1});});</script>
                </div>
            </div>

            <!-- Row 2: Description, SOP Number -->
            <div class="form-row">
                <div class="form-group double-width">
                    <label class="form-label required-label" for="ProjDesc">Description</label>
                    

<input class="auto-lock-column required-cell" data-column="ProjDesc" data-lock-map="" data-role="combobox" data-value-primitive="true" id="ProjDesc" name="ProjDesc" required="required" type="text" value="2015 RE-WHEEL (33) BODY &amp; PAINT (29)" /><script>kendo.syncReady(function(){jQuery("#ProjDesc").kendoComboBox({"dataBound":onComboBoxDataBound,"change":onComboBoxChange,"autoBind":false,"dataTextField":"Text","dataValueField":"Value","enforceMinLength":true,"noDataTemplate":"\u003cdiv style=\u0027color: red; font-weight: bold;\u0027\u003eInvalid Selection\u003c/div\u003e","placeholder":"Search...","template":"#= Text #","text":"2015 RE-WHEEL (33) BODY \u0026 PAINT (29)","value":"2015 RE-WHEEL (33) BODY \u0026 PAINT (29)","filter":"contains","dataSource":{"transport":{"read":{"url":"/AutoComplete/GetAutoCompleteData","data":getComboBoxParams,"type":"GET"},"prefix":""},"serverFiltering":true,"filter":[],"schema":{"errors":"Errors"}}});});</script>
                </div>

                <div class="form-group">
                    <label class="form-label" for="Sopnumber">SOP Number</label>
                    <input class="vehicle-field" data-val="true" data-val-length="The field Sopnumber must be a string with a maximum length of 30." data-val-length-max="30" id="Sopnumber" maxlength="30" name="Sopnumber" style="width:100%; padding: 4px 6px; height: 28px;" type="text" value="TEST10" /><script>kendo.syncReady(function(){jQuery("#Sopnumber").kendoTextBox({"value":"TEST10"});});</script>
                </div>
            </div>

            <!-- Specifications Section -->
            <div class="section-title">Specifications</div>

            <!-- Row 3: Make, Model, Year -->
            <div class="form-row">
                <div class="form-group">
                    <label class="form-label" for="Make">Make</label>
                    

<input class="auto-lock-column required-cell" data-column="Make" data-lock-map="" data-role="combobox" data-value-primitive="true" id="Make" name="Make" required="required" type="text" value="FLYER" /><script>kendo.syncReady(function(){jQuery("#Make").kendoComboBox({"dataBound":onComboBoxDataBound,"change":onComboBoxChange,"autoBind":false,"dataTextField":"Text","dataValueField":"Value","enforceMinLength":true,"noDataTemplate":"\u003cdiv style=\u0027color: red; font-weight: bold;\u0027\u003eInvalid Selection\u003c/div\u003e","placeholder":"Search...","template":"#= Text #","text":"FLYER","value":"FLYER","filter":"contains","dataSource":{"transport":{"read":{"url":"/AutoComplete/GetAutoCompleteData","data":getComboBoxParams,"type":"GET"},"prefix":""},"serverFiltering":true,"filter":[],"schema":{"errors":"Errors"}}});});</script>
                </div>

                <div class="form-group">
                    <label class="form-label" for="VehModel">Model</label>
                    

<input class="auto-lock-column required-cell" data-column="VehModel" data-lock-map="" data-role="combobox" data-value-primitive="true" id="VehModel" name="VehModel" required="required" type="text" value="" /><script>kendo.syncReady(function(){jQuery("#VehModel").kendoComboBox({"dataBound":onComboBoxDataBound,"change":onComboBoxChange,"autoBind":false,"dataTextField":"Text","dataValueField":"Value","enforceMinLength":true,"noDataTemplate":"\u003cdiv style=\u0027color: red; font-weight: bold;\u0027\u003eInvalid Selection\u003c/div\u003e","placeholder":"Search...","template":"#= Text #","filter":"contains","dataSource":{"transport":{"read":{"url":"/AutoComplete/GetAutoCompleteData","data":getComboBoxParams,"type":"GET"},"prefix":""},"serverFiltering":true,"filter":[],"schema":{"errors":"Errors"}}});});</script>
                </div>

                <div class="form-group">
                    <label class="form-label" for="Year">Year</label>
                    <input class="vehicle-field" data-val="true" data-val-range="Year must be 4 digits" data-val-range-max="2100" data-val-range-min="1900" data-val-required="The Year field is required." id="Year" name="Year" style="width:100%; height: 28px;" type="text" value="1982" /><script>kendo.syncReady(function(){jQuery("#Year").kendoNumericTextBox({"format":"0","max":2026,"min":1900});});</script>
                </div>
            </div>

            <!-- Row 4: Engine, Transmission, Differential -->
            <div class="form-row">
                <div class="form-group">
                    <label class="form-label" for="Engine">Engine</label>
                    

<input class="auto-lock-column required-cell" data-column="Engine" data-lock-map="" data-role="combobox" data-value-primitive="true" id="Engine" name="Engine" required="required" type="text" value="CUMMINS ISL 8.31" /><script>kendo.syncReady(function(){jQuery("#Engine").kendoComboBox({"dataBound":onComboBoxDataBound,"change":onComboBoxChange,"autoBind":false,"dataTextField":"Text","dataValueField":"Value","enforceMinLength":true,"noDataTemplate":"\u003cdiv style=\u0027color: red; font-weight: bold;\u0027\u003eInvalid Selection\u003c/div\u003e","placeholder":"Search...","template":"#= Text #","text":"CUMMINS ISL 8.31","value":"CUMMINS ISL 8.31","filter":"contains","dataSource":{"transport":{"read":{"url":"/AutoComplete/GetAutoCompleteData","data":getComboBoxParams,"type":"GET"},"prefix":""},"serverFiltering":true,"filter":[],"schema":{"errors":"Errors"}}});});</script>
                </div>

                <div class="form-group">
                    <label class="form-label" for="Transmission">Transmission</label>
                    

<input class="auto-lock-column required-cell" data-column="Transmission" data-lock-map="" data-role="combobox" data-value-primitive="true" id="Transmission" name="Transmission" required="required" type="text" value="B400R (BLUE DOT)" /><script>kendo.syncReady(function(){jQuery("#Transmission").kendoComboBox({"dataBound":onComboBoxDataBound,"change":onComboBoxChange,"autoBind":false,"dataTextField":"Text","dataValueField":"Value","enforceMinLength":true,"noDataTemplate":"\u003cdiv style=\u0027color: red; font-weight: bold;\u0027\u003eInvalid Selection\u003c/div\u003e","placeholder":"Search...","template":"#= Text #","text":"B400R (BLUE DOT)","value":"B400R (BLUE DOT)","filter":"contains","dataSource":{"transport":{"read":{"url":"/AutoComplete/GetAutoCompleteData","data":getComboBoxParams,"type":"GET"},"prefix":""},"serverFiltering":true,"filter":[],"schema":{"errors":"Errors"}}});});</script>
                </div>

                <div class="form-group">
                    <label class="form-label" for="Differential">Differential</label>
                    

<input class="auto-lock-column required-cell" data-column="Differential" data-lock-map="" data-role="combobox" data-value-primitive="true" id="Differential" name="Differential" required="required" type="text" value="" /><script>kendo.syncReady(function(){jQuery("#Differential").kendoComboBox({"dataBound":onComboBoxDataBound,"change":onComboBoxChange,"autoBind":false,"dataTextField":"Text","dataValueField":"Value","enforceMinLength":true,"noDataTemplate":"\u003cdiv style=\u0027color: red; font-weight: bold;\u0027\u003eInvalid Selection\u003c/div\u003e","placeholder":"Search...","template":"#= Text #","filter":"contains","dataSource":{"transport":{"read":{"url":"/AutoComplete/GetAutoCompleteData","data":getComboBoxParams,"type":"GET"},"prefix":""},"serverFiltering":true,"filter":[],"schema":{"errors":"Errors"}}});});</script>
                </div>
            </div>

            <!-- Audit Section -->
            <div class="section-title">Audit Information</div>

            <!-- Row 5: Last Modified By, Last Modified Date -->
            <div class="form-row">
                <div class="form-group">
                    <label class="form-label" for="ModifiedLastBy">Last Modified By</label>
                    <input class="k-textbox read-only" data-val="true" data-val-length="The field ModifiedLastBy must be a string with a maximum length of 25." data-val-length-max="25" data-val-required="The ModifiedLastBy field is required." id="ModifiedLastBy" maxlength="25" name="ModifiedLastBy" readonly="readonly" style="width:100%; padding: 4px 6px; height: 28px;" type="text" value="Sandeep Kanao" /><script>kendo.syncReady(function(){jQuery("#ModifiedLastBy").kendoTextBox({"value":"Sandeep Kanao"});});</script>
                </div>

                <div class="form-group">
                    <label class="form-label" for="ModifiedLastDate">Last Modified Date</label>
                    <input class="k-textbox read-only" data-val="true" data-val-required="The ModifiedLastDate field is required." id="ModifiedLastDate" name="ModifiedLastDate" readonly="readonly" style="width:100%; padding: 4px 6px; height: 28px;" type="text" value="4/29/2025 8:14:44 PM" /><script>kendo.syncReady(function(){jQuery("#ModifiedLastDate").kendoTextBox({"value":"4/29/2025 8:14:44 PM"});});</script>
                </div>
            </div>
        </form>
    </div>
</div>

<style>
    /* BASE STYLES - OPTIMIZED FOR 1100x600 */
    .popup-container {
        width: 1100px;
        height: 500px;
        background: white;
        border-radius: 4px;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin: 0 auto;
        display: flex;
        flex-direction: column;
    }

    /* HEADER - ULTRA COMPACT */
    .popup-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 6px 12px;
        background: linear-gradient(to right, #2c3e50, #4a6491);
        color: white;
        flex-shrink: 0;
        height: 32px;
    }

    .popup-title {
        font-size: 14px;
        font-weight: 600;
        letter-spacing: 0.1px;
    }

    .tab-actions {
        display: flex;
        gap: 6px;
    }

    .k-button {
        border-radius: 3px;
        font-weight: 500;
        padding: 4px 8px;
        display: flex;
        align-items: center;
        gap: 4px;
        background-color: #f0f0f0;
        border: 1px solid #ccc;
        color: #333;
        font-size: 12px;
        height: 26px;
    }

        .k-button:hover {
            transform: none;
            box-shadow: 0 1px 2px rgba(0,0,0,0.1);
        }

        .k-button.k-primary {
            background: #3f51b5;
            border-color: #3f51b5;
            color: white;
        }

    /* FORM CONTAINER - FILL SPACE WITHOUT SCROLL */
    .form-container {
        padding: 8px 15px;
        overflow: hidden;
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    /* FORM ROWS - TIGHT SPACING */
    .form-row {
        display: flex;
        gap: 8px;
        margin-bottom: 6px;
        align-items: flex-start;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        flex: 1;
    }

    .double-width {
        flex: 1.8;
    }

    /* FORM ELEMENTS - COMPACT & EFFICIENT */
    .form-label {
        display: block;
        margin-bottom: 3px;
        font-weight: 600;
        color: #2c3e50;
        font-size: 11px;
    }

    .required-label::after {
        content: " *";
        color: #e74c3c;
        font-size: 11px;
    }

    .k-textbox, .k-combobox, .k-numerictextbox {
        width: 100%;
    }

    .k-tabstrip-items .k-item.k-state-disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

        /* INPUT CONTROLS - MINIMAL HEIGHT */
        .k-textbox, .k-numerictextbox .k-numeric-wrap,
        .k-combobox .k-dropdown-wrap {
            border: 1px solid #d1d5db;
            border-radius: 3px;
            padding: 4px 8px;
            background: #fff;
            min-height: 28px;
            font-size: 12px;
        }

            .k-textbox:focus,
            .k-numerictextbox .k-numeric-wrap:focus-within,
            .k-combobox .k-dropdown-wrap:focus-within {
                border-color: #3498db;
                box-shadow: 0 0 0 1px rgba(52, 152, 219, 0.2);
            }

    /* READONLY FIELDS */
    .read-only, .read-only .k-dropdown-wrap,
    .read-only .k-numeric-wrap,
    .read-only .k-input {
        background-color: #f8fafc !important;
        color: #4b5563 !important;
        cursor: not-allowed !important;
    }

        .read-only .k-combobox .k-select {
            display: none !important;
        }

    /* SECTION TITLES - MINIMAL SPACE */
    .section-title {
        font-size: 12px;
        color: #2c3e50;
        margin-bottom: 6px;
        padding-bottom: 4px;
        border-bottom: 1px solid #3498db;
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .section-title::before {
            content: "";
            display: block;
            width: 4px;
            height: 12px;
            background: #3498db;
            border-radius: 2px;
        }
</style>

<script>
    // Initialize form state based on mode (add vs edit)
    $(document).ready(function () {
        const isAddMode = 4321 === 0;

        // For existing records, make all non-audit fields readonly
        if (!isAddMode) {
            $(".vehicle-field").each(function () {
                $(this).prop("readonly", true);
            });
        }

        // Handle Edit button click
        $("#btnEdit").click(function () {
            $(".vehicle-field").prop("readonly", false);
            $(this).hide();
        });
    });

    // Set form readonly state
    function setFormReadOnly(readOnly) {
        $(".vehicle-field").each(function () {
            const input = $(this);
            const widget = kendo.widgetInstance(input, kendo.ui);

            if (widget) {
                if (typeof widget.readonly === 'function') {
                    widget.readonly(readOnly);
                } else if (widget.element && widget.element.is("input")) {
                    input.prop("readonly", readOnly);
                }
            } else {
                input.prop("readonly", readOnly);
            }

            // Toggle readonly class for styling
            input.toggleClass("read-only", readOnly);
        });

        // Special handling for comboboxes
        $("[data-role='combobox']").each(function () {
            const combo = $(this).data("kendoComboBox");
            if (combo) {
                combo.readonly(readOnly);
                combo.enable(!readOnly);
                $(combo.element).toggleClass("read-only", readOnly);
            }
        });
    }
</script>
Error :
https://localhost:44332/ScPartsUsedInEstimates/GetScPartsUsedInEstimates/4321?gridType=VehicleGrid 405 (Method Not Allowed)
