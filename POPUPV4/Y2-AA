1. View File Fixes (_ScPartsUsed.cshtml)
html
@model IEnumerable<BCES.Models.Parts.StockCodedPartsViewModel>
@{
    ViewData["Title"] = "Stock Coded Parts Details";
    var scGrid = $"ScPartsGrid_{ViewBag.PartNum}";
    var partNum = ViewBag.PartNum;
}

<div id="scPartsContainer">
    <h6>Stock Coded Parts Used</h6>

    <!-- Grid Container -->
    <div id="scGridContainer">
        @(Html.Kendo().Grid<BCES.Models.Parts.StockCodedPartsViewModel>()
            .Name(scGrid)
            .Columns(columns =>
            {
                columns.Bound(p => p.MMSStockCode)
                    .Title("Stock Code")
                    .ClientTemplate("<a class='sc-link' data-sc-code='#= MMSStockCode #' href='javascript:void(0)'>#= MMSStockCode #</a>")
                    .Width(120);
                columns.Bound(p => p.PartType).Title("Part Type").Width(120);
                columns.Bound(p => p.OrigSupplierNum).Title("Supplier #").Width(120);
                columns.Bound(p => p.OrigSupplierName).Title("Supplier Name").Width(150);
                columns.Bound(p => p.UnitCost).Title("Unit Cost").Format("{0:c}").Width(100);
                columns.Bound(p => p.Qty).Title("Qty").Width(80);
                columns.Bound(p => p.TotalCost).Title("Total Cost").Format("{0:c}").Width(120);
                columns.Command(command =>
                {
                    command.Custom("Delete").Text("Delete").HtmlAttributes(new { @class = "sc-delete-btn" });
                }).Width(120).Title("Actions");
            })
            .Pageable(p => p.PageSizes(new[] { 5, 10, 20 }))
            .Scrollable()
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("GetScPartsUsedInEstimates", "ScPartsUsedInEstimates", new { id = partNum, gridType = "VehicleGrid" }))
            )
    </div>

    <!-- ... REST OF THE VIEW UNCHANGED ... -->
</div>

<!-- ... CSS AND JAVASCRIPT UNCHANGED ... -->
2. Controller Fixes (ScPartsUsedInEstimatesController.cs)
csharp
// ... OTHER USING STATEMENTS ...
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Authorization;
using Microsoft.Data.SqlClient;
using BCES.Controllers.Common;

namespace BCES.Controllers.Parts
{
    public class ScPartsUsedInEstimatesController : BaseController
    {
        // ... EXISTING CONSTRUCTOR AND FIELDS ...

        [HttpPost]
        [AllowAnonymous]
        public async Task<IActionResult> DeleteScPartsUsedInEstimates(
            string id, 
            string parentPartId,
            string gridType)
        {
            try
            {
                _dbConnection.Open();
                using var transaction = _dbConnection.BeginTransaction();
                
                var sql = @"DELETE FROM SBCES.SCPartsUsed 
                            WHERE MMSStockCode = @id
                            AND LinkCode = @parentPartId
                            AND LinkType = @gridType";

                var parameters = new { 
                    id, 
                    parentPartId, 
                    gridType = gridType == "VehicleGrid" ? "BUS" : "RB" 
                };

                int affectedRows = await _dbConnection.ExecuteAsync(sql, parameters, transaction);
                transaction.Commit();

                if (gridType == "VehicleGrid")
                {
                    await VehicleListEstimatesUpdater.UpdateVehicleCostsAsync(_dbConnection, parentPartId);
                }

                return Json(new { success = affectedRows > 0 });
            }
            catch (Exception ex)
            {
                return StatusCode(500, $"Delete failed: {ex.Message}");
            }
        }

        [HttpPost]
        [AllowAnonymous]
        public async Task<IActionResult> CreateScPartsUsedInEstimates(
            [FromBody] StockCodedPartsViewModel model,
            [FromQuery] string id,
            [FromQuery] string gridType)
        {
            // ... EXISTING CODE WITH FOLLOWING CHANGES ...

            // Change in AJAX call parameters:
            var partData = new {
                id = partNum,
                gridType,
                model = new {
                    MMSStockCode = model.MMSStockCode,
                    CC = model.CC,
                    Qty = model.Qty,
                    Percentage = model.Percentage,
                    UnitCost = model.UnitCost,
                    CoreCost = model.CoreCost
                }
            };

            // ... REST OF CREATE LOGIC ...
        }

        [HttpPut]
        [AllowAnonymous]
        public async Task<IActionResult> UpdateScPartsUsedInEstimates(
            [FromBody] StockCodedPartsViewModel model,
            [FromQuery] string id,
            [FromQuery] string gridType)
        {
            // ... EXISTING CODE ...
        }
    }
}
Key Fixes in Controller:

