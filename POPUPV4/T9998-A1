âœ… Final Setup (No sc* prefix for Vehicle Popup)
_VehPopup.cshtml

Leave your existing markup as-is:

<form id="vehicleForm">
    @Html.Hidden("formMode", Model.VehicleListId == 0 ? "Add" : "Edit")
    @Html.HiddenFor(m => m.VehicleListId)

    <button id="btnSave" type="button">Save</button>
    <button id="btnCancelVehicle" type="button">Cancel</button>

    @(Html.Kendo().ComboBoxFor(m => m.VehSeriesCode).Name("VehSeriesCode"))
    @(Html.Kendo().NumericTextBoxFor(m => m.NumOfVehicles).Name("NumOfVehicles"))
    @(Html.Kendo().ComboBoxFor(m => m.ProjDesc).Name("ProjDesc"))
    @(Html.Kendo().ComboBoxFor(m => m.Make).Name("Make"))
    @(Html.Kendo().ComboBoxFor(m => m.VehModel).Name("VehModel"))
    @(Html.Kendo().ComboBoxFor(m => m.Year).Name("Year"))
    @(Html.Kendo().ComboBoxFor(m => m.Engine).Name("Engine"))
    @(Html.Kendo().ComboBoxFor(m => m.Transmission).Name("Transmission"))
    @(Html.Kendo().ComboBoxFor(m => m.Differential).Name("Differential"))
    @(Html.Kendo().ComboBoxFor(m => m.Sopnumber).Name("Sopnumber"))

    <input id="ModifiedLastBy" readonly value="@Model.ModifiedLastBy" />
    <input id="ModifiedLastDate" readonly value="@Model.ModifiedLastDate" />
</form>

Index.cshtml â€” Define initVehiclePopupForm
window.setPopupReadonly = function(ids) {
    ids.forEach(function(id) {
        var $el = $("#" + id);
        var widget = $el.data("kendoComboBox") || $el.data("kendoNumericTextBox");
        if (widget) {
            widget.enable(false);
        } else {
            $el.prop("readonly", true).addClass("k-state-disabled");
        }
    });
};

window.setPopupEditable = function(ids) {
    ids.forEach(function(id) {
        var $el = $("#" + id);
        var widget = $el.data("kendoComboBox") || $el.data("kendoNumericTextBox");
        if (widget) {
            widget.enable(true);
        } else {
            $el.prop("readonly", false).removeClass("k-state-disabled");
        }
    });
};

window.initVehiclePopupForm = function() {
    var mode = $("#formMode").val();
    if (!mode) return;

    if (mode === "Add") {
        setPopupEditable([
            "VehSeriesCode", "NumOfVehicles", "ProjDesc",
            "Make", "VehModel", "Year",
            "Engine", "Transmission", "Differential", "Sopnumber"
        ]);
        setPopupReadonly(["ModifiedLastBy", "ModifiedLastDate"]);
    } else {
        setPopupReadonly([
            "VehSeriesCode", "ProjDesc", "Make", "VehModel", "Year",
            "Engine", "Transmission", "Differential", "Sopnumber",
            "ModifiedLastBy", "ModifiedLastDate"
        ]);
        setPopupEditable(["NumOfVehicles"]);
    }
};

Update openEstimatePopup
window.openEstimatePopup = function (vehicleId) {
    var win = $("#estimatePopup").data("kendoWindow");
    currentVehicleId = vehicleId;

    win.title(vehicleId === 0 ? "Add New Estimate" : "Vehicle Estimate #" + vehicleId);
    win.center().open();

    loadTabContent(
        "vehicleTabContent",
        '@Url.Action("GetVehicleById", "Vehicles")',
        { id: vehicleId },
        function () {
            // Partial (_VehPopup.cshtml) is now loaded
            initVehiclePopupForm();  // Apply Add/Edit rules
            wireVehicleForm();       // Rebind save/cancel handlers

            if (vehicleId !== 0) {
                enableAllTabs();
            }
        }
    );
};

ðŸ”‘ Key Points
