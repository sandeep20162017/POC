@model IEnumerable<BCES.Models.Parts.StockCodedPartsViewModel>
@{
    ViewData["Title"] = "Stock Coded Parts Details";
    var scGrid = $"ScPartsGrid_{ViewBag.PartNum}";
    var partNum = ViewBag.PartNum;
}

<div id="scPartsContainer">
    <h6>Stock Coded Parts Used</h6>

    <!-- Grid Container -->
    <div id="scGridContainer">
        @(Html.Kendo().Grid<BCES.Models.Parts.StockCodedPartsViewModel>()
            .Name(scGrid)
            .Columns(columns =>
            {
                columns.Bound(p => p.MMSStockCode)
                    .Title("Stock Code")
                    .ClientTemplate("<a class='scLink' data-sc-code='#= MMSStockCode #' href='javascript:void(0)'>#= MMSStockCode #</a>");
                columns.Bound(p => p.PartType).Title("Part Type");
                columns.Bound(p => p.OrigSupplierNum).Title("Supplier Num");
                columns.Bound(p => p.OrigSupplierName).Title("Supplier Name");
                columns.Bound(p => p.UnitCost).Title("Unit Cost").Format("{0:c}");
                columns.Bound(p => p.Qty).Title("Qty");
                columns.Bound(p => p.TotalCost).Title("Total Cost").Format("{0:c}");
                columns.Command(command =>
                {
                    command.Custom("Delete").Text("Delete").Click("scPartsUtils.onDeleteClick");
                }).Title("Actions");
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("GetScPartsUsedInEstimates", "ScPartsUsedInEstimates",
                    new { id = partNum, gridType = "VehicleGrid" }))
            )
        )
    </div>

    <button id="scAddNew" class="k-button k-primary" style="margin-bottom:8px;">
        <span class="k-icon k-i-plus"></span> Add New Stock Coded Part
    </button>

    <form id="scDetailForm" style="display:none;">
        <div class="section-title">Part Details</div>
        <!-- Row 1 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">StockCode</label>
                <input id="scStockCode" class="stock-field" readonly style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">PartType</label>
                <input id="scPartType" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Supplier Num</label>
                <input id="scSupplierNum" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
        </div>
        <!-- Row 2 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Supplier Name</label>
                <input id="scSupplierName" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Part Description</label>
                <input id="scPartDesc" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Part Unit Cost</label>
                <input id="scUnitCost" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
        </div>
        <!-- Row 3 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Core Cost</label>
                <input id="scCoreCost" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Cost Centre</label>
                <input id="scCostCentre" class="stock-field" style="width:100%; height:28px;" />
            </div>
        </div>
        <!-- Row 4 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Qty</label>
                <input id="scQty" class="stock-field" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Percentage</label>
                <input id="scPerc" class="stock-field" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Total Cost</label>
                <input id="scTotCost" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
        </div>
        <!-- Row 5 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Last Modified By</label>
                <input id="scModBy" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Last Modified Date</label>
                <input id="scModDate" readonly class="read-only" style="width:100%; height:28px;" />
            </div>
        </div>
        <div style="margin-top:8px;">
            <button id="scUpdateBtn" type="button" class="k-button k-primary">Update</button>
            <button id="scCancelBtn" type="button" class="k-button">Cancel</button>
        </div>
    </form>
</div>

<style>
    /* Reuse VehPopUp styles */
    .form-container { 
        background:white; 
        padding:12px; 
        border-radius:4px; 
        box-shadow:0 1px 4px rgba(0,0,0,0.05); 
    }
    .section-title { 
        font-size:12px; 
        color:#2c3e50; 
        margin-bottom:6px; 
        padding-bottom:4px; 
        border-bottom:1px solid #3498db; 
        display:flex; 
        align-items:center; 
        gap:5px;
    }
    .form-row { 
        display:flex; 
        gap:8px; 
        margin-bottom:6px; 
        align-items:flex-start;
    }
    .form-group { 
        display:flex; 
        flex-direction:column; 
        flex:1;
    }
    .form-label { 
        font-size:11px; 
        color:#2c3e50; 
        font-weight:600; 
        margin-bottom:3px;
    }
    .stock-field, .read-only { 
        border:1px solid #d1d5db; 
        border-radius:3px; 
        padding:4px 8px; 
        min-height:28px; 
        font-size:12px; 
    }
    .read-only { 
        background:#f8fafc !important; 
        color:#4b5563 !important; 
        cursor:not-allowed !important; 
    }
    h6 { 
        font-size:13px; 
        color:#2c3e50; 
        margin-bottom:8px; 
        border-bottom:1px solid #3498db; 
        padding-bottom:4px;
    }
    .k-button { 
        padding:4px 6px; 
        font-size:12px; 
        height:28px; 
        border-radius:3px;
    }
    .k-button.k-primary { 
        background:#3f51b5; 
        color:white; 
        border-color:#3f51b5;
    }
    #scPartsContainer {
        padding: 15px;
        background-color: #f9fafb;
        border-radius: 6px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    }
</style>

<script>
    // Namespace for all functions to prevent conflicts
    window.scPartsUtils = (function() {
        // Private variables
        const partNum = "@Html.Raw(partNum)";
        const gridName = "@Html.Raw(scGrid)";
        
        // Initialize module
        function init() {
            bindEvents();
        }
        
        // Bind all event handlers
        function bindEvents() {
            // Delegated event for grid links
            $(document).on('click', '.scLink', function(e) {
                e.preventDefault();
                const stockCode = $(this).data('sc-code');
                loadPartDetails(stockCode);
            });
            
            // Add new button
            $("#scAddNew").click(showAddForm);
            
            // Cancel button
            $("#scCancelBtn").click(hideDetailForm);
            
            // Update/Save button
            $("#scUpdateBtn").click(saveScPart);
            
            // Auto-calculate total cost
            $("#scQty, #scPerc").on("change input", calculateTotalCost);
        }
        
        // Delete handler
        function onDeleteClick(e) {
            e.preventDefault();
            const grid = $("#" + gridName).data("kendoGrid");
            const dataItem = grid.dataItem($(e.currentTarget).closest("tr"));

            kendo.confirm("Delete this part?").then(function() {
                $.ajax({
                    url: '@Url.Action("DeleteScPartsUsedInEstimates", "ScPartsUsedInEstimates")',
                    type: 'POST',
                    data: {
                        id: dataItem.MMSStockCode,
                        parentPartId: partNum,
                        gridType: "VehicleGrid"
                    },
                    success: function() {
                        grid.dataSource.read();
                        kendo.alert("Part deleted successfully");
                    },
                    error: function(xhr) {
                        kendo.alert("Delete failed: " + xhr.responseText);
                    }
                });
            });
        }
        
        // Load part details via AJAX
        function loadPartDetails(stockCode) {
            $(".scLink").prop("disabled", true);

            $.get('@Url.Action("GetScPartUsedDetail", "ScPartsUsedInEstimates")', {
                mmsStockCode: stockCode,
                vehicleListId: partNum
            }, function(data) {
                if (data) {
                    $("#scStockCode").val(data.MMSStockCode);
                    $("#scPartType").val(data.PartType);
                    $("#scSupplierNum").val(data.OrigSupplierNum);
                    $("#scSupplierName").val(data.OrigSupplierName);
                    $("#scUnitCost").val(data.UnitCost);
                    $("#scQty").val(data.Qty);
                    $("#scTotCost").val(data.TotalCost);
                    $("#scCoreCost").val(data.CoreCost);
                    $("#scCostCentre").val(data.CostCentre);
                    $("#scPerc").val(data.Percentage);
                    $("#scPartDesc").val(data.PartDescription);
                    $("#scModBy").val(data.ModBy);
                    $("#scModDate").val(data.ModDate ? new Date(data.ModDate).toLocaleString() : "");

                    $("#scDetailForm").data("mode", "edit");
                    showDetailForm();
                }
            }).always(function() {
                $(".scLink").prop("disabled", false);
            });
        }
        
        // Show form for adding new part
        function showAddForm() {
            clearDetailForm();
            $("#scDetailForm").data("mode", "add");
            showDetailForm();
        }
        
        // Save part via AJAX
        function saveScPart() {
            const mode = $("#scDetailForm").data("mode");
            const isAdd = mode === "add";

            const partData = {
                MMSStockCode: isAdd ? prompt("Enter Stock Code:") : $("#scStockCode").val(),
                CC: $("#scCostCentre").val(),
                Qty: $("#scQty").val(),
                Percentage: $("#scPerc").val(),
                UnitCost: $("#scUnitCost").val(),
                CoreCost: $("#scCoreCost").val(),
                LinkCode: partNum
            };

            if (isAdd && !partData.MMSStockCode) {
                kendo.alert("Stock Code is required!");
                return;
            }

            const url = isAdd 
                ? '@Url.Action("CreateScPartsUsedInEstimates", "ScPartsUsedInEstimates")'
                : '@Url.Action("UpdateScPartsUsedInEstimates", "ScPartsUsedInEstimates")';

            const method = 'POST';

            $.ajax({
                url: url,
                type: method,
                data: {
                    id: partNum,
                    gridType: "VehicleGrid",
                    model: partData
                },
                success: function() {
                    $("#" + gridName).data("kendoGrid").dataSource.read();
                    hideDetailForm();
                    kendo.alert("Part saved successfully");
                },
                error: function(xhr) {
                    kendo.alert("Save failed: " + xhr.responseText);
                }
            });
        }
        
        // Calculate total cost
        function calculateTotalCost() {
            const qty = parseInt($("#scQty").val()) || 0;
            const unitCost = parseFloat($("#scUnitCost").val()) || 0;
            const perc = parseInt($("#scPerc").val()) || 0;
            const total = qty * unitCost * (1 + perc/100);
            $("#scTotCost").val(total.toFixed(2));
        }
        
        // Clear form
        function clearDetailForm() {
            $("#scDetailForm input").val("");
        }
        
        // Show form
        function showDetailForm() {
            $("#scDetailForm").show();
        }
        
        // Hide form
        function hideDetailForm() {
            $("#scDetailForm").hide();
        }
        
        // Public API
        return {
            init: init,
            onDeleteClick: onDeleteClick
        };
    })();

    // Initialize when document is ready
    $(document).ready(function() {
        scPartsUtils.init();
    });
</script>
