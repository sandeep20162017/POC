// Global variable to store the popup editing model
let currentPopupModel = null;

function onScPartsEdit(e) {
    // e.model contains the bound item for the popup editor
    currentPopupModel = e.model;
    console.log("Editing model in popup:", currentPopupModel);
}

function onScPartNumSelect(e) {
    onScPartChange(e);

    console.warn('inside onScPartNumSelect');
    const selectedValue = e.sender.value();

    // In Popup mode, use the stored model
    const model = currentPopupModel;

    if (!model || !selectedValue) {
        console.warn("No selected value or model.");
        return;
    }

    // Clear existing values
    model.set("MmsStockCode", "");
    model.set("Description", "");
    model.set("KeyWord", "");
    model.set("CoreCharge", "");
    model.set("UnitCost", "");

    $.ajax({
        url: "/AutoComplete/GetScPartDetails",
        type: "GET",
        data: { mmsStockCode: selectedValue },
        success: function (result) {
            if (result) {
                model.set("MmsStockCode", result.MmsStockCode || "");
                model.set("DetailedDesc", result.DetailedDesc || "");
                model.set("PartType", result.PartType || "");
                model.set("OrigSupplierNum", result.OrigSupplierNum || "");
                model.set("OrigSupplierName", result.OrigSupplierName || "");
                model.set("CoreCost", result.PartCost || "");
                model.set("UnitCost", result.UnitCost || "");
            }
            console.warn("✅ AJAX result:", result);
        },
        error: function (xhr) {
            console.error("❌ Failed to fetch part details:", xhr.responseText);
        }
    });
}
Key Points
In Inline/InCell, you can find the model from the row.
