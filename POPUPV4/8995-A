1. Enhanced CSS (vehicle-estimate.css)
css
/* vehicle-estimate.css - Professional styling for vehicle estimate management */

/* ===== BASE STYLES ===== */
.vehicle-estimate-container {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    color: #2c3e50;
    line-height: 1.5;
    padding: 20px;
}

.vehicle-estimate-header {
    font-size: 24px;
    font-weight: 600;
    margin-bottom: 20px;
    color: #2c3e50;
    padding-bottom: 10px;
    border-bottom: 2px solid #3498db;
}

/* ===== POPUP OVERLAY ===== */
.vehicle-popup-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 10000;
    align-items: center;
    justify-content: center;
}

/* Make sure the popup is visible when active */
.vehicle-popup-overlay.active {
    display: flex !important;
    opacity: 1 !important;
    visibility: visible !important;
}

/* ===== POPUP CONTAINER ===== */
.vehicle-popup-container {
    width: 900px;
    max-height: 90vh;
    overflow-y: auto;
    background-color: #f8f9fa;
    border-radius: 8px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25);
    display: block;
    visibility: visible;
    position: relative;
    z-index: 10001;
}

/* ===== POPUP HEADER ===== */
.vehicle-popup-header {
    background: linear-gradient(to right, #2c3e50, #4a6580);
    padding: 15px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: white;
    border-top-left-radius: 8px;
    border-top-right-radius: 8px;
}

.vehicle-popup-title {
    font-size: 18px;
    font-weight: 600;
}

.vehicle-tab-actions {
    display: flex;
    gap: 10px;
}

/* ===== FORM CONTAINER ===== */
.vehicle-form-container {
    padding: 25px;
    background-color: #ffffff;
}

/* ===== SECTION TITLES ===== */
.vehicle-section-title {
    color: #2c3e50;
    font-size: 16px;
    font-weight: 600;
    margin: 25px 0 15px;
    padding-bottom: 8px;
    border-bottom: 1px solid #eaeaea;
}

.vehicle-section-title:first-child {
    margin-top: 0;
}

/* ===== FORM ROWS AND GROUPS ===== */
.vehicle-form-row {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    margin-bottom: 20px;
}

.vehicle-form-group {
    flex: 1;
    min-width: 200px;
}

.vehicle-double-width {
    flex: 2;
}

/* ===== LABELS ===== */
.vehicle-form-label {
    display: block;
    color: #2c3e50;
    margin-bottom: 6px;
    font-size: 14px;
    font-weight: 500;
}

.vehicle-required-label::after {
    content: " *";
    color: #e74c3c;
}

/* ===== FORM CONTROLS ===== */
.vehicle-form-control {
    width: 100%;
    height: 38px;
    padding: 8px 12px;
    background-color: #ffffff;
    border: 1px solid #dce4ec;
    border-radius: 4px;
    color: #2c3e50;
    font-size: 14px;
    outline: none;
    transition: border-color 0.2s;
}

.vehicle-form-control:focus {
    border-color: #3498db;
    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
}

.vehicle-form-control[readonly] {
    background-color: #f8f9fa;
    color: #7f8c8d;
}

/* ===== BUTTONS ===== */
.vehicle-popup-btn {
    padding: 8px 16px;
    height: 36px;
    border-radius: 4px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
    border: none;
    display: inline-flex;
    align-items: center;
    font-size: 14px;
}

.vehicle-popup-btn-primary {
    background-color: #3498db;
    color: white;
}

.vehicle-popup-btn-primary:hover {
    background-color: #2980b9;
}

.vehicle-popup-btn-secondary {
    background-color: #ecf0f1;
    color: #7f8c8d;
}

.vehicle-popup-btn-secondary:hover {
    background-color: #dfe6e9;
    color: #2c3e50;
}

/* ===== ICONS ===== */
.vehicle-btn-icon {
    margin-right: 5px;
}

/* ===== LOADING STATE ===== */
.vehicle-loading {
    padding: 40px;
    text-align: center;
    color: #7f8c8d;
    font-size: 16px;
}

.vehicle-loading:before {
    content: "‚è≥";
    display: block;
    font-size: 24px;
    margin-bottom: 10px;
}

/* ===== RESPONSIVE ADJUSTMENTS ===== */
@media (max-width: 968px) {
    .vehicle-popup-container {
        width: 95%;
    }
}

@media (max-width: 768px) {
    .vehicle-form-row {
        flex-direction: column;
        gap: 15px;
    }
    
    .vehicle-form-group {
        min-width: 100%;
    }
    
    .vehicle-popup-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
    }
    
    .vehicle-tab-actions {
        width: 100%;
        justify-content: flex-end;
    }
    
    .vehicle-popup-container {
        width: 95%;
    }
}

/* ===== DEBUG STYLES ===== */
.debug-border {
    border: 2px solid red !important;
}

.debug-visible {
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
}

/* ===== OVERRIDE ANY HIDING STYLES ===== */
.vehicle-popup-overlay,
.vehicle-popup-container,
.vehicle-form-container {
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
}
2. Enhanced JavaScript
html
<script>
    // ===== GLOBAL VARIABLES =====
    var vehiclePopupState = {
        isOpen: false,
        hasChanges: false,
        currentVehicleId: 0,
        originalData: {},
        isEditMode: false
    };

    var pendingChanges = false;
    var currentVehicleId = 0;

    // ===== VEHICLE POPUP MANAGEMENT =====
    function showVehiclePopup(vehicleId) {
        console.log("Showing vehicle popup for ID:", vehicleId);
        
        // Reset state
        vehiclePopupState.isOpen = true;
        vehiclePopupState.currentVehicleId = vehicleId;
        vehiclePopupState.hasChanges = false;
        vehiclePopupState.isEditMode = vehicleId !== 0;
        pendingChanges = false;
        
        // Show the overlay with forced visibility
        $("#vehiclePopupOverlay")
            .addClass("active")
            .css({
                "display": "flex",
                "opacity": 1,
                "visibility": "visible",
                "z-index": "99999"
            });
        
        console.log("Popup overlay display set to flex");
        
        // Load vehicle data
        loadVehicleData(vehicleId);
    }

    function hideVehiclePopup() {
        console.log("Hiding vehicle popup");
        
        if (vehiclePopupState.hasChanges || pendingChanges) {
            showCloseConfirmation();
        } else {
            closeVehiclePopup();
        }
    }

    function closeVehiclePopup() {
        console.log("Closing vehicle popup");
        
        vehiclePopupState.isOpen = false;
        vehiclePopupState.hasChanges = false;
        pendingChanges = false;
        
        // Hide the overlay
        $("#vehiclePopupOverlay")
            .removeClass("active")
            .css("display", "none");
    }

    function loadVehicleData(vehicleId) {
        console.log("Loading vehicle data for ID:", vehicleId);
        
        // Show loading state
        $("#vehicleFormContainer").html('<div class="vehicle-loading">Loading vehicle data...</div>');
        
        // Update popup title
        $("#vehiclePopupTitle").text(vehicleId === 0 ? "Add New Vehicle Estimate" : "Estimate #" + vehicleId);
        
        // Fetch vehicle data
        $.get('@Url.Action("GetVehicleById", "Vehicles")', { id: vehicleId })
            .done(function(data) {
                console.log("Vehicle data loaded successfully");
                
                // Replace the entire popup content
                $("#vehiclePopupOverlay").html(data);
                
                // Force the popup to be visible
                $("#vehiclePopupOverlay")
                    .addClass("active")
                    .css({
                        "display": "flex",
                        "opacity": 1,
                        "visibility": "visible",
                        "z-index": "99999"
                    });
                
                // Reinitialize the form
                initVehiclePopupForm();
                wireVehicleForm();
                vehiclePopupState.originalData = getFormData();
                
                console.log("Popup content loaded and displayed");
                
                // Debug: Check if elements are visible
                setTimeout(function() {
                    console.log("Popup visibility check:");
                    console.log("Overlay display:", $("#vehiclePopupOverlay").css("display"));
                    console.log("Overlay visibility:", $("#vehiclePopupOverlay").css("visibility"));
                    console.log("Overlay opacity:", $("#vehiclePopupOverlay").css("opacity"));
                    console.log("Container display:", $("#vehicleFormContainer").css("display"));
                }, 100);
            })
            .fail(function(xhr, status, error) {
                console.error("Failed to load vehicle data:", error);
                $("#vehicleFormContainer").html('<div class="vehicle-notification error">Failed to load vehicle data. Please try again.</div>');
                
                // Still show the popup with error message
                $("#vehiclePopupOverlay")
                    .addClass("active")
                    .css({
                        "display": "flex",
                        "opacity": 1,
                        "visibility": "visible",
                        "z-index": "99999"
                    });
            });
    }

    function getFormData() {
        var form = document.getElementById('vehicleForm');
        if (!form) return {};
        
        var formData = {};
        var inputs = form.querySelectorAll('input, select, textarea');
        
        inputs.forEach(function(input) {
            formData[input.name] = input.value;
        });
        
        return formData;
    }

    function saveVehicleData() {
        console.log("Saving vehicle data");
        
        var form = document.getElementById('vehicleForm');
        if (!form) return;
        
        // Validate form
        if (!validateVehicleForm()) {
            return;
        }
        
        // Show saving state
        var saveButton = document.getElementById('btnSave');
        if (saveButton) {
            saveButton.disabled = true;
            saveButton.innerHTML = '<span class="vehicle-btn-icon">‚è≥</span> Saving...';
        }
        
        // Prepare data
        var formData = new FormData(form);
        var vehicleData = {};
        formData.forEach(function(value, key) {
            vehicleData[key] = value;
        });
        
        // Determine URL based on mode (add or edit)
        var url = vehiclePopupState.currentVehicleId === 0
            ? '@Url.Action("AddVehiclesView", "Vehicles")'
            : '@Url.Action("UpdateVehiclesView", "Vehicles")';
        
        // Send request
        $.ajax({
            url: url,
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(vehicleData),
            success: function(response) {
                if (response && response.VehicleListId) {
                    // Success
                    showNotification('success', 'Vehicle data saved successfully!');
                    vehiclePopupState.hasChanges = false;
                    pendingChanges = false;
                    vehiclePopupState.currentVehicleId = response.VehicleListId;
                    
                    // Update grid
                    $("#VehicleGrid").data("kendoGrid").dataSource.read();
                    
                    // Update popup title
                    $("#vehiclePopupTitle").text('Vehicle Estimate #' + response.VehicleListId);
                } else {
                    showNotification('error', 'Failed to save vehicle data.');
                }
                
                // Reset save button
                if (saveButton) {
                    saveButton.disabled = false;
                    saveButton.innerHTML = '<span class="vehicle-btn-icon">‚úì</span> Save';
                }
            },
            error: function() {
                showNotification('error', 'Error saving vehicle data.');
                
                // Reset save button
                if (saveButton) {
                    saveButton.disabled = false;
                    saveButton.innerHTML = '<span class="vehicle-btn-icon">‚úì</span> Save';
                }
            }
        });
    }

    function validateVehicleForm() {
        var form = document.getElementById('vehicleForm');
        if (!form) return false;
        
        var isValid = true;
        var requiredFields = form.querySelectorAll('[required]');
        
        requiredFields.forEach(function(field) {
            if (!field.value.trim()) {
                isValid = false;
                field.style.borderColor = '#e74c3c';
            } else {
                field.style.borderColor = '';
            }
        });
        
        if (!isValid) {
            showNotification('error', 'Please fill in all required fields.');
        }
        
        return isValid;
    }

    function showNotification(type, message) {
        var notification = $("#notification").data("kendoNotification");
        if (notification) {
            notification.show(message, type);
        }
    }

    function showCloseConfirmation() {
        kendo.confirm("You have unsaved changes. Are you sure you want to close?")
            .then(function() {
                closeVehiclePopup();
            }, function() {
                // User clicked Cancel - do nothing
            });
    }

    // ===== FORM MANAGEMENT =====
    function initVehiclePopupForm() {
        var mode = $("#formMode").val();
        if (!mode) return;

        if (mode === "Add") {
            setPopupEditable([
                 "NumOfVehicles", "ProjDesc",
                "Make", "VehModel", "Year",
                "Engine", "Transmission", "Differential", "Sopnumber"
            ]);
            setPopupReadonly(["VehSeriesCode", "ModifiedLastBy", "ModifiedLastDate"]);
        } else {
            setPopupReadonly([
                "VehSeriesCode", "ProjDesc", "Make", "VehModel", "Year",
                "Engine", "Transmission", "Differential", "Sopnumber",
                "ModifiedLastBy", "ModifiedLastDate"
            ]);
            setPopupEditable(["NumOfVehicles"]);
        }
    }

    function setPopupReadonly(ids) {
        ids.forEach(function (id) {
            var $el = $("#" + id);
            var widget = $el.data("kendoComboBox") || $el.data("kendoNumericTextBox");
            if (widget) {
                widget.enable(false);
            } else {
                $el.prop("readonly", true).addClass("k-state-disabled");
            }
        });
    }

    function setPopupEditable(ids) {
        ids.forEach(function (id) {
            var $el = $("#" + id);
            var widget = $el.data("kendoComboBox") || $el.data("kendoNumericTextBox");
            if (widget) {
                widget.enable(true);
            } else {
                $el.prop("readonly", false).removeClass("k-state-disabled");
            }
        });
    }

    function wireVehicleForm() {
        $("#btnCancelVehicle").off("click").on("click", function(){
            hideVehiclePopup();
        });
        
        $("#btnSave").off("click").on("click", function(e){
            e.preventDefault();
            saveVehicleData();
        });
        
        $("#vehicleForm input, #vehicleForm select").off("change input").on("input change", function(){
            pendingChanges = true;
            vehiclePopupState.hasChanges = true;
        });
    }

    // ===== DOCUMENT READY =====
    $(document).ready(function () {
        console.log("Document ready - initializing vehicle estimate components");
        
        // Initialize Kendo Notification
        $("#notification").kendoNotification({
            position: {
                pinned: true,
                top: 20,
                right: 20
            },
            autoHideAfter: 5000,
            stacking: "down",
            hideOnClick: true
        });

        // Initialize vehicle popup
        $(document).on('click', '#vehiclePopupOverlay', function(e) {
            if (e.target === this) {
                hideVehiclePopup();
            }
        });
        
        console.log("All components initialized successfully");
    });
</script>
3. HTML Structure
Make sure your HTML has the correct structure:

html
<!-- In your Index.cshtml -->
<div class="vehicle-estimate-container">
    <!-- Your grid and other content -->
    
    <!-- This is the container for the vehicle popup -->
    <div id="vehiclePopupOverlay" class="vehicle-popup-overlay">
        <!-- Content will be loaded here via AJAX -->
    </div>
</div>
4. Debugging Steps
If the popup still doesn't show after implementing these changes, try these debugging steps:

Check the DOM: Right-click on the page and select "Inspect". Look for the vehiclePopupOverlay element to see if it's present in the DOM and what styles are applied to it.

Force Visibility: Add this temporary CSS to force the popup to be visible:

css
#vehiclePopupOverlay {
    display: flex !important;
    opacity: 1 !important;
    visibility: visible !important;
    z-index: 99999 !important;
}
Check for Overrides: Look for any other CSS that might be overriding the popup styles. Use the browser's developer tools to inspect the computed styles.

Check Z-Index: Ensure no other elements have a higher z-index that might be covering the popup.

Test with Simple HTML: Create a simple test to verify the popup structure works:

html
<div class="vehicle-popup-overlay" id="testPopup" style="display: flex; z-index: 99999;">
    <div class="vehicle-popup-container">
        <div class="vehicle-popup-header">
            <div class="vehicle-popup-title">Test Popup</div>
        </div>
        <div class="vehicle-form-container">
            <p>This is a test popup</p>
        </div>
    </div>
</div>
This solution should resolve the issue with the popup not being displayed. The enhanced CSS includes forced visibility and z-index values to ensure the popup appears on top of all other content.
