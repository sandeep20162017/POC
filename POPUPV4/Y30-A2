@model IEnumerable<BCES.Models.Parts.StockCodedPartsViewModel>
@{
    ViewData["Title"] = "Stock Coded Parts Details";
    var scGrid = $"ScPartsGrid_{ViewBag.PartNum}";
    var partNum = ViewBag.PartNum;
}

<div id="scPartsContainer">
    <h6>Stock Coded Parts Used</h6>

    <!-- Grid Container -->
    <div id="scGridContainer">
        @(Html.Kendo().Grid<BCES.Models.Parts.StockCodedPartsViewModel>()
            .Name(scGrid)
            .Columns(columns =>
            {
                columns.Bound(p => p.MMSStockCode)
                    .Title("Stock Code")
                    .ClientTemplate("<a class='sc-link' data-sc-code='#= MMSStockCode #' href='javascript:void(0)'>#= MMSStockCode #</a>")
                    .Width(120);
                columns.Bound(p => p.PartType).Title("Part Type").Width(120);
                columns.Bound(p => p.OrigSupplierNum).Title("Supplier #").Width(120);
                columns.Bound(p => p.OrigSupplierName).Title("Supplier Name").Width(150);
                columns.Bound(p => p.UnitCost).Title("Unit Cost").Format("{0:c}").Width(100);
                columns.Bound(p => p.Qty).Title("Qty").Width(80);
                columns.Bound(p => p.TotalCost).Title("Total Cost").Format("{0:c}").Width(120);
                columns.Command(command =>
                {
                    command.Custom("Delete").Text("Delete").HtmlAttributes(new { @class = "sc-delete-btn" });
                }).Width(120).Title("Actions");
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("GetScPartsUsedInEstimates", "ScPartsUsedInEstimates", new { id = partNum, gridType = "VehicleGrid" }))
            .Pageable(p => p.PageSizes(new[] { 5, 10, 20 }))
            .Scrollable()
        )
    </div>

    <button id="scAddNew" class="k-button k-primary" style="margin-bottom:12px; margin-top:12px;">
        <span class="k-icon k-i-plus"></span> Add New Stock Coded Part
    </button>

    <form id="scDetailForm" style="display:none; background-color:#f8f9fa; padding:15px; border-radius:5px; margin-top:15px;">
        <div class="section-title">Part Details</div>
        
        <!-- Row 1 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Stock Code</label>
                <input id="scStockCode" class="stock-field" readonly style="width:100%; height:32px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Part Type</label>
                <input id="scPartType" readonly class="read-only" style="width:100%; height:32px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Supplier #</label>
                <input id="scSupplierNum" readonly class="read-only" style="width:100%; height:32px;" />
            </div>
        </div>
        
        <!-- Row 2 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Supplier Name</label>
                <input id="scSupplierName" readonly class="read-only" style="width:100%; height:32px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Description</label>
                <input id="scPartDesc" readonly class="read-only" style="width:100%; height:32px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Unit Cost</label>
                <input id="scUnitCost" readonly class="read-only" style="width:100%; height:32px;" />
            </div>
        </div>
        
        <!-- Row 3 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Core Cost</label>
                <input id="scCoreCost" readonly class="read-only" style="width:100%; height:32px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Cost Centre</label>
                <input id="scCostCentre" class="stock-field" style="width:100%; height:32px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Qty</label>
                <input id="scQty" class="stock-field" style="width:100%; height:32px;" />
            </div>
        </div>
        
        <!-- Row 4 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Percentage</label>
                <input id="scPerc" class="stock-field" style="width:100%; height:32px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Total Cost</label>
                <input id="scTotCost" readonly class="read-only" style="width:100%; height:32px;" />
            </div>
        </div>
        
        <!-- Row 5 -->
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Modified By</label>
                <input id="scModBy" readonly class="read-only" style="width:100%; height:32px;" />
            </div>
            <div class="form-group">
                <label class="form-label">Modified Date</label>
                <input id="scModDate" readonly class="read-only" style="width:100%; height:32px;" />
            </div>
        </div>
        
        <div style="margin-top:12px; display:flex; gap:8px;">
            <button id="scUpdateBtn" type="button" class="k-button k-primary">Update</button>
            <button id="scCancelBtn" type="button" class="k-button">Cancel</button>
        </div>
    </form>
</div>

<style>
    /* Improved spacing and styling */
    .form-container { 
        background:white; 
        padding:15px; 
        border-radius:4px; 
        box-shadow:0 2px 6px rgba(0,0,0,0.08); 
    }
    
    .section-title { 
        font-size:14px; 
        color:#2c3e50; 
        margin-bottom:10px; 
        padding-bottom:6px; 
        border-bottom:2px solid #3498db; 
        display:flex; 
        align-items:center; 
        gap:8px;
        font-weight:600;
    }
    
    .form-row { 
        display:flex; 
        gap:12px; 
        margin-bottom:12px; 
        align-items:flex-start;
    }
    
    .form-group { 
        display:flex; 
        flex-direction:column; 
        flex:1;
    }
    
    .form-label { 
        font-size:12px; 
        color:#2c3e50; 
        font-weight:600; 
        margin-bottom:6px;
    }
    
    .stock-field, .read-only { 
        border:1px solid #d1d5db; 
        border-radius:4px; 
        padding:6px 10px; 
        min-height:32px; 
        font-size:13px; 
    }
    
    .read-only { 
        background:#f8fafc !important; 
        color:#4b5563 !important; 
        cursor:not-allowed !important; 
    }
    
    h6 { 
        font-size:15px; 
        color:#2c3e50; 
        margin-bottom:12px; 
        border-bottom:1px solid #3498db; 
        padding-bottom:6px;
        font-weight:600;
    }
    
    .k-button { 
        padding:6px 12px; 
        font-size:13px; 
        height:34px; 
        border-radius:4px;
    }
    
    .k-button.k-primary { 
        background:#3f51b5; 
        color:white; 
        border-color:#3f51b5;
    }
    
    #scPartsContainer {
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    }
    
    #scGridContainer {
        margin-bottom: 20px;
    }
    
    /* Grid styling for better spacing */
    .k-grid td {
        padding: 8px 10px !important;
    }
    
    .k-grid th {
        padding: 10px 10px !important;
        font-weight: 600;
        background-color: #f0f4f8;
    }
</style>

<script>
    // Self-executing function to encapsulate all stock-coded parts functionality
    (function() {
        // Private variables for this instance
        const partNum = "@Html.Raw(partNum)";
        const gridName = "@Html.Raw(scGrid)";
        const container = $("#scPartsContainer");
        
        // Initialize stock-coded parts functionality
        function initStockCodedParts() {
            bindStockCodedEvents();
            initializeStockCodedGrid();
        }
        
        // Initialize grid with proper parameters
        function initializeStockCodedGrid() {
            const grid = container.find("#" + gridName).data("kendoGrid");
            if (grid) {
                grid.dataSource.read({
                    id: partNum,
                    gridType: "VehicleGrid"
                });
            }
        }
        
        // Bind all event handlers for stock-coded parts
        function bindStockCodedEvents() {
            // Delegated event for grid links
            container.on('click', '.sc-link', function(e) {
                e.preventDefault();
                const stockCode = $(this).data('sc-code');
                loadStockCodedPartDetails(stockCode);
            });
            
            // Delegated event for delete buttons
            container.on('click', '.sc-delete-btn', function(e) {
                e.preventDefault();
                const grid = container.find("#" + gridName).data("kendoGrid");
                const row = $(this).closest("tr");
                const dataItem = grid.dataItem(row);
                onStockCodedDeleteClick(dataItem);
            });
            
            // Add new button
            container.find("#scAddNew").click(showStockCodedAddForm);
            
            // Cancel button
            container.find("#scCancelBtn").click(hideStockCodedDetailForm);
            
            // Update/Save button
            container.find("#scUpdateBtn").click(saveStockCodedPart);
            
            // Auto-calculate total cost
            container.find("#scQty, #scPerc").on("change input", calculateStockCodedTotalCost);
        }
        
        // Delete handler for stock-coded parts
        function onStockCodedDeleteClick(dataItem) {
            kendo.confirm("Delete this stock-coded part?").then(function() {
                $.ajax({
                    url: '@Url.Action("DeleteScPartsUsedInEstimates", "ScPartsUsedInEstimates")',
                    type: 'POST',
                    data: {
                        id: dataItem.MMSStockCode,
                        parentPartId: partNum,
                        gridType: "VehicleGrid"
                    },
                    success: function() {
                        const grid = container.find("#" + gridName).data("kendoGrid");
                        grid.dataSource.read({
                            id: partNum,
                            gridType: "VehicleGrid"
                        });
                        kendo.alert("Stock-coded part deleted successfully");
                    },
                    error: function(xhr) {
                        kendo.alert("Delete failed: " + xhr.responseText);
                    }
                });
            });
        }
        
        // Load stock-coded part details via AJAX
        function loadStockCodedPartDetails(stockCode) {
            container.find(".sc-link").prop("disabled", true);

            $.ajax({
                url: '@Url.Action("GetScPartUsedDetail", "ScPartsUsedInEstimates")',
                type: 'GET',
                data: {
                    mmsStockCode: stockCode,
                    vehicleListId: partNum
                },
                success: function(data) {
                    if (data) {
                        container.find("#scStockCode").val(data.MMSStockCode);
                        container.find("#scPartType").val(data.PartType);
                        container.find("#scSupplierNum").val(data.OrigSupplierNum);
                        container.find("#scSupplierName").val(data.OrigSupplierName);
                        container.find("#scUnitCost").val(data.UnitCost);
                        container.find("#scQty").val(data.Qty);
                        container.find("#scTotCost").val(data.TotalCost);
                        container.find("#scCoreCost").val(data.CoreCost);
                        container.find("#scCostCentre").val(data.CostCentre);
                        container.find("#scPerc").val(data.Percentage);
                        container.find("#scPartDesc").val(data.PartDescription);
                        container.find("#scModBy").val(data.ModBy);
                        container.find("#scModDate").val(data.ModDate ? new Date(data.ModDate).toLocaleString() : "");

                        container.find("#scDetailForm").data("mode", "edit");
                        showStockCodedDetailForm();
                    }
                },
                error: function(xhr) {
                    kendo.alert("Error loading part details: " + xhr.responseText);
                },
                complete: function() {
                    container.find(".sc-link").prop("disabled", false);
                }
            });
        }
        
        // Show form for adding new stock-coded part
        function showStockCodedAddForm() {
            clearStockCodedDetailForm();
            container.find("#scDetailForm").data("mode", "add");
            showStockCodedDetailForm();
        }
        
        // Save stock-coded part via AJAX
        function saveStockCodedPart() {
            const mode = container.find("#scDetailForm").data("mode");
            const isAdd = mode === "add";

            const partData = {
                MMSStockCode: isAdd ? prompt("Enter Stock Code:") : container.find("#scStockCode").val(),
                CC: container.find("#scCostCentre").val(),
                Qty: container.find("#scQty").val(),
                Percentage: container.find("#scPerc").val(),
                UnitCost: container.find("#scUnitCost").val(),
                CoreCost: container.find("#scCoreCost").val(),
                LinkCode: partNum
            };

            if (isAdd && !partData.MMSStockCode) {
                kendo.alert("Stock Code is required for stock-coded parts!");
                return;
            }

            const action = isAdd 
                ? '@Url.Action("CreateScPartsUsedInEstimates", "ScPartsUsedInEstimates")'
                : '@Url.Action("UpdateScPartsUsedInEstimates", "ScPartsUsedInEstimates")';

            $.ajax({
                url: action,
                type: 'POST',
                data: {
                    id: partNum,
                    gridType: "VehicleGrid",
                    model: partData
                },
                success: function() {
                    const grid = container.find("#" + gridName).data("kendoGrid");
                    grid.dataSource.read({
                        id: partNum,
                        gridType: "VehicleGrid"
                    });
                    hideStockCodedDetailForm();
                    kendo.alert("Stock-coded part saved successfully");
                },
                error: function(xhr) {
                    kendo.alert("Save failed: " + xhr.responseText);
                }
            });
        }
        
        // Calculate total cost for stock-coded part
        function calculateStockCodedTotalCost() {
            const qty = parseInt(container.find("#scQty").val()) || 0;
            const unitCost = parseFloat(container.find("#scUnitCost").val()) || 0;
            const perc = parseInt(container.find("#scPerc").val()) || 0;
            const total = qty * unitCost * (1 + perc/100);
            container.find("#scTotCost").val(total.toFixed(2));
        }
        
        // Clear stock-coded part form
        function clearStockCodedDetailForm() {
            container.find("#scDetailForm input").val("");
        }
        
        // Show stock-coded part form
        function showStockCodedDetailForm() {
            container.find("#scDetailForm").show();
        }
        
        // Hide stock-coded part form
        function hideStockCodedDetailForm() {
            container.find("#scDetailForm").hide();
        }
        
        // Initialize when document is ready
        $(document).ready(function() {
            initStockCodedParts();
        });
    })();
</script>
