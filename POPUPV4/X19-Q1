You are ASP.NET core and Telerik ASP.NET core expert.
Ffrom he following code, I need to create a partial view to use as client template pop up   another view.
This client template ust use the same controls used in the below POup (example COmboBox, ScComboBox etc).
Use the same JS function names. I donot need grid, just POpUp code from below. Give me full file wih all the changes.
@model IEnumerable<BCES.Models.Parts.StockCodedPartsViewModel>
@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "Stock Coded Parts Details";
    var scGrid = $"ScPartsGrid_{ViewBag.PartNum}";
    var partNum = ViewBag.PartNum;
    var gridType = ViewBag.GridType ?? "VehicleGrid";
}

<div id="scPartsContainer" data-grid-name="@scGrid" data-part-num="@partNum" data-grid-type="@gridType">
    <h6>Stock Coded Parts Used</h6>

    <!-- Grid Container -->
    <div id="scGridContainer">
        @(Html.Kendo().Grid<BCES.Models.Parts.StockCodedPartsViewModel>()
            .Name(scGrid)
            .Columns(columns =>
            {
                columns.Bound(p => p.MMSStockCode)
                    .Title("Stock Code")
                    .ClientTemplate("<a class='sc-link' data-sc-code='#= MMSStockCode #' href='javascript:void(0)'>#= MMSStockCode #</a>")
                    .Width(120);
                columns.Bound(p => p.PartType).Title("Part Type").Width(120);
                columns.Bound(p => p.OrigSupplierNum).Title("Supplier #").Width(120);
                columns.Bound(p => p.OrigSupplierName).Title("Supplier Name").Width(150);
                columns.Bound(p => p.UnitCost).Title("Unit Cost").Format("{0:c}").Width(100);
                columns.Bound(p => p.Qty).Title("Qty").Width(80);
                columns.Bound(p => p.TotalCost).Title("Total Cost").Format("{0:c}").Width(120);
                columns.Command(command =>
                {
                    command.Custom("Edit").Click("StockCodedParts_showEditPopup");
                    command.Custom("Delete").Click("StockCodedParts_onDeleteClick");
                }).Width(150).Title("Actions");
            })
            .Pageable(p => p.PageSizes(new[] { 5, 10, 20 }))
            .Scrollable()
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read
                    .Action("GetScPartsUsedInEstimates", "ScPartsUsedInEstimates")
                    .Data("StockCodedParts_getGridParams")
                    .Type(HttpVerbs.Get)
                )
              )
            )
    </div>

    <button id="scAddNew" class="k-button k-primary" style="margin-top:12px;">
        <span class="k-icon k-i-plus"></span> Add New Stock Coded Part
    </button>
</div>

<!-- Popup Window -->
@(Html.Kendo().Window()
    .Name("scEditWindow")
    .Title("Stock Coded Part Details")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Resizable()
    .Width(800)
    .Actions(actions => actions.Close())
)

<!-- Hidden container for popup content -->
<div id="scPopupContent" style="display:none;">
    <form id="scDetailForm">
        <div class="section-title">Part Details</div>
        
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Stock Code</label>
                <input id="scStockCode" class="k-textbox stock-field" readonly />
            </div>
            <div class="form-group">
                <label class="form-label">Part Type</label>
                <input id="scPartType" class="k-textbox read-only" readonly />
            </div>
            <div class="form-group">
                <label class="form-label">Supplier #</label>
                <input id="scSupplierNum" class="k-textbox read-only" readonly />
            </div>
        </div>
        
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Supplier Name</label>
                <input id="scSupplierName" class="k-textbox read-only" readonly />
            </div>
            <div class="form-group">
                <label class="form-label">Description</label>
                <input id="scPartDesc" class="k-textbox read-only" readonly />
            </div>
            <div class="form-group">
                <label class="form-label">Unit Cost</label>
                <input id="scUnitCost" class="k-textbox read-only" readonly />
            </div>
        </div>
        
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Core Cost</label>
                <input id="scCoreCost" class="k-textbox read-only" readonly />
            </div>
            <div class="form-group">
                <label class="form-label">Cost Centre</label>
                @(Html.Kendo().TextBox()
                    .Name("scCostCentre")
                    .HtmlAttributes(new { @class = "stock-field", style = "width:100%" })
                )
            </div>
            <div class="form-group">
                <label class="form-label">Qty</label>
                @(Html.Kendo().NumericTextBox<int>()
                    .Name("scQty")
                    .Format("0")
                    .Min(1)
                    .HtmlAttributes(new { style = "width:100%" })
                )
            </div>
        </div>
        
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Percentage</label>
                @(Html.Kendo().NumericTextBox<int>()
                    .Name("scPerc")
                    .Format("0")
                    .Min(0)
                    .Max(100)
                    .HtmlAttributes(new { style = "width:100%" })
                )
            </div>
            <div class="form-group">
                <label class="form-label">Total Cost</label>
                <input id="scTotCost" class="k-textbox read-only" readonly />
            </div>
            <div class="form-group"></div> <!-- Spacer -->
        </div>
        
        <div class="form-row">
            <div class="form-group">
                <label class="form-label">Modified By</label>
                <input id="scModBy" class="k-textbox read-only" readonly />
            </div>
            <div class="form-group">
                <label class="form-label">Modified Date</label>
                <input id="scModDate" class="k-textbox read-only" readonly />
            </div>
            <div class="form-group"></div> <!-- Spacer -->
        </div>
        
        <div style="margin-top:20px; display:flex; gap:12px;">
            <button id="scUpdateBtn" type="button" class="k-button k-primary">Save</button>
            <button type="button" class="k-button" onclick="$('#scEditWindow').data('kendoWindow').close()">Cancel</button>
        </div>
    </form>
</div>

<style>
    /* ... existing styles ... */
</style>

<script>
    // Initialize when document is ready
    $(document).ready(function() {
        // Initialize popup window
        const editWindow = $("#scEditWindow").kendoWindow({
            width: "800px",
            height: "auto",
            visible: false,
            modal: true,
            resizable: false
        }).data("kendoWindow");
        
        // Set popup content
        editWindow.content($("#scPopupContent").html());
        $("#scPopupContent").remove();
        
        // Add new button handler
        $("#scAddNew").click(function() {
            StockCodedParts_clearForm();
            $("#scDetailForm").data("mode", "add");
            editWindow.title("Add New Stock Coded Part");
            editWindow.center().open();
        });
        
        // Initialize form controls
        StockCodedParts_initializeFormEvents();
    });
    
    // Initialize form events
    function StockCodedParts_initializeFormEvents() {
        $("#scUpdateBtn").click(StockCodedParts_savePart);
        
        // Auto-calculate total cost
        $("#scQty, #scPerc").on("change", function() {
            StockCodedParts_calculateTotalCost();
        });
    }
    
    // Clear form
    function StockCodedParts_clearForm() {
        $("#scDetailForm input").val("");
        $("#scCostCentre").val("");
        
        const qtyNumeric = $("#scQty").data("kendoNumericTextBox");
        if (qtyNumeric) qtyNumeric.value(0);
        
        const percNumeric = $("#scPerc").data("kendoNumericTextBox");
        if (percNumeric) percNumeric.value(0);
        
        $("#scTotCost").val("");
    }
    
    // Calculate total cost
    function StockCodedParts_calculateTotalCost() {
        const qty = $("#scQty").data("kendoNumericTextBox").value() || 0;
        const unitCost = parseFloat($("#scUnitCost").val().replace(/[^0-9.-]+/g, "")) || 0;
        const perc = $("#scPerc").data("kendoNumericTextBox").value() || 0;
        const total = qty * unitCost * (1 + perc/100);
        $("#scTotCost").val(kendo.toString(total, "c2"));
    }
    
    // Save stock coded part
    function StockCodedParts_savePart() {
        const $container = $("#scPartsContainer");
        const partNum = $container.data("part-num");
        const gridType = $container.data("grid-type");
        const mode = $("#scDetailForm").data("mode");
        const isAdd = mode === "add";

        const partData = {
            MMSStockCode: $("#scStockCode").val(),
            CC: $("#scCostCentre").val(),
            Qty: $("#scQty").data("kendoNumericTextBox").value(),
            Percentage: $("#scPerc").data("kendoNumericTextBox").value(),
            UnitCost: parseFloat($("#scUnitCost").val().replace(/[^0-9.-]+/g, "")),
            CoreCost: parseFloat($("#scCoreCost").val().replace(/[^0-9.-]+/g, "")),
            LinkCode: partNum
        };

        if (isAdd && !partData.MMSStockCode) {
            kendo.alert("Stock Code is required!");
            return;
        }

        const action = isAdd 
            ? '@Url.Action("CreateScPartsUsedInEstimates", "ScPartsUsedInEstimates")'
            : '@Url.Action("UpdateScPartsUsedInEstimates", "ScPartsUsedInEstimates")';

        $.ajax({
            url: action,
            type: 'POST',
            contentType: "application/json",
            data: JSON.stringify({
                model: partData,
                id: partNum,
                gridType: gridType
            }),
            beforeSend: function() {
                kendo.ui.progress($("#scEditWindow"), true);
            },
            success: function() {
                const gridName = $container.data("grid-name");
                const grid = $("#" + gridName).data("kendoGrid");
                grid.dataSource.read();
                $("#scEditWindow").data("kendoWindow").close();
                kendo.alert("Stock-coded part saved successfully");
            },
            error: function(xhr) {
                kendo.alert("Save failed: " + xhr.responseText);
            },
            complete: function() {
                kendo.ui.progress($("#scEditWindow"), false);
            }
        });
    }
</script>
