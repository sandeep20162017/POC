Correct Implementation Using onCellClose
Update your grid .Events() section:

csharp
Copy
Edit
.Events(events => {
    events.CellClose("onGridCellClose");
    events.SaveChanges("onSaveChanges"); // optional but helpful
})
âœ… JavaScript: onGridCellClose
javascript
Copy
Edit
function onGridCellClose(e) {
    const field = e.column.field;
    const model = e.model;

    if (!["Qty", "UnitCost", "CoreCost", "Percentage"].includes(field)) {
        return;
    }

    setTimeout(() => {
        const qty = parseFloat(model.Qty) || 0;
        const unitCost = parseFloat(model.UnitCost) || 0;
        const coreCost = parseFloat(model.CoreCost) || 0;
        const percentage = parseFloat(model.Percentage) || 0;

        const coreCharge = qty * coreCost * (percentage / 100);
        const totalUnitCost = qty * unitCost * (percentage / 100);
        const totalCost = totalUnitCost + coreCharge;

        model.set("CoreCharge", coreCharge);
        model.set("TotalCost", totalCost);

        const grid = e.sender;
        const row = grid.items().filter(`[data-uid='${model.uid}']`);
        const totalCostIndex = grid.columns.findIndex(c => c.field === "TotalCost");

        if (totalCostIndex !== -1 && row.length) {
            const cell = row.children().eq(totalCostIndex);
            const formatted = kendo.toString(totalCost, "c2");
            cell.html(kendo.htmlEncode(formatted));
        }

        console.log("TotalCost recalculated and cell updated:", totalCost);
    }, 0);
}
