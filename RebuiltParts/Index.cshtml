@using BCES.Models.Parts
@model IEnumerable<BCES.Models.Parts.RebuiltPartsViewModel>

@{
    ViewData["Title"] = "Rebuilt Parts";
}

<h4>Rebuilt Parts</h4>

@(Html.Kendo().Grid<RebuiltPartsViewModel>()
    .Name("RebuiltPartsGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.RebuiltStockNum).Title("Rebuilt Stock Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.MmsStockCode).Title("MMS Stock Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.DetailedDesc).Title("Description").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.Keyword).Title("Keyword").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.JobNumber).Title("Job Number").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.CorePartNum).Title("Core Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        @* columns.Bound(c => c.VehicleSeries).Title("Vehicle Series")
        .ClientTemplate("# if (typeof VehicleSeries != 'undefined' && VehicleSeries && VehicleSeries.length > 0) { # #= VehicleSeries.map(VehicleSeries => VehicleSeries.Description).join(', ') # # } else { # Select Vehicle # } #")
             .EditorTemplateName("RebuiltPartsVehicleSeriesMultiSelect");
        ; *@
        columns.Bound(c => c.CoreCharge).Title("Core Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency"); ;
        columns.Bound(c => c.BuyNewCost).Title("Buy Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency"); ;
        columns.Bound(c => c.RemanCost).Title("Remanufactured Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency"); ;

       
       @*  columns.Bound(c => c.LastModifiedBy).Title("Modified By").EditorTemplateName("TextBoxTemplate"); *@
        @* columns.Bound(c => c.LastModifiedDate).Title("Modified Date").EditorTemplateName("TextBoxTemplate"); *@
       
        columns.Command(command =>
            {
                command.Edit();
                @* command.Destroy();
                command.Custom("Estimate").Click("openEstimates"); *@
            }).Title("Actions");
        
       
    })

    .ToolBar(toolbar => { toolbar.Create(); })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
     .ClientDetailTemplateId("template")   
    .Resizable(r => r.Columns(true))
     .Groupable(g => g.ShowFooter(false))
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))    
    .Scrollable()

    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            model.Id(c => c.RbMasterlistId);
            model.Field(c => c.RbMasterlistId);//.DefaultValue(new List<string>());
            model.Field(c => c.RebuiltStockNum);
        })
       
        .Read(read => read.Url(Url.Action("GetRebuiltPartsView", "RebuiltParts")).Type(HttpVerbs.Get))
            
    )
)
<div id="estimates-container"></div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var grid = $("#RebuiltPartsGrid").data("kendoGrid");

            grid.bind("detailInit", function (e) {
                // Get the container for the detail template
                var container = e.detailCell.find("#detail-template-" + e.data.RebuiltStockNum);

                // Load PartialTest1
                $.get('/Common/PartialViewTest/PartialTest1', function (data) {
                    container.append(data); // Append the content of PartialTest1
                });

                // // Load PartialTest2
                // $.get('/Common/PartialViewTest/PartialTest2', function (data) {
                //     console.log(data);
                //     container.append(data); // Append the content of PartialTest2
                // });
            });
        });
    </script>


<script>
        function openEstimates(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            var rebuiltStockNum = dataItem.RebuiltStockNum;
            $.ajax({
                url: '@Url.Action("GetRebuiltPartEstimates", "RebuiltParts")',
                type: 'GET',
                data: { RebuiltStockNum: rebuiltStockNum },
                success: function (result) {
                    $('#estimates-container').html(result);
                },
                error: function (xhr, status, error) {
                    console.error('An error occurred: ' + error);
                }
            });
        }
</script>
    <script id="template" type="text/x-kendo-template">
        <div id="detail-template-#=RebuiltStockNum#"></div>
    </script>

  
    <script>
        function dataBound() {
            this.expandRow(this.tbody.find("tr.k-master-row").first());
        }
    </script>

    <script>
        function onVehicleChange(e) {
            // debugger;
            console.log("event: onVehicleChange");
            var selectedVehicles = this.value();
            console.log("selected vehicles :");
            console.log(selectedVehicles);
        
            $.ajax({
                url: '@Url.Action("GetSelectedVehicles", "RebuiltPartsGrid")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ vehicles: selectedVehicles }),
                beforeSend: function (xhr) {
                    console.log("Sending data :", JSON.stringify({ vehicles: selectedVehicles }));
                },
                success: function (data) {
                    console.log('Success:', data);
                    // Optionally, update the UI with the response
                },

                error: function (error, data) {
                    console.log('datasent : ', data);
                    console.error('Error:', error);
                }
            });
            ////
        }
    </script>
}
