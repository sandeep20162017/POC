(function ($) {
    $.fn.trackUnsavedChanges = function () {
        const gridEl = this;
        const grid = gridEl.data("kendoGrid");
        if (!grid) return;

        // Handle edit start (for tag display before dirty is true)
        grid.bind("edit", () => {
            setTimeout(() => showUnsavedTags(grid), 100);
        });

        // Handle cell value change (dirty flag becomes true)
        grid.bind("change", () => {
            setTimeout(() => showUnsavedTags(grid), 100);
        });

        // Clear on save
        grid.bind("requestEnd", () => {
            clearUnsavedTags();
        });

        // Handle scroll/resize
        const gridId = gridEl.attr("id");
        $(window).off("resize.scroll" + gridId).on("resize.scroll" + gridId, () => {
            updateFloatingTagPositions(grid);
        });

        gridEl.off("scroll.scroll" + gridId).on("scroll.scroll" + gridId, ".k-grid-content", () => {
            updateFloatingTagPositions(grid);
        });
    };

    function showUnsavedTags(grid) {
        const ds = grid.dataSource;
        $(".unsaved-floating-tag").remove();

        ds.view().forEach(item => {
            if (item.dirty || item.isNew()) {
                const row = grid.tbody.find(`tr[data-uid='${item.uid}']`);
                if (!row.length) return;

                row.addClass("unsaved-row");

                const rowOffset = row.offset();
                if (!rowOffset) return;

                const tag = $(`
                    <div class='unsaved-floating-tag animated-fade-in' data-uid='${item.uid}'>
                        âš  UNSAVED CHANGES
                    </div>
                `).css({
                    position: "absolute",
                    top: rowOffset.top + row.outerHeight(),
                    left: rowOffset.left,
                    width: row.outerWidth(),
                    zIndex: 1000
                });

                $("body").append(tag);
            }
        });

        updateFloatingTagPositions(grid);
    }

    function updateFloatingTagPositions(grid) {
        $(".unsaved-floating-tag").each(function () {
            const tag = $(this);
            const uid = tag.data("uid");
            const row = grid.tbody.find(`tr[data-uid='${uid}']`);
            if (!row.length) return;

            const rowOffset = row.offset();
            if (!rowOffset) return;

            tag.css({
                top: rowOffset.top + row.outerHeight(),
                left: rowOffset.left,
                width: row.outerWidth()
            });
        });
    }

    function clearUnsavedTags() {
        $(".unsaved-row").removeClass("unsaved-row");
        $(".unsaved-floating-tag").remove();
    }
})(jQuery);
