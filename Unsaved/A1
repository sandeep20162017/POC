
✅ Add “UNSAVED” Tag Below the Row
You’ll want to dynamically insert a new row after the current row in the grid that displays "UNSAVED".

🧩 Updated JS (inside your onRbDataSourceChange function)
js
Copy
Edit
function onRbDataSourceChange(e) {
    const grid = $("#RbPartsMaterialDetailsRebuiltPartsGrid").data("kendoGrid");
    const ds = grid.dataSource;

    // Clear any existing tags
    $(".unsaved-row, .unsaved-badge").remove();

    ds.view().forEach(item => {
        if (item.dirty || item.isNew()) {
            const row = grid.tbody.find(`tr[data-uid='${item.uid}']`);
            row.addClass("unsaved-row");

            // Create the "UNSAVED" row below
            const colspan = row.children("td").length;
            const unsavedRow = $(`
                <tr class='unsaved-badge'>
                    <td colspan='${colspan}' style='text-align: center; color: red; font-weight: bold;'>UNSAVED</td>
                </tr>
            `);
            row.after(unsavedRow);
        }
    });
}
🧼 Cleanup on Save or Refresh
You should also clear these “UNSAVED” rows when saving or rebinding the grid:

js
Copy
Edit
function onRbRequestEnd(e) {
    $(".unsaved-row, .unsaved-badge").remove();
}
You're already wiring this:

csharp
Copy
Edit
.Events(events => events.RequestEnd("onRbRequestEnd"))
💡 Bonus Styling (Optional)
In your CSS:

css
Copy
Edit
.unsaved-row {
    background-color: #fff3cd !important; /* light yellow */
}

.unsaved-badge td {
    background-color: #ffeeba !important;
    border-top: none;
}
