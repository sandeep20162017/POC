 1. Create the Plugin
You can drop this into your site.js or a dedicated kendo-plugins.js file.

js
Copy
Edit
(function ($) {
    $.fn.trackUnsavedChanges = function () {
        const gridEl = this;
        const grid = gridEl.data("kendoGrid");
        if (!grid) return;

        // Handle data changes (edit/add)
        grid.bind("change", () => {
            showUnsavedTags(grid);
        });

        // Cleanup on save
        grid.bind("requestEnd", () => {
            clearUnsavedTags();
        });

        // Handle scroll and resize
        const gridId = gridEl.attr("id");
        $(window).off("resize.scroll" + gridId).on("resize.scroll" + gridId, () => {
            updateFloatingTagPositions(grid);
        });

        gridEl.off("scroll.scroll" + gridId).on("scroll.scroll" + gridId, ".k-grid-content", () => {
            updateFloatingTagPositions(grid);
        });
    };

    function showUnsavedTags(grid) {
        const ds = grid.dataSource;
        $(".unsaved-floating-tag").remove();

        setTimeout(() => {
            ds.view().forEach(item => {
                if (item.dirty || item.isNew()) {
                    const row = grid.tbody.find(`tr[data-uid='${item.uid}']`);
                    if (!row.length) return;

                    row.addClass("unsaved-row");

                    const rowOffset = row.offset();
                    if (!rowOffset) return;

                    const tag = $(`
                        <div class='unsaved-floating-tag animated-fade-in' data-uid='${item.uid}'>
                            âš  UNSAVED CHANGES
                        </div>
                    `).css({
                        position: "absolute",
                        top: rowOffset.top + row.outerHeight(),
                        left: rowOffset.left,
                        width: row.outerWidth(),
                        zIndex: 1000
                    });

                    $("body").append(tag);
                }
            });

            updateFloatingTagPositions(grid);
        }, 100);
    }

    function updateFloatingTagPositions(grid) {
        $(".unsaved-floating-tag").each(function () {
            const tag = $(this);
            const uid = tag.data("uid");
            const row = grid.tbody.find(`tr[data-uid='${uid}']`);
            if (!row.length) return;

            const rowOffset = row.offset();
            if (!rowOffset) return;

            tag.css({
                top: rowOffset.top + row.outerHeight(),
                left: rowOffset.left,
                width: row.outerWidth()
            });
        });
    }

    function clearUnsavedTags() {
        $(".unsaved-row").removeClass("unsaved-row");
        $(".unsaved-floating-tag").remove();
    }
})(jQuery);
ðŸŽ¨ 2. CSS (same as before)
Drop this in site.css or inside a <style> tag:

css
Copy
Edit
.unsaved-row {
    background-color: #fff9e6 !important;
}

.unsaved-floating-tag {
    background-color: #fff3cd;
    color: #856404;
    font-weight: bold;
    text-align: center;
    padding: 4px 10px;
    font-size: 13px;
    border: 1px solid #ffeeba;
    border-radius: 3px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    white-space: nowrap;
    pointer-events: none;
}

.animated-fade-in {
    animation: fadeInTag 0.4s ease-in-out;
}

@keyframes fadeInTag {
    from { opacity: 0; transform: translateY(-5px); }
    to { opacity: 1; transform: translateY(0); }
}
ðŸ§© 3. Hook It In Your Razor View (Any Partial or Tab)
In the partial view where your grid is defined (e.g. RbPartsMaterialDetailsRebuiltPartsGrid):

html
Copy
Edit
<script>
    $(document).ready(function () {
        $("#RbPartsMaterialDetailsRebuiltPartsGrid").trackUnsavedChanges();
    });
</script>
You can copy/paste that line for each grid partial view:

html
Copy
Edit
<script>
    $(document).ready(function () {
        $("#LabourDetailsGrid").trackUnsavedChanges();
        $("#ScPartsGrid").trackUnsavedChanges();
        $("#NSCPartsGrid").trackUnsavedChanges();
    });
</script>
Or, dynamically bind it after tab load with:

js
Copy
Edit
function activateTab(tabId) {
    const grid = $("#" + tabId + " .k-grid");
    if (grid.length) {
        grid.trackUnsavedChanges();
    }
}
