1. Telerik HTML Editor Implementation
View (Views/Content/Editor.cshtml):
html
Copy
@model MyApp.Models.ContentModel
@using Telerik.UI for ASP.NET Core

<h3>HTML Editor</h3>

@using (Html.BeginForm("SaveContent", "Content", FormMethod.Post))
{
    @(Html.Kendo().Editor()
        .Name("htmlEditor")
        .Tools(tools => tools
            .Clear()
            .Bold().Italic().Underline()
            .CreateLink().Unlink()
            .InsertImage()
            .TableEditing()
            .ViewHtml()
        )
        .Value(Model.Content)
    )

    <button type="submit" class="btn btn-primary mt-3">Save</button>
}
Run HTML
2. Database Table Schema
sql
Copy
CREATE TABLE [dbo].[HtmlContent] (
    [Id] INT IDENTITY(1,1) PRIMARY KEY,
    [Content] NVARCHAR(MAX) NOT NULL,  -- Use NVARCHAR(MAX) for Unicode support
    [CreatedDate] DATETIME DEFAULT GETDATE()
);
3. Model Class
csharp
Copy
// Models/ContentModel.cs
public class ContentModel
{
    public int Id { get; set; }
    public string Content { get; set; }
    public DateTime CreatedDate { get; set; }
}
4. Controller Implementation
csharp
Copy
// Controllers/ContentController.cs
public class ContentController : BaseController
{
    [HttpPost]
    public IActionResult SaveContent(string htmlEditor)
    {
        try
        {
            // Save to DB using Dapper
            _dbConnection.Execute(
                @"INSERT INTO HtmlContent 
                (Content) 
                VALUES 
                (@Content)",
                new { Content = htmlEditor });

            return RedirectToAction("Success");
        }
        catch (Exception ex)
        {
            return HandleError(ex);
        }
    }
}
Key Features of Telerik Editor:
HTML Support: Directly works with HTML content

Toolbar Tools: Built-in formatting options, image upload, tables, etc.

View Source: Toggle between WYSIWYG and raw HTML modes

Cross-Browser Support: Works consistently across modern browsers

Important Notes:
Database Column Type:

Use NVARCHAR(MAX) instead of VARCHAR to support Unicode characters

If you specifically need VARCHAR, use:

sql
Copy
[Content] VARCHAR(MAX) NOT NULL
Security:

csharp
Copy
// Sanitize HTML content before saving (recommended)
using Ganss.Xss;
var sanitizer = new HtmlSanitizer();
var cleanHtml = sanitizer.Sanitize(htmlEditor);
Displaying Content:

html
Copy
@Html.Raw(Model.Content)  <!-- Use in views to render HTML -->
Run HTML
Why This Works:
The Telerik Editor outputs clean HTML markup

NVARCHAR/VARCHAR(MAX) supports up to 2GB of text

Direct mapping between editor content and database field
