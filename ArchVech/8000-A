Update your C# Action

Your current action returns StatusCode(500, message) on error.
That’s fine — just make sure it returns a clear message the client can read:

[HttpPost]
[AllowAnonymous]
public async Task<IActionResult> DeleteRebuiltPart(string RebuiltId)
{
    try
    {
        if (string.IsNullOrEmpty(RebuiltId))
        {
            return BadRequest("Invalid data.");
        }

        var deletePartSql = $"DELETE FROM SBCES.RbMasterlist WHERE RbMasterlistId = '{RebuiltId}'";

        int affectedRows = await _dbConnection.ExecuteAsync(deletePartSql);

        return Json(new { success = affectedRows > 0 });
    }
    catch (Exception)
    {
        // ⚠️ Send a friendly message for the frontend
        return StatusCode(500, "Unable to delete, part is used in archived estimates.");
    }
}


✅ This ensures the frontend receives:

{ "message": "Unable to delete, part is used in archived estimates." }


with a 500 status.

✅ 2️⃣ Update Your JS (jQuery) Delete Logic

Modify your $.post call to use $.ajax() so we can handle both success and error cases.

Here’s the clean, production-safe version:

window.showDeleteConfirmation = function (e) {
    e.preventDefault();
    var grid = this; // Kendo Grid instance
    var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));
    if (!dataItem) {
        console.error("No dataItem found for delete action");
        return;
    }

    var dlg = $("#deleteConfirmationDialog").data("kendoWindow");
    dlg.center().open();

    $("#confirmDeleteBtn").off("click").on("click", function () {
        $.ajax({
            type: "POST",
            url: "/RebuiltParts/DeleteRebuiltPart",
            data: { RebuiltId: dataItem.RebuiltId },
            success: function (response) {
                if (response.success) {
                    grid.dataSource.read();
                    dlg.close();
                } else {
                    kendo.alert("Unable to delete part.");
                }
            },
            error: function (xhr) {
                // If server returns custom message, use it; otherwise generic message
                var msg = xhr.responseText || "Unable to delete part.";
                kendo.alert(msg);
            }
        });
    });

    $("#cancelDeleteBtn").off("click").on("click", function () {
        dlg.close();
    });
};
