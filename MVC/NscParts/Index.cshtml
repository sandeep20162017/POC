@model IEnumerable<BCES.Models.Parts.NscPartsUsedViewModel>

@(Html.Kendo().Grid<BCES.Models.Parts.NscPartsUsedViewModel>()
    .Name("NscPartsUsedGrid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Id).Hidden();
        columns.Bound(p => p.SupplierName).Title("Supplier Name");
        columns.Bound(p => p.SupplierNumber).Title("Supplier Number");
        columns.Bound(p => p.Keyword).Title("Keyword");
        columns.Bound(p => p.PartDescription).Title("Part Description");
        columns.Bound(p => p.PartUnit).Title("Part Unit ($/Unit)");
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("NscPartsAddUpdate"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model => model.Id(p => p.Id))
        .Read(read => read.Action("GetNscPartsUsedView", "NscPartsUsed"))
        .Create(create => create.Action("CreateNscPartsUsed", "NscPartsUsed"))
        .Update(update => update.Action("UpdateNscPartsUsed", "NscPartsUsed"))
        .Destroy(destroy => destroy.Action("DestroyNscPartsUsed", "NscPartsUsed"))
    )
)

@(Html.Kendo().Window()
    .Name("NscPartsAddUpdate")
    .Title("Add/Update Part")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(600)
    .Content(@<text>
        @await Html.PartialAsync("NscPartsAddUpdate", new BCES.Models.Parts.NscPartsUsedViewModel())
    </text>)
)