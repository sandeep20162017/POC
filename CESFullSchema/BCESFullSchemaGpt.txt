-- Create LabourHours Table
CREATE TABLE [BCES].[LabourHours] (
    LabourHoursId INT PRIMARY KEY,
    Hours NUMERIC(18, 2)
);

-- Create MbList Table
CREATE TABLE BCES.MbList (
    MbListId INT PRIMARY KEY,
    Definition NVARCHAR(50)
    -- Add other columns as needed
);

-- Create LabourUsage Table
CREATE TABLE BCES.LabourUsage (
    LabourUsageId INT PRIMARY KEY,
    Usage NUMERIC(18, 2)
);

-- Create LabourDefinition Table
CREATE TABLE BCES.LabourDefinition (
    LabourDefinitionId INT PRIMARY KEY,
    Definition NVARCHAR(255)
);

-- Create InterCost Table
CREATE TABLE BCES.InterCost (
    InterCostId INT PRIMARY KEY,
    Cost NUMERIC(18, 2)
);

-- Create CoreCost Table
CREATE TABLE BCES.CoreCost (
    CoreCostId INT PRIMARY KEY,
    Cost NUMERIC(18, 2)
);

-- Create JobNumber Table
CREATE TABLE BCES.JobNumber (
    JobNumberId INT PRIMARY KEY,
    Number NVARCHAR(25)
);

-- Create KitsUsed Table
CREATE TABLE BCES.KitsUsed (
    KitsUsedId INT PRIMARY KEY,
    Used NVARCHAR(255)
);

-- Create SopNumber Table
CREATE TABLE BCES.SopNumber (
    SopNumberId INT PRIMARY KEY,
    Number NVARCHAR(25)
);

-- Create NumOfVehicles Table
CREATE TABLE BCES.NumOfVehicles (
    NumOfVehiclesId INT PRIMARY KEY,
    Number INT
);

-- Create TextData Table
CREATE TABLE BCES.TextData (
    TextDataId INT PRIMARY KEY,
    TextType NVARCHAR(4),
    TextKey NVARCHAR(255),
    TextValue NVARCHAR(MAX)
);

-- Create VendorPartDesc Table
CREATE TABLE BCES.VendorPartDesc (
    VendorPartDescId INT PRIMARY KEY,
    PartNumber NVARCHAR(13),
    PrintSeq NUMERIC(10, 0),
    VendorPartNumber NVARCHAR(25),
    Description NVARCHAR(255)
);

-- Create CesSettings Table
CREATE TABLE BCES.CesSettings (
    CesSettingsId INT PRIMARY KEY,
    SettingName NVARCHAR(255),
    SettingValue NVARCHAR(255)
);

-- Create VehicleSeries Table
CREATE TABLE BCES.VehicleSeries (
    VehicleSeriesId INT PRIMARY KEY,
    SeriesName NVARCHAR(255)
);

-- Create LabourTypes Table
CREATE TABLE BCES.LabourTypes (
    LabourTypeId INT PRIMARY KEY,
    LabourTypeName NVARCHAR(255)
);

-- Create Tasks Table
CREATE TABLE BCES.Tasks (
    TaskId INT PRIMARY KEY,
    TaskName NVARCHAR(255)
);

-- Create EstimateTypes Table
CREATE TABLE BCES.EstimateTypes (
    EstimateTypeId INT PRIMARY KEY,
    EstimateTypeName NVARCHAR(255)
);

-- Create Estimates Table
CREATE TABLE BCES.Estimates (
    EstimateNumber NVARCHAR(25) PRIMARY KEY,
    EstimateTypeId INT,
    FOREIGN KEY (EstimateTypeId) REFERENCES BCES.EstimateTypes(EstimateTypeId)
);

-- Create CostCentres Table
CREATE TABLE BCES.CostCentres (
    CostCentreId NVARCHAR(4) PRIMARY KEY,
    CostCentreName NVARCHAR(255)
);

-- Create Differential Table
CREATE TABLE BCES.Differential (
    DifferentialId INT PRIMARY KEY,
    DifferentialName NVARCHAR(255)
);

-- Create Engines Table
CREATE TABLE BCES.Engines (
    EngineId INT PRIMARY KEY,
    EngineName NVARCHAR(255)
);

-- Create Transmissions Table
CREATE TABLE BCES.Transmissions (
    TransmissionId INT PRIMARY KEY,
    TransmissionName NVARCHAR(255)
);

-- Create TypeOfVehicle Table
CREATE TABLE BCES.TypeOfVehicle (
    TypeOfVehicleId INT PRIMARY KEY,
    Make NVARCHAR(255),
    Model NVARCHAR(255),
    Year NVARCHAR(4)
);

-- Create VehicleList Table
CREATE TABLE BCES.VehicleList (
    VehicleListId INT PRIMARY KEY,
    VehicleSeriesCode NVARCHAR(500),
    NumOfVehicles NVARCHAR(10),
    ProjDesc NVARCHAR(200),
    DateEntered DATETIME,
    EnteredBy NVARCHAR(25),
    ModifiedLastBy NVARCHAR(25),
    ModifiedLastDate DATETIME,
    Make NVARCHAR(25),
    Model NVARCHAR(25),
    Year NVARCHAR(4),
    EngineId INT,
    TransmissionId INT,
    DifferentialId INT,
    SopNumber NVARCHAR(30),
    FOREIGN KEY (EngineId) REFERENCES BCES.Engines(EngineId),
    FOREIGN KEY (TransmissionId) REFERENCES BCES.Transmissions(TransmissionId),
    FOREIGN KEY (DifferentialId) REFERENCES BCES.Differential(DifferentialId)
);

-- Create RbMasterlist Table
CREATE TABLE BCES.RbMasterlist (
    RbMasterlistId INT IDENTITY(1,1) PRIMARY KEY,
    MmsStockCode NVARCHAR(30),
    ItemRefNumber NVARCHAR(16),
    DetailedDesc NVARCHAR(250),
    Keyword NVARCHAR(250),
    CorePartNum NVARCHAR(30),
    RebuiltStockNum NVARCHAR(30),
    CoreCharge NVARCHAR(25),
    JobNumber NVARCHAR(25),
    DateModified DATETIME,
    LastModifiedBy NVARCHAR(50),
    EstimatedCost NUMERIC(20, 2),
    SopNumber NVARCHAR(25),
    BuyNewCost NVARCHAR(25),
    RemanCost NVARCHAR(25),
    ExternalCost NVARCHAR(25),
    DateConverted DATETIME,
    Active NUMERIC(4, 0),
    --RbMasterlistId INT IDENTITY(1,1) NOT NULL
);

-- Create RebuiltParts Table
CREATE TABLE BCES.RebuiltParts (
    RebuiltPartId INT PRIMARY KEY,
    CesSettingsId INT,
    RbMasterlistId INT,
    VehicleSeriesId INT,
    LabourTypeId INT,
    CostCentreId NVARCHAR(4),
    FOREIGN KEY (CesSettingsId) REFERENCES BCES.CesSettings(CesSettingsId),
    FOREIGN KEY (RbMasterlistId) REFERENCES BCES.RbMasterlist(RbMasterlistId),
    FOREIGN KEY (VehicleSeriesId) REFERENCES BCES.VehicleSeries(VehicleSeriesId),
    FOREIGN KEY (LabourTypeId) REFERENCES BCES.LabourTypes(LabourTypeId),
    FOREIGN KEY (CostCentreId) REFERENCES BCES.CostCentres(CostCentreId)
);

-- Create MaterialSummary Table
CREATE TABLE BCES.MaterialSummary (
    MaterialSummaryId INT PRIMARY KEY,
    StockCodedPartsUsedId INT,
    TotalCost NUMERIC(18, 2),
    OtherRebuiltMaterialListColumns NVARCHAR(255)
);

-- Ensure Primary Key on StockParts Table
ALTER TABLE BCES.StockParts
ADD CONSTRAINT PK_StockParts PRIMARY KEY (StockPartsId);

-- Create StockParts Table with Correct Foreign Key Constraints
CREATE TABLE BCES.StockParts (
    StockPartsId INT PRIMARY KEY,
    ScPartsUsedId INT,
    StockCodedPartsId INT,
    OtherStockCodedPartsColumns NVARCHAR(255),
    FOREIGN KEY (ScPartsUsedId) REFERENCES BCES.StockParts(StockPartsId),
    FOREIGN KEY (StockCodedPartsId) REFERENCES BCES.StockParts(StockPartsId)
);

-- Ensure Primary Key on NonStockParts Table
ALTER TABLE BCES.NonStockParts
ADD CONSTRAINT PK_NonStockParts PRIMARY KEY (NonStockPartsId);

-- Create NonStockParts Table with Correct Foreign Key Constraints
CREATE TABLE BCES.NonStockParts (
    NonStockPartsId INT PRIMARY KEY,
    NscPartsUsedId INT,
    NonStockCodedPartsId INT,
    OtherNonStockCodedPartsColumns NVARCHAR(255),
    FOREIGN KEY (NscPartsUsedId) REFERENCES BCES.NscPartsUsed(NscPartsUsedId),
    FOREIGN KEY (NonStockCodedPartsId) REFERENCES BCES.NonStockCodedParts(NonStockCodedPartsId)
);

-- Create KitsSummary Table with Correct Foreign Key Constraints
CREATE TABLE BCES.KitsSummary (
    KitsSummaryId INT PRIMARY KEY,
    KitsUsedId INT,
    StockCodedPartsId INT,
    KitsMasterlistId INT,
    OtherSubKitsColumns NVARCHAR(255),
    FOREIGN KEY (KitsUsedId) REFERENCES BCES.KitsUsed(KitsUsedId),
    FOREIGN KEY (StockCodedPartsId) REFERENCES BCES.StockParts(StockPartsId),
    FOREIGN KEY (KitsMasterlistId) REFERENCES BCES.KitsSummary(KitsSummaryId)
);

-- Create BusCostEstimate Table
CREATE TABLE [BCES].[BusCostEstimate] (
    BusCostEstimateId INT PRIMARY KEY,
    CesSettingsId INT,
    DifferentialId INT,
    SopNumberId INT,
    TransmissionId INT,
    NumOfVehiclesId INT,
    VehicleSeriesId INT,
    FOREIGN KEY (CesSettingsId) REFERENCES BCES.CesSettings(CesSettingsId),
    FOREIGN KEY (DifferentialId) REFERENCES BCES.Differential(DifferentialId),
    FOREIGN KEY (SopNumberId) REFERENCES BCES.SopNumber(SopNumberId),
    FOREIGN KEY (TransmissionId) REFERENCES BCES.Transmissions(TransmissionId),
    FOREIGN KEY (NumOfVehiclesId) REFERENCES BCES.NumOfVehicles(NumOfVehiclesId),
    FOREIGN KEY (VehicleSeriesId) REFERENCES BCES.VehicleSeries(VehicleSeriesId)
);

-- Create LabourSummary Table
CREATE TABLE BCES.LabourSummary (
    LabourSummaryId INT PRIMARY KEY,
    LabourHoursId INT,
    LabourUsageId INT,
    LabourDefinitionId INT,
    CostCentreId NVARCHAR(4),
    OtherBusLaborColumns NVARCHAR(255),
    FOREIGN KEY (LabourHoursId) REFERENCES BCES.LabourHours(LabourHoursId),
    FOREIGN KEY (LabourUsageId) REFERENCES BCES.LabourUsage(LabourUsageId),
    FOREIGN KEY (LabourDefinitionId) REFERENCES BCES.LabourDefinition(LabourDefinitionId),
    FOREIGN KEY (CostCentreId) REFERENCES BCES.CostCentres(CostCentreId)
);

-- Create MbCostEstimate Table
CREATE TABLE BCES.MbCostEstimate (
    MbCostEstimateId INT PRIMARY KEY,
    CesSettingsId INT,
    MbListId INT,
    InterCostId INT,
    CoreCostId INT,
    JobNumberId INT,
    FOREIGN KEY (CesSettingsId) REFERENCES BCES.CesSettings(CesSettingsId),
    FOREIGN KEY (MbListId) REFERENCES BCES.MbList(MbListId),
    FOREIGN KEY (InterCostId) REFERENCES BCES.InterCost(InterCostId),
    FOREIGN KEY (CoreCostId) REFERENCES BCES.CoreCost(CoreCostId),
    FOREIGN KEY (JobNumberId) REFERENCES BCES.JobNumber(JobNumberId)
);