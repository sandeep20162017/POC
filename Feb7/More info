You are ASP.NET core expert and hve vast knowledhe of Telerik ASP.NET Core.
In the Telerik grid, I have a cloumn called Vehicle series. I want to use Telerik MultiSelect control. 
Column shold display BusDescriipton in a comma seperable values. Question to expert - Is Telerik grid return data as commma seperated string or
JSON object? Each Rebuild type can vahe one or many buses. Using INLINE Edit for grid create and update.
Pls help me to complete the code and add details in the below code where I mentioned Question to expert.


Buses Model :
namespace BCES.Models.Parts
{
    public class BusesModel
    {
        public int? ListId { get; set; }
        public string Description { get; set; }
       
    }
}

RebuiltPartsController,cs :
    public async Task<IActionResult> AddRebuiltPartsView(
[DataSourceRequest] DataSourceRequest request,
[FromForm] RebuiltPartsViewModel rebuiltPartsViewModel)
    {
...
}
RebuiltPartsViewModel.cs :
namespace BCES.Models.Parts
{
    public class RebuiltPartsViewModel
    {
       public int RbMasterlistId {  get; set; }
  public string MmsStockCode { get; set; }
  public string DetailedDesc { get; set; }
    public List<BusesModel> ListOfBus { get; set; } = new List<BusesModel>();
 ....
}
}
Index.cshtml :
 @(Html.Kendo().Grid<RebuiltPartsViewModel>()
     .Name("RebuiltPartsGrid")
     .Columns(columns =>
     {
         columns.Bound(c => c.RebuiltStockNum).Title("Rebuilt Stock Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
         columns.Bound(c => c.MmsStockCode).Title("MMS Stock Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
         columns.Bound(c => c.DetailedDesc).Title("Description").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).EditorTemplateName("AutoCompleteEditor");
         columns.Bound(c => c.Keyword).Title("Keyword").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
         columns.Bound(c => c.ListOfBus)
         .Title("Vehicle Series")
         .ClientTemplate("# if (ListOfBus && ListOfBus.length > 0) { # #= ListOfBus.map(bus => bus.Description).join(', ') # # } else { # - # } #")
         .EditorTemplateName("VehicleSeriesEditor"); 
  ...
   }
 ..
       .Model(model =>
    {
        model.Id(c => c.RbMasterlistId);
        model.Field(c => c.RbMasterlistId);
        model.Field(c => c.RebuiltStockNum).Editable(true);
        model.Field(c => c.MmsStockCode).Editable(true);
       // model.Field(u => u.ListIds).DefaultValue(new List<int>());
       // model.Field(u => u.BusNames).DefaultValue(new List<string>());
        model.Field(c => c.ListOfBus).DefaultValue(new List<BCES.Models.Parts.BusesModel>()).Editable(true); //multiselect
        model.Field(c => c.LabourDetailsRebuiltParts).DefaultValue(new List<BCES.Models.Parts.LabourDetailsRebuiltPartsViewModel>()).Editable(false);
       
        })
         .Events(events => events.RequestStart("onRequestStart"))      

    .Read(read => read.Url(Url.Action("GetRebuiltPartsView", "RebuiltParts")).Type(HttpVerbs.Get))
    .Create(create => create.Url(Url.Action("AddRebuiltPartsView", "RebuiltParts")).Type(HttpVerbs.Post))
    .Update(update => update.Url(Url.Action("UpdateRebuiltPartsView", "RebuiltParts")).Type(HttpVerbs.Post))
)
VehicleSeriesEditor.cshtml : //Question to expert : Do we need Model in here and .Value?

@(Html.Kendo().MultiSelect()
    .Name("ListOfBus")
    .DataTextField("Description")
    .DataValueField("ListId")
    .Placeholder("Select vehicle series...")
    .DataSource(source =>
    {
        source.Read(read => read.Url(Url.Action("GetVehicleSeries", "RebuiltParts")).Type(HttpVerbs.Get));
    })
    
)

        
