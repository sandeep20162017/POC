You are MS SQL and Oracle SQL expert.
I have included herewith Oracle query. I need to migrate these queries to MS SQL. 
Oracle and SQL database schema is same. Only difference is Table and column names.
Table  and column names in MS SQL is without underscore (_). Example Oracle column LAST_MODIFIED_BY will be like LASTMODIFIEDBY, Oracle DATE_MODIFIED is like DATEMODIFIED in MS SQL.
Pls help me convert the following oracle queries to MS SQL query. get the insert values from the model provided below. Match the names. Give me the insert statements
like example below.
Oracle query :
INSERT INTO RB_MASTERLIST ( LAST_MODIFIED_BY, DATE_MODIFIED, JOB_NUMBER, CORE_CHARGE, REBUILT_STOCK_NUM, CORE_PART_NUM, KEYWORD, DETAILED_DESC, MMS_STOCK_CODE, 
                           ESTIMATED_COST, 
                           SOP_NUMBER, BUY_NEW_COST, REMAN_COST, EXTERNAL_COST, ACTIVE ) VALUES ( UPPER(NVL(:B13 , ' ')), 
  SYSDATE, UPPER(NVL(:B12 , ' ')), NVL(:B11 , ' '), NVL(:B10 ,' '), NVL(:B9 ,' '), UPPER(NVL(:B8 , ' ')), 
  UPPER(NVL(:B7 , ' ')), NVL(:B6 , ' '), 0, NVL(:B5 , ' '), NVL(:B4 , ''), NVL(:B3 , ''), NVL(:B2 , ''), :B1 )

Update RB Part :
SELECT UPPER(SC_PARTS_USED.LINK_CODE) AS "link_code", UPPER(SC_PARTS_USED.LINK_TYPE) AS "link_type" FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.MMS_REBUILT_CODE = :B1
Model.cs :
using BCES.Models.Common;

namespace BCES.Models.Parts
{
    public class RebuiltPartsViewModel
    {
      public int RbMasterlistId {  get; set; }
        public string MmsStockCode { get; set; }
        public string DetailedDesc { get; set; }
        public string Keyword { get; set; }
        public string JobNumber { get; set; }
        public string RebuiltStockNum { get; set; }
        public string? CoreCharge { get; set; }
        public string? CorePartNum { get; set; }

       public string Qty {  get; set; }
        public string Percentage { get; set; }


        public string? TotalCost { get; set; }

        public List<LabourDetailsRebuiltPartsViewModel> LabourDetailsRebuiltParts { get; set; } = [];

        // Full list of bus objects (for display)
        public List<BusesModel> ListOfBus { get; set; } = new List<BusesModel>();

        // List of IDs for editor binding
        public List<int?> ListOfBusIds { get; set; } = new List<int?>();

        public string Description { get; set; }
               

        public string LastModifiedBy { get; set; }
        public string LastModifiedDate { get; set; }
        public string SopNumber { get; set; }
        public string? BuyNewCost { get; set; }
        public string? RemanCost { get; set; }
        public bool IsActive { get; set; }

        public string? MaterialsTotal { get; set; }
        public string? LabourTotal { get; set; }
        public string? TotalRebuiltPartCost { get; set; }
        public string? TotalCostTax { get; set; }
        public string? EnteredBy { get; set; }
        public string? DateEntered { get; set; } 


    }
}
Based on above rewrite controller functions. Each RebuildStock may have one or many listofbuses.
                                     [HttpPost]
[AllowAnonymous]
//[Consumes("application/x-www-form-urlencoded")]
public async Task<IActionResult> UpdateRebuiltPartsView([DataSourceRequest] DataSourceRequest request,  [FromForm] RebuiltPartsViewModel model)
{
    try
    {
        //if (string.IsNullOrEmpty(RebuiltPartsViewModel.RebuiltStockNum) || model == null)
        //{
        //    return BadRequest("Invalid data.");
        //}

        // Update the RebuiltPart in the database
        var updatePartSql = @"
    //UPDATE SBCES.RbMasterlist
    //SET ... -- Add fields to update here
    //WHERE RebuiltStockNum = @RebuiltStockNum";

    //    await _dbConnection.ExecuteAsync(updatePartSql, new { RebuiltStockNum });

    //    // Update associated buses
    //    var deleteOldBusesSql = "DELETE FROM SBCES.RBLISTOFBUSES WHERE RebuiltStockNum = @RebuiltStockNum";
    //    await _dbConnection.ExecuteAsync(deleteOldBusesSql, new { RebuiltStockNum });

        if (model.ListOfBusIds?.Any() == true)
        {
            var insertNewBusesSql = @"
        INSERT INTO SBCES.RBLISTOFBUSES (RebuiltStockNum, ListId)
        VALUES (@RebuiltStockNum, @ListId)";

            //foreach (var listId in model.ListOfBusIds.Where(id => id.HasValue))
            //{
            //    await _dbConnection.ExecuteAsync(insertNewBusesSql, new { RebuiltStockNum, ListId = listId.Value });
            //}
        }

        return Json(new { success = true });
    }
    catch (Exception ex)
    {
        return StatusCode(500, $"Internal server error: {ex.Message}");
    }
}
[HttpPost]
[AllowAnonymous]
public async Task<IActionResult> AddRebuiltPartsView([DataSourceRequest] DataSourceRequest request, RebuiltPartsViewModel rebuiltPartsViewModel)
{
    try
    {
        return Ok();
       // var userId = await AddRebuiltPartAsync(rebuiltPartsViewModel);
        return RedirectToAction("Index");
    }
    catch (Exception ex)
    {
        return StatusCode(500, "An error occurred while adding Rebuilt Part.");
    }
}

                                     
                                     I

