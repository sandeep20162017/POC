I have Telerik grid, using pages, 
1. I want to set default page size to 0. 
2.  Also I am using column menu (.ColumnMenu(menu => menu.Enabled(true))).
Would like to always show  columns RebuiltStockNum, KeyWord, CoreCharge, BuyNewCost, RemanCost, BusId. 
Other columns in the menu can be viewable false, user can select other columns from menu.
RebuiltPart must be fixed an must always show
3. Allow users to reorder columns

grid setup :
.Pageable(p => p
.PageSizes(new int[] {1,2, 5, 10, 20, 50 }) // Dropdown options, default should be 0

)

grid :
 @(Html.Kendo().Grid<RebuiltPartsViewModel>()
     .Name("RebuiltPartsGrid")
     .Columns(columns =>
     {
         columns.Bound(c => c.RebuiltStockNum).Title("Rebuilt Stock Code")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .EditorTemplateName("ComboBoxEditor")
             .Width(130).Hidden(false).Lockable(false);

         columns.Bound(c => c.MmsStockCode).Title("MMS Stock Code")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .EditorTemplateName("ComboBoxEditor")
             .Width(130);

         columns.Bound(c => c.KeyWord).Title("Keyword")
             .ClientTemplate("#: truncateText(data.KeyWord) #")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .EditorTemplateName("ComboBoxEditor")
             .Width(120).Hidden(false).MinScreenWidth(768);

         columns.Bound(c => c.Description).Title("Description")
             .ClientTemplate("#: truncateText(data.Description) #")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .EditorTemplateName("ComboBoxEditor")
             .Width(250).Hidden(false).MinScreenWidth(768);

         

         columns.Bound(c => c.JobNumber).Title("Job Number")
             .ClientTemplate("#: truncateText(data.JobNumber) #")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .Width(100).Hidden(false).MinScreenWidth(768);

         columns.Bound(c => c.CorePartNum).Title("Core Code")
             .ClientTemplate("#: truncateText(data.CorePartNum) #")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .Width(100).Hidden(false).MinScreenWidth(768);

         columns.Bound(c => c.CoreCharge).Title("Core Cost")
             .ClientTemplate("#: truncateText(data.CoreCharge) #")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("gte")))
             .Format("{0:C}").EditorTemplateName("Currency")
             .Width(80).Hidden(false).MinScreenWidth(768);

         columns.Bound(c => c.BuyNewCost).Title("Buy New Cost")                                
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("gte")))
             .Format("{0:C}").EditorTemplateName("Currency")
             .Width(80).Hidden(false).MinScreenWidth(768);

         columns.Bound(c => c.RemanCost).Title("Remanufactured Cost")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("gte")))
             .EditorTemplateName("Currency")
             .ClientTemplate("#:kendo.toString(RemanCost, 'c2')#")
             .Width(80);

         columns.Bound(p => p.CostSavingPerUnitDummy)
             .Title("Cost Saving Per Unit")
             .ClientTemplate("#= calculateCostSaving(BuyNewCost, RemanCost) #")
             .Width(70);

         columns.Bound(p => p.PercentageSavingPerUnitDummy)
             .Title("Percentage Saving Per Unit")
             .ClientTemplate("#= calculatePercentageSaving(BuyNewCost, RemanCost)  #")
             .Width(50);

         columns.Bound(u => u.BusId).Title("Vehicle Series") 
             // .ClientTemplate("# if (typeof Buses != 'undefined'  && Buses && Buses.length > 0) { # #= Buses.map(bus => bus.BusName).join(', ') # # } else { # Select Vehicle # } #")
             .ClientTemplate("# if (typeof Buses != 'undefined' && Buses && Buses.length) { # #= Buses.map(bus => truncateWords(bus.BusName, 10)).join(', ') # # } else { # Select Vehicle # } #")
             .EditorTemplateName("VehicleSeriesEditor")
             .Width(130);
....
.Editable(editable => editable.Mode(GridEditMode.InCell))
.Events(events => events.ExcelExport("onExcelExport"))
//.Pageable()
.Pageable(p => p
.PageSizes(new int[] {1,2, 5, 10, 20, 50 }) // Dropdown options

)
.Sortable()
.ClientDetailTemplateId("template")
.Resizable(r => r.Columns(true))
.Filterable(ftb => ftb.Mode(GridFilterMode.Row))
.ColumnMenu(menu => menu.Enabled(true))
.Scrollable(s => s.Height("auto"))
