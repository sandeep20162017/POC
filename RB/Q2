Keep all the javascript functions. Looks like i messed up with closing } or )}
Pls fix and give me the full script. Again, no snippet plsfull script pls.
code :
@section Scripts {
     
    <script>
           $(document).ready(function () {
            // Notification Configuration
            var notification = $("#notification").kendoNotification({
                position: { 
                    pinned: true, 
                    top: 50, 
                    right: 50 
                },
                autoHideAfter: 5000,
                stacking: "down",
                templates: [
                    {
                        type: "success",
                        template: "<div class='k-notification-success'><h3>Success</h3><p>#= message #</p></div>"
                    },
                    {
                        type: "error",
                        template: "<div class='k-notification-error'><h3>Error (#= type #)</h3><p>#= message #</p></div>"
                    },
                    {
                        type: "info",
                        template: "<div class='k-notification-info'><h3>Information</h3><p>#= message #</p></div>"
                    }
                ]
            }).data("kendoNotification");
        

        function onRequestEnd(e) {
            var grid = $("#RebuiltPartsGrid").data("kendoGrid");
            var notification = $("#notification").data("kendoNotification");

            if (e.type === "create" && !e.response.Errors) {
                notification.show({
                    message: "Record added successfully",
                    type: "success"
                });
                grid.dataSource.read();
            }
            else if (e.type === "update" && !e.response.Errors) {
                notification.show({
                    message: "Record updated successfully",
                    type: "success"
                });
                grid.dataSource.read();
            }
        }

        function onGridError(e) {
            var notification = $("#notification").data("kendoNotification");
            var message = "An error occurred";

            if (e.errors) {
                var errorList = [];
                $.each(e.errors, function (key, value) {
                    if (value.errors) {
                        errorList.push(value.errors.join(", "));
                    }
                });
                message = errorList.join("\n");
            }
            else if (e.xhr) {
                message = e.xhr.responseJSON?.message || "Server error occurred";
            }

            notification.show({
                message: message,
                type: "error"
            });
        }

        function onArchiveClick(e) {
            e.preventDefault();
            var grid = $("#RebuiltPartsGrid").data("kendoGrid");
            var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));
            var notification = $("#notification").data("kendoNotification");

            $.ajax({
                url: '@Url.Action("ArchiveRBDetails", "RebuiltParts")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(dataItem),
                success: function (response) {
                    if (response.success) {
                        notification.show({
                            message: response.message,
                            type: "info"
                        });
                        grid.dataSource.read();
                    } else {
                        notification.show({
                            message: response.message,
                            type: "error"
                        });
                    }
                },
                error: function (xhr) {
                    notification.show({
                        message: xhr.responseJSON?.message || "Archive operation failed",
                        type: "error"
                    });
                }
            });
        }
      
               
               

                grid.bind("detailInit", function (e) {
                    const rebuiltStockNum = e.data.RebuiltStockNum;
                    
                    console.log("Detail initialization started for RebuiltStockNum: " + e.data.RebuiltStockNum);
                    var tabUrlLabourDetail = '@Url.Action("LabourDetailsPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabUrlLabourHourSummary = '@Url.Action("LabourHourSummaryPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabUrlMaterialCostSummary = '@Url.Action("MaterialCostSummaryPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabScPartDetail = '@Url.Action("ScPartsUsedInRbParts", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabUrlNscDetail = '@Url.Action("NscDetailsPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabUrlRbPartDetail = '@Url.Action("RbDetailsPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabUrlTotalCost = '@Url.Action("TotalCostPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;

                    // Get the container for the detail template
                    var container = e.detailCell.find("#detail-template-" + e.data.RebuiltStockNum);

                    // Load the TabStrip structure
                    container.html(`
                                <div id="tabstrip-container-${e.data.RebuiltStockNum}">
                                    <ul>
                                         <li>Labour Details</li>
                                        <li>Labour Hour</li>
                                        <li>Material Cost</li>
                                        <li>Stock Coded Parts</li>
                                        <li>Non Stock Coded Parts</li>
                                        <li>Rebuilt Parts</li>
                                       
                                        <li>Total Cost</li>
                                    </ul>
                                    
                                    <div id="labour-details-content-${rebuiltStockNum}"></div>
                                    <div id="labour-hour-summary-content-${rebuiltStockNum}"></div>
                                    <div id="material-cost-summary-content-${rebuiltStockNum}"></div>
                                    <div id="material-details-content-${rebuiltStockNum}"></div>
                                    <div id="nsc-details-content-${rebuiltStockNum}"></div>
                                    <div id="rb-part-details-content-${rebuiltStockNum}"></div>
                                    
                                    <div id="total-cost-content-${rebuiltStockNum}">"></div>
                                </div>
                            `);

                    // Initialize the Kendo TabStrip
                    var tabStrip = $("#tabstrip-container-" + e.data.RebuiltStockNum).kendoTabStrip({
                        animation: { open: { effects: "fadeIn" } },
                        select: function (e) {
                            var tabIndex = $(e.item).index(); // Get the index of the selected tab

                            // Check for unsaved changes in the current tab
                            var currentTabContent = tabStrip.contentElement(tabStrip.select().index());
                            var currentGrid = $(currentTabContent).find(".k-grid").data("kendoGrid");

                            if (currentGrid && (currentGrid.dataSource.hasChanges())) {
                                // Show a warning notification
                                if (notification) {
                                    notification.show("You have unsaved changes. Click on Update or Cancel changes before clicking next tab.", "warning");
                                } else {
                                    console.error("Notification is not initialized.");
                                }
                                e.preventDefault(); // Prevent the tab switch
                                return;
                            }

                            // Load the partial view content for the selected tab
                            var tabUrl = tabIndex == 0 ? tabUrlLabourDetail :
                                tabIndex == 1 ? tabUrlLabourHourSummary :
                                    tabIndex == 2 ? tabUrlMaterialCostSummary :
                                        tabIndex == 3 ? tabScPartDetail :
                                            tabIndex == 4 ? tabUrlNscDetail :
                                                tabIndex == 5 ? tabUrlRbPartDetail :
                                                    tabUrlTotalCost;

                            $.get(tabUrl)
                                .done(function (data) {
                                    $(e.contentElement).html(data);
                                    kendo.init($(e.contentElement)); // Reinitialize Kendo widgets

                                    // Reset the hasChanges() state for read-only tabs
                                    if (tabIndex === 6) { // Assuming the last tab is the read-only tab
                                        var totalCostGrid = $(e.contentElement).find(".k-grid").data("kendoGrid");
                                        notification.show("tabIndex === 6");
                                        if (totalCostGrid) {
                                            notification.show("inside totalCostGrid");
                                            totalCostGrid.dataSource.read(); // Refresh the data source
                                        }
                                    }
                                })
                                .fail(function (xhr, status, error) {
                                    console.error("Error loading tab content: ", error);
                                    if (notification) {
                                        notification.show("An error occurred while loading the tab content. Please try again.", "error");
                                    } else {
                                        console.error("Notification is not initialized.");
                                    }
                                });
                        }
                    }).data("kendoTabStrip");

                    // Load the first tab's content
                    $.get(tabUrlLabourDetail)
                        .done(function (data) {
                            $("#labour-details-content").html(data);
                            kendo.init($("#labour-details-content")); // Reinitialize Kendo widgets
                        })
                        .fail(function (xhr, status, error) {
                            console.error("Error loading initial tab content: ", error);
                            if (notification) {
                                notification.show("An error occurred while loading the initial tab content. Please try again.", "error");
                            } else {
                                console.error("Notification is not initialized.");
                            }
                        });
                });
            }
            //archived --------------------------------------------
            var grid = $("#ArchivedRebuiltPartsGrid").data("kendoGrid");

            // Initialize Kendo Notification for displaying messages
            var notificationElement = $("#archived-notification");
            if (notificationElement.length === 0) {
                console.error("Notification element not found in the DOM.");
            } else {
                var notification = notificationElement.kendoNotification({
                    position: {
                        pinned: true,
                        top: 50,
                        right: 50
                    },
                    autoHideAfter: 5000, // Hide after 5 seconds
                    stacking: "down"
                }).data("kendoNotification");

                // Bind the detailInit event for the grid
                grid.bind("detailInit", function (e) {
                    console.log("Detail initialization started for RebuiltStockNum: " + e.data.RebuiltStockNum);
                    var tabUrlLabourDetail = '@Url.Action("LabourDetailsPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabUrlLabourHourSummary = '@Url.Action("LabourHourSummaryPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabUrlMaterialCostSummary = '@Url.Action("MaterialCostSummaryPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabScPartDetail = '@Url.Action("ScPartsUsedInRbParts", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabUrlNscDetail = '@Url.Action("NscDetailsPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabUrlRbPartDetail = '@Url.Action("RbDetailsPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;
                    var tabUrlTotalCost = '@Url.Action("TotalCostPartial", "RebuiltParts")' + '?rebuiltPartNum=' + e.data.RebuiltStockNum;

                    // Get the container for the detail template
                    var container = e.detailCell.find("#archived-detail-template-" + e.data.RebuiltStockNum);

                    // Load the TabStrip structure
                    container.html(`
                                <div id="archived-tabstrip-container-${e.data.RebuiltStockNum}">
                                    <ul>
                                        <li class="k-state-active">Labour Details</li>
                                        <li>Labour Hour</li>
                                        <li>Material: Cost</li>
                                        <li>Stock Coded Parts</li>
                                        <li>Non Stock Coded Parts</li>
                                        <li>Rebuilt Built Parts</li>
                                        <li>Total Cost</li>
                                    </ul>
                                    <div id="archived-labour-details-content"></div>
                                    <div id="archived-labour-hour-summary-content"></div>
                                    <div id="archived-material-cost-summary-content"></div>
                                    <div id="archived-material-details-content"></div>
                                    <div id="archived-nsc-details-content"></div>
                                    <div id="archived-rb-part-details-content"></div>
                                    <div id="archived-total-cost-content"></div>
                                </div>
                            `);

                    // Initialize the Kendo TabStrip
                    var tabStrip = $("#archived-tabstrip-container-" + e.data.RebuiltStockNum).kendoTabStrip({
                        animation: { open: { effects: "fadeIn" } },
                        select: function (e) {
                            var tabIndex = $(e.item).index(); // Get the index of the selected tab

                            // Load the partial view content for the selected tab
                            var tabUrl = tabIndex == 0 ? tabUrlLabourDetail :
                                tabIndex == 1 ? tabUrlLabourHourSummary :
                                    tabIndex == 2 ? tabUrlMaterialCostSummary :
                                        tabIndex == 3 ? tabScPartDetail :
                                            tabIndex == 4 ? tabUrlNscDetail :
                                                tabIndex == 5 ? tabUrlRbPartDetail :
                                                    tabUrlTotalCost;

                            $.get(tabUrl)
                                .done(function (data) {
                                    $(e.contentElement).html(data);
                                    kendo.init($(e.contentElement)); // Reinitialize Kendo widgets
                                })
                                .fail(function (xhr, status, error) {
                                    console.error("Error loading tab content: ", error);
                                    if (notification) {
                                        notification.show("An error occurred while loading the tab content. Please try again.", "error");
                                    } else {
                                        console.error("Notification is not initialized.");
                                    }
                                });
                        }
                    }).data("kendoTabStrip");

                    // Load the first tab's content
                    $.get(tabUrlLabourDetail)
                        .done(function (data) {
                            $("#archived-labour-details-content").html(data);
                            kendo.init($("#archived-labour-details-content")); // Reinitialize Kendo widgets
                        })
                        .fail(function (xhr, status, error) {
                            console.error("Error loading initial tab content: ", error);
                            if (notification) {
                                notification.show("An error occurred while loading the initial tab content. Please try again.", "error");
                            } else {
                                console.error("Notification is not initialized.");
                            }
                        });
                });
            }
            //archived end  ----------------------------------------
        

        function onArchiveClick(e) {
            e.preventDefault();
            var grid = $("#RebuiltPartsGrid").data("kendoGrid");
            var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));

            // Call the controller action with the entire dataItem as JSON
            $.ajax({
                url: '@Url.Action("ArchiveRBDetails", "RebuiltParts")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(dataItem),
                success: function (data) {
                    // Display a Kendo Notification
                    var notification = $("#notification").kendoNotification({
                        position: {
                            pinned: true,
                            top: 50,
                            right: 50
                        },
                        autoHideAfter: 5000, // Hide after 5 seconds
                        stacking: "down"
                    }).data("kendoNotification");

                    notification.show("Archive is clicked.", "info");
                },
                error: function (xhr, status, error) {
                    console.error("Error archiving: ", error);
                }
            });
        }

        function onEmailEstimateClick(e) {
            e.preventDefault();
            var grid = $("#RebuiltPartsGrid").data("kendoGrid");
            var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));
            var rebuiltPartNum = dataItem.RebuiltStockNum;

            // Show the email estimate container
            $("#email-estimate-container").show();

            // Generate the Excel file by calling SaveToExcel via AJAX
            $.ajax({
                url: '@Url.Action("SaveToExcel", "Export")',
                type: 'GET',
                data: { rebuiltPartNum: rebuiltPartNum },
                xhrFields: {
                    responseType: 'blob' // Ensure the response is treated as a binary file
                },
                success: function (data) {
                    // Create a link element to trigger the file download
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(data);
                    link.download = `${rebuiltPartNum}_RebuiltParts_Estimate.xlsx`;
                    link.click();

                    // Set the subject with the rebuilt number and today's date
                    var today = new Date();
                    var subject = `Rebuilt Part Estimates for ${rebuiltPartNum} - Date ${today.toLocaleDateString()} ${today.toLocaleTimeString()}`;

                    // Set the form values
                    $("#to").val("");
                    $("#subject").val(subject);
                    $("#body").val(`Dear Sir/Madam,\nPlease find attached here with Rebuilt Part Estimate for ${rebuiltPartNum}.\n\nThank you`);

                    // Open the Kendo Window
                    var kendoWindow = $("#emailEstimateWindow").data("kendoWindow");
                    if (kendoWindow) {
                        kendoWindow.center().open();
                    } else {
                        console.error("Kendo Window not found.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error downloading Excel file:", error);
                }
            });
        }

        function onSaveToExcelClick(e) {
            e.preventDefault();
            var grid = $("#RebuiltPartsGrid").data("kendoGrid");
            var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));
            var rebuiltPartNum = dataItem.RebuiltStockNum;

            // Directly trigger the file download
            window.location.href = '@Url.Action("SaveToExcel", "Export")' + '?rebuiltPartNum=' + rebuiltPartNum;
        }

        function onCancelEmailClick() {
            // Close the Kendo Window
            var window = $("#emailEstimateWindow").data("kendoWindow");
            window.close();

            // Show a notification
            var notification = $("#notification").data("kendoNotification");
            notification.show("Email Request Cancelled", "info");
        }
    </script>

    <script id="template" type="text/x-kendo-template">
        <div id="detail-template-#=RebuiltStockNum#"></div>
    </script>

    <script>
                  

        /////////////////
         function onArchivedEmailEstimateClick(e) {
            e.preventDefault();
            var grid = $("#ArchivedRebuiltPartsGrid").data("kendoGrid");
            var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));
            var rebuiltPartNum = dataItem.RebuiltStockNum;

            // Show the email estimate container
            $("#archived-email-estimate-container").show();

            // Generate the Excel file by calling SaveToExcel via AJAX
            $.ajax({
                url: '@Url.Action("SaveToExcel", "Export")',
                type: 'GET',
                data: { rebuiltPartNum: rebuiltPartNum },
                xhrFields: {
                    responseType: 'blob' // Ensure the response is treated as a binary file
                },
                success: function (data) {
                    // Create a link element to trigger the file download
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(data);
                    link.download = `${rebuiltPartNum}_RebuiltParts_Estimate.xlsx`;
                    link.click();

                    // Set the subject with the rebuilt number and today's date
                    var today = new Date();
                    var subject = `Rebuilt Part Estimates for ${rebuiltPartNum} - Date ${today.toLocaleDateString()} ${today.toLocaleTimeString()}`;

                    // Set the form values
                    $("#to").val("");
                    $("#subject").val(subject);
                    $("#body").val(`Dear Sir/Madam,\nPlease find attached here with Rebuilt Part Estimate for ${rebuiltPartNum}.\n\nThank you`);

                    // Open the Kendo Window
                    var kendoWindow = $("#emailEstimateWindow").data("kendoWindow");
                    if (kendoWindow) {
                        kendoWindow.center().open();
                    } else {
                        console.error("Kendo Window not found.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error downloading Excel file:", error);
                }
            });
        }

        function onArchivedSaveToExcelClick(e) {
            e.preventDefault();
            var grid = $("#ArchivedRebuiltPartsGrid").data("kendoGrid");
            var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));
            var rebuiltPartNum = dataItem.RebuiltStockNum;

            // Directly trigger the file download
            window.location.href = '@Url.Action("SaveToExcel", "Export")' + '?rebuiltPartNum=' + rebuiltPartNum;
        }
    </script>
    <script id="archived-template" type="text/x-kendo-template">
        <div id="archived-detail-template-#=RebuiltStockNum#"></div>
    </script>
   @* <script>
        // Event triggered before any CRUD operation (Read, Update, Destroy)
        function onRequestStart(e) {
            // Check if the request type is Update or Destroy
            if (e.type === "update" || e.type === "destroy") {
                var grid = $("#RebuiltPartsGrid").data("kendoGrid");
                var selectedRow = grid.select(); // Get the selected row
                var dataItem = grid.dataItem(selectedRow); // Get the data for the selected row

                if (dataItem && dataItem.RebuiltStockNum) {
                    // Append RebuiltStockNum to the request
                    e.sender.transport.options.update.data = { RebuiltStockNum: dataItem.RebuiltStockNum };
                    e.sender.transport.options.destroy.data = { RebuiltStockNum: dataItem.RebuiltStockNum };
                }
            }
        }
    </script> *@
    <script>
        function onBusChange(e) {
                 console.log("event: buschange");
                var selectedBuses = this.value();
                console.log("selected buses :");
                console.log(selectedBuses);
                               
                $.ajax({
                url: '@Url.Action("GetSelectedBuses", "RebuiltParts")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ buses: selectedBuses }),
                beforeSend: function (xhr) {
                   
                    console.log("Sending data :", JSON.stringify({ buses: selectedBuses }));
                },
                success: function (data) {
                  
                    console.log('Success:', data);
                    
                },

                error: function (error, data) {
                    console.log('datasent : ', data);
                    console.error('Error:', error);
                }
            });
            }

            function onBusDataBound() {
                console.log("event: busdataBound");

            }
       
    </script>
    <script>
        function onRequestEnd(e) {
           if (e.type == "create") {
                var notification = $("#notification").data("kendoNotification");
                //notification.show("Inside onRequestEnd.....................", "info");               
                $("#RebuiltPartsGrid").data("kendoGrid").dataSource.read(); //force refresh grid
            }
            if (e.type == "update") {
                var notification = $("#notification").data("kendoNotification");
                //notification.show("Inside onRequestEnd.....................", "info");
                $("#RebuiltPartsGrid").data("kendoGrid").dataSource.read(); //force refresh grid
            }
        }
    </script>

    <script>
    function getAutoCompleteParams() {
        var input = $("input[data-role='autocomplete']:focus");
        return {
            columnName: input.attr("name"),
            searchText: input.val() || "" // Handle empty search text
        };
    }
    </script>

    }
