How to find the ‚Äúbad‚Äù data
You can check which rows have non‚Äënumeric values in MmsStockCode (or LinkCode) using TRY_CAST or ISNUMERIC (though ISNUMERIC has quirks):

sql
SELECT *
FROM SBCES.ScPartsUsed
WHERE TRY_CAST(MmsStockCode AS INT) IS NULL
      AND MmsStockCode IS NOT NULL;
This will return all rows where MmsStockCode cannot be converted to an integer.

If you also want to check LinkCode:

sql
SELECT *
FROM SBCES.ScPartsUsed
WHERE TRY_CAST(LinkCode AS INT) IS NULL
      AND LinkCode IS NOT NULL;
‚úÖ How to safely run your original filter
Instead of letting SQL auto‚Äëconvert, explicitly cast only numeric values:

sql
SELECT *
FROM SBCES.ScPartsUsed
WHERE TRY_CAST(MmsStockCode AS INT) = 4321
  AND TRY_CAST(LinkCode AS INT) = 70010
  AND LinkType = 'BUS';
This way, rows with non‚Äënumeric values are ignored instead of throwing an error.

üóë How to delete the bad data
If you‚Äôve confirmed which rows are ‚Äúbad‚Äù and want to delete them:

sql
DELETE FROM SBCES.ScPartsUsed
WHERE TRY_CAST(MmsStockCode AS INT) IS NULL
      AND MmsStockCode IS NOT NULL;
‚ö† Be careful ‚Äî run the SELECT version first to verify exactly what will be deleted.

üí° Best practice going forward: If MmsStockCode and LinkCode are always supposed to be numbers, change their data type to INT (or another numeric type). That will prevent bad data from being inserted in the first place.
