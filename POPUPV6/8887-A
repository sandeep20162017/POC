@model BCES.Models.Parts.NonStockCodedPartsViewModel

<div class="scparts-popup-style">

    <!-- Top-left action buttons -->
    <div class="popup-actions">
        <button type="button" class="k-button k-primary sc-save-btn">Save</button>
        <button type="button" class="k-button sc-cancel-btn">Cancel</button>
    </div>

    <!-- ===================== Row 1 ===================== -->
    <div class="form-row">
        <!-- Supplier Number -->
        <div class="form-group">
            <label class="form-label required-label">Supplier Number</label>
            @(Html.Kendo().ComboBoxFor(m => m.OrigSuppNum)
                .DataTextField("Text")
                .DataValueField("Value")
                .Filter("contains")
                .Suggest(true)
                .HtmlAttributes(new { @class = "required-cell", required = "required" })
                .BindTo((System.Collections.IEnumerable)ViewData["SupplierNumList"])
            )
        </div>

        <!-- Supplier Name -->
        <div class="form-group">
            <label class="form-label required-label">Supplier Name</label>
            @(Html.Kendo().ComboBoxFor(m => m.OrigSupplierName)
                .DataTextField("Text")
                .DataValueField("Value")
                .Filter("contains")
                .Suggest(true)
                .HtmlAttributes(new { @class = "required-cell", required = "required" })
                .BindTo((System.Collections.IEnumerable)ViewData["SupplierNameList"])
            )
        </div>

        <!-- Keyword -->
        <div class="form-group">
            <label class="form-label">Keyword</label>
            @(Html.Kendo().TextBoxFor(m => m.KeyWord)
                .HtmlAttributes(new { @class = "k-textbox" })
            )
        </div>
    </div>

    <!-- ===================== Row 2 ===================== -->
    <div class="form-row">
        <!-- Description -->
        <div class="form-group double-width">
            <label class="form-label">Description</label>
            @(Html.Kendo().TextBoxFor(m => m.Description)
                .HtmlAttributes(new { @class = "k-textbox" })
            )
        </div>

        <!-- Part Cost -->
        <div class="form-group">
            <label class="form-label">Part Cost</label>
            @(Html.Kendo().NumericTextBoxFor(m => m.UnitCost)
                .Format("{0:C2}")
                .HtmlAttributes(new { data_br = "MustBeNumeric,NoSpecialCharacters,MustBePositive" })
            )
        </div>
    </div>

    <!-- ===================== Row 3 ===================== -->
    <div class="form-row">
        <!-- Cost Centre -->
        <div class="form-group">
            <label class="form-label required-label">Cost Centre</label>
            @(Html.Kendo().ComboBoxFor(m => m.CC)
                .DataTextField("Text")
                .DataValueField("Value")
                .Filter("contains")
                .Suggest(true)
                .HtmlAttributes(new { @class = "required-cell", required = "required" })
                .BindTo((System.Collections.IEnumerable)ViewData["CostCentreList"])
            )
        </div>

        <!-- Qty -->
        <div class="form-group">
            <label class="form-label required-label">Qty</label>
            @(Html.Kendo().NumericTextBoxFor(m => m.Qty)
                .HtmlAttributes(new { @class = "required-cell", required = "required", data_br = "MustBeNumeric,NoSpecialCharacters,MustBePositive" })
            )
        </div>
    </div>

    @* ====== COMMENTED OUT FIELDS FROM _NScPartsUsed.cshtml ====== *@
    @* Core Cost
    <div class="form-row">
        <div class="form-group">
            <label class="form-label">Core Cost</label>
            @(Html.Kendo().NumericTextBoxFor(m => m.CoreCost)
                .Format("{0:C2}")
                .HtmlAttributes(new { data_br = "MustBeNumeric,NoSpecialCharacters,MustBePositive" })
            )
        </div>
    </div>
    *@

    @* Total Cost
    <div class="form-row">
        <div class="form-group">
            <label class="form-label">Total Cost</label>
            @(Html.Kendo().NumericTextBoxFor(m => m.TotalCost)
                .Format("{0:C2}")
                .HtmlAttributes(new { @readonly = "readonly" })
            )
        </div>
    </div>
    *@

    @* Last Modified By
    <div class="form-row">
        <div class="form-group">
            <label class="form-label">Modified By</label>
            @(Html.Kendo().TextBoxFor(m => m.LastModifiedBy)
                .HtmlAttributes(new { @readonly = "readonly", @class = "k-textbox" })
            )
        </div>
    </div>
    *@

    @* Last Modified Date
    <div class="form-row">
        <div class="form-group">
            <label class="form-label">Modified Date</label>
            @(Html.Kendo().DatePickerFor(m => m.LastModifiedDate)
                .HtmlAttributes(new { @readonly = "readonly" })
            )
        </div>
    </div>
    *@

</div>

@section scripts {
<script>
    (function () {
        var $popup = $('.k-window-content:visible');

        // Save button triggers Kendo's update
        $popup.on('click', '.sc-save-btn', function () {
            $popup.find('.k-grid-update').trigger('click');
        });

        // Cancel button triggers Kendo's cancel
        $popup.on('click', '.sc-cancel-btn', function () {
            $popup.find('.k-grid-cancel').trigger('click');
        });
    })();
</script>
}
