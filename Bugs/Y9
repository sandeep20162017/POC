You are ASP.NET coe (v8.0) and Telerik ASp.NET core expert.
Getiing 404 only for Destroy.
https://localhost:44332/RbPartsUsedInEstimates/DeleteRbPartsUsedInRbtParts
Create, update, read are fine. All functions are in the same controller. No JS errors.
Controller :
  [HttpPost]
  [AllowAnonymous]
  public async Task<IActionResult> DeleteRbPartsUsedInEstimates(
                                                   [DataSourceRequest] DataSourceRequest request,
                                                   [Bind(Prefix = "models")] IEnumerable<RebuiltPartsViewModel> models,
                                                   string id,
                                                   string parentPartId,
                                                    string gridType)
...
View :
@(Html.Kendo().Grid<BCES.Models.Parts.RebuiltPartsViewModel>()   
    .Name($"RbPartsMaterialDetailsRebuiltPartsGrid")
..
.Read(read => read.Url(Url.Action("GetRbPartsUsedInEstimates", "RbPartsUsedInEstimates") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Get))
.Create(create => create.Url(Url.Action("CreateRbPartsUsedInEstimates", "RbPartsUsedInEstimates") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
.Update(update => update.Url(Url.Action("UpdateRbPartsUsedInEstimates", "RbPartsUsedInEstimates") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
.Destroy(delete => delete.Url(Url.Action("DeleteRbPartsUsedInEstimates", "RbPartsUsedInEstimates") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
 .Model(model =>
 {
     model.Id(c => c.Id);
     model.Field(c => c.Id);
     model.Field(c => c.RebuiltStockNum);
     model.Field(c => c.KeyWord);
     model.Field(c => c.Description);
...
Model :
public class RebuiltPartsViewModel
{
   
  public int Id {  get; set; }
    public string MmsStockCode { get; set; }
...
