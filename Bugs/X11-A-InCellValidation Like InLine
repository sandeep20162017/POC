Full working Telerik ASP.NET Core InCell Grid solution for you:
1️⃣ Add Required Scripts in Layout.cshtml
In your _Layout.cshtml:

html
Copy
Edit
<head>
    <!-- Kendo default styles -->
    <link rel="stylesheet" href="~/lib/kendo/css/kendo.default-v2.min.css" />

    <!-- jQuery -->
    <script src="~/lib/jquery/jquery.min.js"></script>

    <!-- Kendo UI scripts -->
    <script src="~/lib/kendo/js/kendo.all.min.js"></script>

    <!-- jQuery Validation -->
    <script src="~/lib/jquery-validation/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

</head>
✅ Make sure you're loading jQuery, Kendo, and both jQuery Validation and Unobtrusive Validation.

2️⃣ Setup _ViewImports.cshtml (VERY important for ASP.NET Core)
Create or verify _ViewImports.cshtml like this:

csharp
Copy
Edit
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Kendo.Mvc

@using Kendo.Mvc.UI

@inject Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}
✅ This activates Razor Tag Helpers and client-side validation for Razor Pages & MVC Views.

3️⃣ Your ViewModel
csharp
Copy
Edit
public class NscPartsUsedViewModel
{
    public int Oid { get; set; }

    [Required(ErrorMessage = "Supplier Number is required")]
    public string OrigSuppNum { get; set; }

    [Required(ErrorMessage = "Supplier Name is required")]
    public string OrigSupplierName { get; set; }
}
✅ DataAnnotations drive the validation.

4️⃣ The Telerik ASP.NET Core Grid
Here’s your full Grid definition using InCell editing:

csharp
Copy
Edit
@(Html.Kendo().Grid<NscPartsUsedViewModel>()
    .Name("NscPartsMaterialDetailsRebuiltPartsGrid")
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Sortable()
    .Resizable(r => r.Columns(true))
    .Events(events => 
    {
        events.Save("onGridCellSave");
        events.SaveChanges("onSaveChanges");
    })
    .Columns(columns =>
    {
        columns.Bound(c => c.Oid).Hidden();

        columns.Bound(c => c.OrigSuppNum)
            .Title("Supplier Number")
            .EditorTemplateName("NscComboBox")
            .HtmlAttributes(new { required = "required", @class = "required-cell" })
            .HeaderHtmlAttributes(new { @class = "required-header" });

        columns.Bound(c => c.OrigSupplierName)
            .Title("Supplier Name")
            .EditorTemplateName("NscSupplierComboBox")
            .HtmlAttributes(new { required = "required", @class = "required-cell" })
            .HeaderHtmlAttributes(new { @class = "required-header" });
    })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(false)
        .Model(model =>
        {
            model.Id(c => c.Oid);
            // NO .Validation() needed here in ASP.NET Core
        })
        .Read(read => read.Url(Url.Action("GetNscPartsUsedInEstimates", "NscPartsUsedInEstimates")))
        .Create(create => create.Url(Url.Action("CreateNscPartsUsedInEstimates", "NscPartsUsedInEstimates")))
        .Update(update => update.Url(Url.Action("UpdateNscPartsUsedInEstimates", "NscPartsUsedInEstimates")))
        .Destroy(delete => delete.Url(Url.Action("DeleteNscPartsUsedInEstimates", "NscPartsUsedInEstimates")))
    )
)
5️⃣ Add Client-side InCell Inline Validation
We hook into the Save event and inject inline error messages into the cell like this:

javascript
Copy
Edit
function onGridCellSave(e) {
    var cell = e.container;
    var validator = cell.kendoValidator().data("kendoValidator");

    // Remove previous validation messages
    cell.find(".cell-validation-error").remove();

    if (!validator.validate()) {
        e.preventDefault(); // prevent saving

        var errors = validator.errors();
        for (var field in errors) {
            var message = errors[field];
            cell.append('<div class="cell-validation-error" style="color:red;font-size:12px;">' + message + '</div>');
            break; // show only first error per field
        }
    }
}
6️⃣ Style for invalid fields (optional)
Add a bit of CSS:

css
Copy
Edit
.cell-validation-error {
    margin-top: 5px;
    color: #b94a48;
    font-size: 12px;
}
✅ ✅ ✅ Done!
