You are Oracle 


SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0)) AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B2 ) AND REBUILT_PART = 'N' AND LINK_TYPE =UPPER(:B1 ) UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED, NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(:B2 ) AND NSC_PARTS_USED.LINK_TYPE = UPPER(:B1 ) AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME

INSERT INTO TEMP_LABOUR_LIST VALUES (:B9 ,:B8 ,:B7 ,:B3 ,ROUND((HHMM_TO_MINUTES(:B5 ) * :B1 ),0),:B6 , (:B6 / 60) * ROUND(HHMM_TO_MINUTES(:B5 ) * :B1 ) * (:B3 /100) , ROUND((:B3 / 100) * HHMM_TO_MINUTES(:B5 ) * :B1 ) ,'RB',UPPER(:B4 ), ROUND((:B3 / 100) * ROUND(HHMM_TO_MINUTES(:B2 ) * :B1 )))

INSERT INTO ARCH_RB_MATERIALS_CC_TOTAL (COST_CENTRE, TOTAL_COST, ARCH_RB_MASTERLIST_ID ) SELECT COST_CENTRE AS "CC", SUM(TOTAL_COST) AS "TOTAL COST", :B1 FROM TEMP_MATERIALS_LIST GROUP BY COST_CENTRE

INSERT INTO ARCH_RB_LABOUR_CC_TOTAL ( COST_CENTRE, TOTAL_HOURS, ARCH_RB_MASTERLIST_ID ) SELECT CC AS "COST CENTRE", SUM(EXTENDED_TIME) AS "LABOUR HRS", :B1 FROM TEMP_LABOUR_LIST GROUP BY CC
INSERT INTO TEMP_LABOUR_LIST VALUES (:B8 ,:B7 ,:B6 ,:B2 ,HHMM_TO_MINUTES(:B4 ),:B5 , :B5 * HHMM_TO_MINUTES(:B4 ) * :B2 / 6000, ROUND((:B2 / 100) * HHMM_TO_MINUTES(:B4 )) ,'RB',UPPER(:B3 ), ROUND((:B2 / 100) * HHMM_TO_MINUTES(:B1 )))

SELECT EMPLOYEE_LABOUR.LABOUR_DEFN AS "LABOUR TYPE", EMPLOYEE_LABOUR.COSTCENTRE AS "CC", EMPLOYEE_LABOUR.TASK AS "TASK", REPLACE(EMPLOYEE_LABOUR.USAGE,',','.') AS "USAGE", EMPLOYEE_LABOUR.HRS_REQD AS "TIME", EMPLOYEE_SALARIES.RATE_PER_HOUR AS "RATE PER HOUR", EMPLOYEE_LABOUR.TIME_ADDITION AS "TIME ADDITION", HHMM_TO_DECIMAL(EMPLOYEE_LABOUR.ADJ_HRS) AS "WRENCH TIME" FROM EMPLOYEE_LABOUR, EMPLOYEE_SALARIES, EMPL_CLASS WHERE EMPLOYEE_LABOUR.LABOUR_DEFN = UPPER(EMPL_CLASS.LABOUR_DEFN) AND EMPLOYEE_SALARIES.WAGE_GROUP = EMPL_CLASS.WAGE_GROUP AND EMPLOYEE_LABOUR.LINK_NUMBER = :B1 AND EMPLOYEE_LABOUR.TYPEID = 'RB'

SELECT EMPLOYEE_LABOUR.LABOUR_DEFN AS "LABOUR TYPE", EMPLOYEE_LABOUR.COSTCENTRE AS "CC", EMPLOYEE_LABOUR.TASK AS "TASK", REPLACE(EMPLOYEE_LABOUR.USAGE,',','.') AS "USAGE", EMPLOYEE_LABOUR.HRS_REQD AS "TIME", EMPLOYEE_SALARIES.RATE_PER_HOUR AS "RATE PER HOUR", EMPLOYEE_LABOUR.TIME_ADDITION AS "TIME ADDITION", HHMM_TO_DECIMAL(EMPLOYEE_LABOUR.ADJ_HRS) AS "WRENCH TIME" FROM EMPLOYEE_LABOUR, EMPLOYEE_SALARIES, EMPL_CLASS WHERE EMPLOYEE_LABOUR.LABOUR_DEFN = UPPER(EMPL_CLASS.LABOUR_DEFN) AND EMPLOYEE_SALARIES.WAGE_GROUP = EMPL_CLASS.WAGE_GROUP AND EMPLOYEE_LABOUR.LINK_NUMBER = :B2 AND EMPLOYEE_LABOUR.TYPEID = :B1 

INSERT INTO ARCH_RB_LIST_BUSES ( BUS_DESCRIPTION, ARCH_RB_MASTERLIST_ID ) SELECT LIST_OF_BUSES.DESCRIPTION, :B2 FROM RB_LIST_OF_BUSES, LIST_OF_BUSES WHERE REBUILT_STOCK_NUM = :B1 AND RB_LIST_OF_BUSES.LIST_ID = LIST_OF_BUSES.LIST_ID

SELECT DISTINCT UPPER(SC_PARTS_USED.LINK_CODE) AS "link_code", SC_PARTS_USED.QTY_REQD AS "QTY", SC_PARTS_USED.PERCENT_USAGE AS "%", SC_PARTS_USED.MMS_REBUILT_CODE AS "Rebuilt Code" FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = :B2 AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER(:B1 )

SELECT ROUND(SUM(TOTAL_COST),2) AS LABOUR_COST FROM TEMP_LABOUR_LIST

SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0))AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B1 ) AND REBUILT_PART = 'N' AND LINK_TYPE = 'RB' UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED,NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(:B1 ) AND NSC_PARTS_USED.LINK_TYPE = 'RB' AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME

INSERT INTO TEMP_MATERIALS_LIST VALUES (:B7 ,:B6 ,ROUND(:B1 * :B4 ,2) ,:B5 * :B4 ,:B3 , :B2 * :B1 )

INSERT INTO ARCH_RB_SC_PARTS_USED ( MMS_STOCK_CODE, DATE_ENTERED, REB_PART_COST, USER_ENTERED, MMS_COST, OEM_COST, MMS_REBUILT_CODE, COST_CENTRE, QTY_REQD, PERCENT_USAGE, LINK_CODE, REBUILT_PART, LINK_TYPE, CORECOST, ARCH_RB_MASTERLIST_ID, TOTAL_COST, SC_KEYWORD, SC_DESCRIPTION) SELECT A.MMS_STOCK_CODE, A.DATE_ENTERED, A.REB_PART_COST, A.USER_ENTERED, A.MMS_COST, A.OEM_COST, A.MMS_REBUILT_CODE, A.COST_CENTRE, A.QTY_REQD, A.PERCENT_USAGE, A.LINK_CODE, A.REBUILT_PART, A.LINK_TYPE, CAST(FINAL_COST(A.PERCENT_USAGE, A.QTY_REQD, A.CORECOST, 0)AS NUMBER) AS CORECOST, ARCH_RB_MASTERLIST_SEQ.CURRVAL, A.MMS_COST * CAST(A.QTY_REQD AS NUMBER) * (TO_NUMBER(REPLACE(NVL(A.PERCENT_USAGE,'0'),',','.'))/ 100), NVL(B.PART_TYPE,'') , NVL(B.DETAILED_DESC,'') FROM SC_PARTS_USED A, STOCK_CODED_PARTS B WHERE B.MMS_STOCK_CODE (+)= A.MMS_STOCK_CODE AND LINK_CODE = :B2 AND LINK_TYPE = :B1 AND REBUILT_PART = 'N'
SELECT COUNT(*) FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = 'RB' AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER(:B1 )

INSERT INTO TEMP_MATERIALS_LIST VALUES (:B5 ,:B4 ,:B1 ,:B3 ,:B2 ,:B1 )

SELECT COUNT(*) FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = UPPER(:B2 ) AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER(:B1 )
SELECT DISTINCT UPPER(SC_PARTS_USED.LINK_CODE) AS "link_code", SC_PARTS_USED.QTY_REQD AS "QTY", SC_PARTS_USED.PERCENT_USAGE AS "%", SC_PARTS_USED.MMS_REBUILT_CODE AS "Rebuilt Code" FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = UPPER(:B2 ) AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER(:B1 )

INSERT INTO ARCH_RB_NSC_PARTS_USED (ORIG_SUPP_NUM, ORIG_SUPPLIER_NAME, COST_CENTRE, QTY_REQD, PERCENT_USAGE, DATE_ENTERED, ENTERED_BY, LINK_CODE, COST, LINK_TYPE, CORECOST, ARCH_RB_MASTERLIST_ID, TOTAL_COST) SELECT ORIG_SUPP_NUM, ORIG_SUPPLIER_NAME, COST_CENTRE, QTY_REQD, PERCENT_USAGE, DATE_ENTERED, ENTERED_BY, LINK_CODE, COST, LINK_TYPE, CAST(FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0) AS NUMBER) AS CORECOST, :B3 , COST * CAST(QTY_REQD AS NUMBER) * (TO_NUMBER(REPLACE(NVL(PERCENT_USAGE,'0'),',','.'))/ 100) FROM NSC_PARTS_USED WHERE LINK_CODE = :B2 AND LINK_TYPE = :B1 
SELECT COUNT(*) FROM OEM_KITS_TOTAL2 WHERE OEM_KITS_TOTAL2.LINK = :B1 

INSERT INTO ARCH_RB_SC_PARTS_USED ( MMS_STOCK_CODE, DATE_ENTERED, REB_PART_COST, USER_ENTERED, MMS_COST, OEM_COST, MMS_REBUILT_CODE, COST_CENTRE, QTY_REQD, PERCENT_USAGE, LINK_CODE, REBUILT_PART, LINK_TYPE, CORECOST, ARCH_RB_MASTERLIST_ID, TOTAL_COST, SC_KEYWORD, SC_DESCRIPTION) SELECT UPPER(SC_PARTS_USED.MMS_STOCK_CODE), SC_PARTS_USED.DATE_ENTERED, NVL(A.RB_UNIT_COST,0) AS "UNIT COST", UPPER(SC_PARTS_USED.USER_ENTERED), NVL(SC_PARTS_USED.MMS_COST,0), NVL(SC_PARTS_USED.OEM_COST,0), UPPER(SC_PARTS_USED.MMS_REBUILT_CODE) AS "REBUILT NUMBER", UPPER(SC_PARTS_USED.COST_CENTRE) AS "CC", UPPER(SC_PARTS_USED.QTY_REQD) AS "QTY", REPLACE(SC_PARTS_USED.PERCENT_USAGE,',','.') AS "%", :B2 , 'Y', 'RB', SC_PARTS_USED.CORECOST AS "CORE COST", :B3 , NVL(A.RB_COST,0) AS "TOTAL COST", UPPER(RB_MASTERLIST.KEYWORD) AS "KEYWORD", UPPER(RB_MASTERLIST.DETAILED_DESC) AS "DESCRIPTION" FROM SC_PARTS_USED, RB_MASTERLIST, (SELECT ROUND(SUM(TOTAL_COST),2) AS RB_COST, ROUND(SUM(TOTAL_UNIT_COST),2) AS RB_UNIT_COST , RB_REFERENCE FROM TEMP_MATERIALS_LIST GROUP BY RB_REFERENCE) A WHERE SC_PARTS_USED.LINK_CODE = :B2 AND SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = :B1 AND RB_MASTERLIST.REBUILT_STOCK_NUM(+)= SC_PARTS_USED.MMS_REBUILT_CODE AND RB_REFERENCE (+)= SC_PARTS_USED.MMS_REBUILT_CODE

SELECT ROUND(SUM(NVL(TOTAL_COST,0)),2) AS RB_COST FROM TEMP_MATERIALS_LIST

SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0)) AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B2 ) AND REBUILT_PART = 'N' AND LINK_TYPE =UPPER(:B1 ) UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED, NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(:B2 ) AND NSC_PARTS_USED.LINK_TYPE = UPPER(:B1 ) AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME

INSERT INTO ARCH_RB_MASTERLIST ( MMS_STOCK_CODE, ITEM_REF_NUMBER, DETAILED_DESC, KEYWORD, CORE_PART_NUM, REBUILT_STOCK_NUM, CORE_CHARGE, JOB_NUMBER, ESTIMATED_COST, SOP_NUMBER, DATE_ARCHIVED, ARCHIVED_BY, ARCH_RB_MASTERLIST_ID, LABOUR_COST, LABOUR_OVERHEAD_AMOUNT, LABOUR_TOTAL, MATERIALS_TOTAL, TOTAL_REBUILT_PART_COST, TAX_TOTAL, TOTAL_COST_TAX ) SELECT MMS_STOCK_CODE, ITEM_REF_NUMBER, DETAILED_DESC, KEYWORD, CORE_PART_NUM, REBUILT_STOCK_NUM, CORE_CHARGE, JOB_NUMBER, ESTIMATED_COST, SOP_NUMBER, SYSDATE, :B9 , ARCH_RB_MASTERLIST_SEQ.NEXTVAL, :B8 , :B7 , :B6 , :B5 , :B4 , :B3 , :B2 FROM RB_MASTERLIST WHERE UPPER(REBUILT_STOCK_NUM) = :B1 

INSERT INTO ARCH_RB_EMPLOYEE_LABOUR ( LABOUR_DEFN, DATE_ENTERED, LINK_NUMBER, TYPEID, COSTCENTRE, ARCH_RB_EMPLOYEE_LABOUR.TASK, LABOUR_TYPE, USAGE, HRS_REQD, ADJ_HRS, TIME_ADDITION, ARCH_RB_MASTERLIST_ID ) SELECT LABOUR_DEFN, DATE_ENTERED, LINK_NUMBER, TYPEID, COSTCENTRE, EMPLOYEE_LABOUR.TASK, LABOUR_TYPE, USAGE, HRS_REQD, ADJ_HRS, TIME_ADDITION, ARCH_RB_MASTERLIST_SEQ.CURRVAL FROM EMPLOYEE_LABOUR WHERE LINK_NUMBER = :B2 AND TYPEID = :B1 

begin :V00001 := CES_ARCHIVE.ARCHIVE_RB(:V00002,:V00003,:V00004,:V00005,:V00006,:V00007,:V00008,:V00009,:V00010,:V00011,:V00012,:V00013); end;

SELECT MAX(ARCH_RB_MASTERLIST_ID) FROM ARCH_RB_MASTERLIST
