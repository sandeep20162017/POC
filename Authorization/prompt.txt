You are asp.net core expert. You have vast knowledge of Razor syntax and Razor pages. 
Remember this Vehicle example and use this for reference only Do not generate code for Vehicle:
I have already implemented GetVehiles() method, which is called in OnGet()method of cshtml.cs file
In other example I calling sql as _db.Vechiles.FromSQLInterploated(Select * from BCES.Vehicles); I have public ILIST<Vehicle>? Vehicles.  Vehicle here is model below
vehicle.cs :  
using System.ComponentModel.DataAnnotations.Schema
namespace BCES.Model
{
[Table=(VEHILE_LIST, SCHEMA=CES)
public class Vehicle
{
     [Key]
public int VehileLitId {get; set}
public string Make {get; et}

}
}


I need to create role based authorization for razor pages (not MVC). Application will get user credetails from machine he is logge on. Map this credetails with the one in the dataset to grant him proper role. Application doesn't have any controllers. Application uses razor models (like  [Table=(VEHILE_LIST, SCHEMA=CES)
public class Vehicle above) 
Users are from a single company (same domain).  Roles are of 4 types. 
Role type 1 : Admin, acces to all features
Role type 2 :  Add/delete/update acces to all features
Role type 3 :  only read access  to all features
Role type 3 :  only read access  to all features with certail form field not visible
Application doesn't use EF. Application uses Telerik ASP Core UI controllers.
Generate database tables. Use schema BCES.
For model use name space BCES.Model
I need to get the user id from the machine user is logged in to. Map this user id to the role in the database and provide acess permission baed on the role.
Use the logic (db.Vechiles.FromSQLInterploated(Select * from BCES.Vehicles) as described), for implementationof Users
Technology ASP.Core 8.0, SQL server 2022.
Save this role as this role will be used in all the views.
Explain and give me the final version of all the files. Add comments in the file. Add exception handling.
