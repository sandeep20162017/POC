The clean and reliable pattern

Weâ€™ll make three small changes to make this rock-solid:

ðŸŸ¢ 1. Run initVehiclePopupForm() inside loadVehicleForm() after the form HTML loads

You want this to happen only after the partial content has been loaded and Kendo widgets exist.

Modify your loadVehicleForm():

window.loadVehicleForm = function (vehicleId, callback) {
    console.warn('window.loadVehicleForm :', vehicleId);

    $.get('@Url.Action("GetVehicleById", "Vehicles")', { id: vehicleId }, function (html) {
        $("#vehicleTabContent").html(html);
        window.tabContentLoaded[0] = true;

        // Initialize Kendo UI widgets in the new HTML
        kendo.init($("#vehicleTabContent"));

        // Rebind actions
        window.wireVehicleForm();

        // Apply readonly/edit mode logic AFTER widgets exist
        setTimeout(function () {
            window.initVehiclePopupForm();
        }, 100);

        // Enable/disable tabs depending on vehicleId
        var tabStrip = $("#estimateTabs").data("kendoTabStrip");
        if (vehicleId !== 0 && tabStrip) {
            for (var i = 1; i <= 7; i++) {
                tabStrip.enable(tabStrip.tabGroup.children().eq(i), true);
            }
        } else if (vehicleId === 0 && tabStrip) {
            for (var i = 1; i <= 7; i++) {
                tabStrip.enable(tabStrip.tabGroup.children().eq(i), false);
            }
        }

        if (typeof callback === "function") callback();
    });
};


Now you donâ€™t need to manually call initVehiclePopupForm() after reload â€” it runs as part of the load sequence every time.

ðŸŸ¢ 2. Simplify your openEstimatePopup() (remove duplicate init logic)

You currently do this:

setTimeout(function () {
    setComboBoxValues();
    initVehiclePopupForm();
    wireVehicleForm();
}, 100);


Since loadVehicleForm() already handles wireVehicleForm() and initVehiclePopupForm(), remove those duplicate calls here.
Only keep setComboBoxValues().

setTimeout(function () {
    setComboBoxValues();
}, 100);


Otherwise, initVehiclePopupForm() runs twice â€” once before, and once after widgets exist â€” which causes exactly the mixed readonly/editable behavior youâ€™re seeing.

ðŸŸ¢ 3. Expand your getKendoWidget() helper to include all widget types
window.getKendoWidget = function (id) {
    var element = $("#" + id);
    return element.data("kendoComboBox") ||
           element.data("kendoDropDownList") ||
           element.data("kendoNumericTextBox") ||
           element.data("kendoDatePicker") ||
           element.data("kendoTextBox") ||
           element.data("kendoMaskedTextBox");
};


Some of your form fields (Year, Sopnumber, etc.) might be regular inputs or masked boxes â€” this ensures theyâ€™re caught too.
