I need toclear all the previous values in suppliername, keyword, description, unit cost, quantity, percentage and total cost
when data in NscPartsComboBox is changed.

<script>
    function onNscPartNumSelect(e) { }
</script>
<script>
    
    function getSupplierNameParams() {
        var combo = $("input[name='OrigSuppNum']").data("kendoComboBox");
        console.warn('combo :', combo);
        return {
            supplierNumber: combo ? combo.value() : ""
        };
    }


    function onNscPartsComboBoxSelect(e) {
        // Get the selected item from ComboBox
        var selected = this.dataItem(e.item.index());
        var supplierName = selected ? selected.Text : "";

        // Find the open popup editor window
        var popup = $(".k-window-content:visible");

        // Get the editable model bound to the popup
        var editable = popup.data("kendoEditable");
       // var model = editable ? editable.options.model : null;
       // console.warn('model :', model);

        var model = currentNscPartsModel;
        console.warn('model :', model);
        

        /////////////////////////
        $("input[name='OrigSupplierName']").closest("[data-role='combobox']").data("kendoComboBox") = "";
        
        // Get supplier number from the popup input field (OrigSuppNum)
        var supplierNumber = $("input[name='OrigSuppNum']").val();

        console.log("**** onNscPartsComboBoxSelect - supplierNumber:", supplierNumber, " supplierName:", supplierName);

        // Update model with supplier name
        if (model && supplierName) {
            model.set("OrigSupplierName", supplierName);
        }
        
        // Fetch supplier details and update fields in popup
        if (supplierNumber && supplierName) {
            $.ajax({
                url: '/AutoComplete/GetSupplierDetailsByName',
                type: 'GET',
                data: {
                    supplierNumber: supplierNumber,
                    supplierName: supplierName
                },
                success: function (result) {
                    if (result && model) {
                        model.set("OemPartCost", result.PartCost);
                        model.set("Description", result.Description);
                        model.set("KeyWord", result.KeyWord);
                    }
                },
                error: function () {
                    console.error("Failed to fetch supplier details.");
                }
            });
        }
    }
</script>
<script>
    function onNscPartsEdit(e) {
        console.log('VEH Index onNscPartsEdit');
        var wnd = e.container.data("kendoWindow"); //outer popupsize
        wnd.setOptions({
            width: "450px",
            height: "600px",

            scrollable: false,     //
            title: e.model.isNew() ? "Add New Non Stock Coded Part" : "Edit Non Stock Coded Part",
            modal: true,
            resizable: false
        });

        e.container.closest(".k-window").addClass("scparts-popup-style");

        // track current model for combobox select logic
        currentNscPartsModel = e.model;

        // Make OrigSuppNum read-only in Edit mode
        setTimeout(function () {
            const combo = $("input[name='OrigSuppNum']").closest("[data-role='combobox']").data("kendoComboBox");
            if (combo) {
                combo.readonly(!e.model.isNew());
            }
        }, 200);

        ////////////////////////////////
        var container = e.container; // this is the popup windowâ€™s form

        // Get Kendo NumericTextBoxes using the [name] attribute
        var unitCost = container.find("[name='UnitCost']").data("kendoNumericTextBox");
        var qty = container.find("[name='Qty']").data("kendoNumericTextBox");
        var percentage = container.find("[name='Percentage']").data("kendoNumericTextBox");
        var totalCost = container.find("[name='TotalCost']").data("kendoNumericTextBox");

        function calculateNscTotal() {
            var u = unitCost.value() || 0;
            var q = qty.value() || 0;
            var p = percentage.value() || 0;

            totalCost.value(u * q * (p / 100));
        }

        // Hook into change events
        unitCost.bind("change", calculateNscTotal);
        qty.bind("change", calculateNscTotal);
        percentage.bind("change", calculateNscTotal);

        // Run once on popup load (for editing existing records)
        calculateNscTotal();

        ///////////////////////////////
    }

</script>
