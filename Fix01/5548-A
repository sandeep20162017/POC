Full working code
// ==========================
// üîπ When user selects a new NSC part
// ==========================
function onNscPartsComboBoxSelect(e) {
    console.log("üöÄ onNscPartsComboBoxSelect triggered");

    // The selected data item from the dropdown
    var selected = this.dataItem(e.item.index());
    var supplierName = selected ? selected.Text : "";

    // Find the current Kendo editable model (the row in popup)
    var model = window.currentNscPartsModel || null;

    // The active Kendo popup editor container
    var popup = $(".k-window-content:visible");

    // ‚úÖ Clear all dependent fields first
    clearNscPartDependentFields(popup, model);

    // Optional: get supplier number (if already chosen)
    var supplierNumber = $("input[name='OrigSuppNum']").val();
    console.log("Supplier Number:", supplierNumber, "Supplier Name:", supplierName);

    // ‚úÖ Update model with supplier name if available
    if (model && supplierName) {
        model.set("OrigSupplierName", supplierName);
    }

    // ‚úÖ Fetch supplier details and update fields if both supplier & part selected
    if (supplierNumber && supplierName) {
        $.ajax({
            url: '/AutoComplete/GetSupplierDetailsByName',
            type: 'GET',
            data: {
                supplierNumber: supplierNumber,
                supplierName: supplierName
            },
            success: function (result) {
                if (result && model) {
                    model.set("OemPartCost", result.PartCost || 0);
                    model.set("Description", result.Description || "");
                    model.set("KeyWord", result.KeyWord || "");
                }
            },
            error: function () {
                console.error("Failed to fetch supplier details.");
            }
        });
    }
}

üßπ Helper: Clear dependent fields

This function safely clears all related fields (textboxes, comboboxes, numeric textboxes),
including resetting comboboxes to a ‚Äúno selection‚Äù state (index = -1).

function clearNscPartDependentFields(container, model) {
    console.log("üßπ Clearing dependent NSC part fields...");

    // 1Ô∏è‚É£ Clear ComboBoxes / TextBoxes
    var textFields = [
        "OrigSupplierName",
        "KeyWord",
        "Description"
    ];

    textFields.forEach(function (name) {
        var combo = container.find("[name='" + name + "']").data("kendoComboBox");
        var txt = container.find("[name='" + name + "']").data("kendoTextBox");
        var input = container.find("[name='" + name + "']");

        if (combo) {
            combo.select(-1);       // ‚úÖ deselect any previous selection
            combo.text("");         // ‚úÖ clear display text
            combo.value("");        // ‚úÖ clear actual value
        } else if (txt) {
            txt.value("");
        } else {
            input.val("");
        }

        if (model) model.set(name, ""); // keep Kendo model in sync
    });

    // 2Ô∏è‚É£ Clear NumericTextBoxes
    var numericFields = [
        "UnitCost",
        "Qty",
        "Percentage",
        "TotalCost"
    ];

    numericFields.forEach(function (name) {
        var num = container.find("[name='" + name + "']").data("kendoNumericTextBox");
        if (num) {
            num.value(0);
            num.trigger("change");
        } else {
            container.find("[name='" + name + "']").val(0);
        }

        if (model) model.set(name, 0);
    });

    // Optional: mark the model as dirty so Kendo refreshes UI if needed
    if (model) model.dirty = true;
}
