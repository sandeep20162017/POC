üß© Full working implementation
// =======================================================
// üîπ When Non-Stock Part ComboBox selection changes
// =======================================================
function onNscPartsComboBoxSelect(e) {
    console.log("üöÄ onNscPartsComboBoxSelect triggered");

    // 1Ô∏è‚É£ Get the selected NSC Part
    var selectedPart = this.dataItem(e.item.index());
    var partCode = selectedPart ? selectedPart.Value : "";
    var partText = selectedPart ? selectedPart.Text : "";

    // 2Ô∏è‚É£ Get current editable popup container & model
    var popup = $(".k-window-content:visible");
    var model = window.currentNscPartsModel || null;

    // 3Ô∏è‚É£ Clear all dependent fields (supplier name, cost, qty, etc.)
    clearNscPartDependentFields(popup, model);

    // 4Ô∏è‚É£ Now fetch the new supplier details for the selected part
    if (partCode) {
        $.ajax({
            url: '/AutoComplete/GetSupplierDetailsByPartCode',
            type: 'GET',
            data: { partCode: partCode },
            success: function (result) {
                if (result && model) {
                    console.log("Supplier details fetched:", result);

                    // populate supplier combo
                    var supplierCombo = popup.find("[name='OrigSupplierName']").data("kendoComboBox");
                    if (supplierCombo) {
                        supplierCombo.dataSource.data([{
                            Value: result.SupplierNumber,
                            Text: result.SupplierName
                        }]);
                        supplierCombo.select(0); // ‚úÖ Set new selection
                    }

                    // set dependent fields
                    model.set("OrigSupplierName", result.SupplierName || "");
                    model.set("OrigSuppNum", result.SupplierNumber || "");
                    model.set("KeyWord", result.KeyWord || "");
                    model.set("Description", result.Description || "");
                    model.set("UnitCost", result.UnitCost || 0);
                    model.set("Qty", result.Qty || 0);
                    model.set("Percentage", result.Percentage || 0);
                    model.set("TotalCost", result.TotalCost || 0);

                    // refresh UI
                    popup.find("[name='KeyWord']").val(result.KeyWord || "");
                    popup.find("[name='Description']").val(result.Description || "");
                }
            },
            error: function () {
                console.error("‚ùå Failed to fetch supplier details for part:", partCode);
            }
        });
    }
}

üßπ Helper function ‚Äî Clears all dependent fields (including ComboBoxes)

This is an improved version of our previous helper, now clearing ComboBoxController-backed fields too:

function clearNscPartDependentFields(container, model) {
    console.log("üßπ Clearing dependent NSC fields...");

    // 1Ô∏è‚É£ Fields to clear
    var textFields = [
        "OrigSupplierName",
        "OrigSuppNum",
        "KeyWord",
        "Description"
    ];

    textFields.forEach(function (name) {
        var combo = container.find("[name='" + name + "']").data("kendoComboBox");
        var txt = container.find("[name='" + name + "']").data("kendoTextBox");
        var input = container.find("[name='" + name + "']");

        if (combo) {
            // ‚úÖ Properly reset ComboBoxController-backed combo
            combo.dataSource.data([]); // clear data source
            combo.select(-1);          // clear selection
            combo.value("");           // clear value
            combo.text("");            // clear display text
        } else if (txt) {
            txt.value("");
        } else {
            input.val("");
        }

        if (model) model.set(name, "");
    });

    // 2Ô∏è‚É£ Numeric fields
    ["UnitCost", "Qty", "Percentage", "TotalCost"].forEach(function (name) {
        var num = container.find("[name='" + name + "']").data("kendoNumericTextBox");
        if (num) num.value(0);
        else container.find("[name='" + name + "']").val(0);
        if (model) model.set(name, 0);
    });

    if (model) model.dirty = true;
}

‚úÖ Example controller methods (for clarity)

In your ComboBoxController.cs or AutoCompleteController.cs, you might have:

public JsonResult GetSupplierDetailsByPartCode(string partCode)
{
    var details = _repo.GetSupplierDetails(partCode);
    return Json(details, JsonRequestBehavior.AllowGet);
}


and the returned object:

new {
    SupplierNumber = "SUP123",
    SupplierName = "ABC Parts Ltd",
    KeyWord = "Brake Pad",
    Description = "Premium ceramic brake pad",
    UnitCost = 125.5,
    Qty = 1,
    Percentage = 100,
    TotalCost = 125.5
}
