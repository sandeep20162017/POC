üß© 1Ô∏è‚É£ onNscPartsComboBoxSelect(e) ‚Äî main event handler
function onNscPartsComboBoxSelect(e) {
    console.log("üöÄ onNscPartsComboBoxSelect triggered");

    var selected = this.dataItem(e.item.index());
    var selectedPartName = selected ? selected.Text : "";

    // Get the editable model and popup window
    var model = window.currentNscPartsModel || null;
    var popup = $(".k-window-content:visible");

    // ‚úÖ Clear previous supplier & cost-related fields
    clearNscPartDependentFields(popup, model);

    // ‚úÖ Now update the model with the new part name
    if (model) {
        model.set("NscPartNum", selectedPartName);
    }

    // Optional: if you also want to load part-specific defaults here, do it below
    console.log("Selected NSC Part:", selectedPartName);
}

üßπ 2Ô∏è‚É£ clearNscPartDependentFields(container, model) ‚Äî resets all dependent fields (including ComboBox)
function clearNscPartDependentFields(container, model) {
    console.log("üßπ Clearing dependent NSC part fields...");

    // ComboBox/Text fields to clear
    var textFields = [
        "OrigSupplierName",  // ComboBox
        "KeyWord",           // TextBox
        "Description"        // TextBox
    ];

    textFields.forEach(function (name) {
        var combo = container.find("[name='" + name + "']").data("kendoComboBox");
        var txt = container.find("[name='" + name + "']").data("kendoTextBox");
        var input = container.find("[name='" + name + "']");

        if (combo) {
            console.log("Clearing ComboBox:", name);
            combo.select(-1);     // ‚úÖ deselect current item
            combo.value("");      // ‚úÖ clear hidden value
            combo.text("");       // ‚úÖ clear visible text
            combo.trigger("change"); // ‚úÖ fire change so bindings update
        } else if (txt) {
            txt.value("");
        } else {
            input.val("");
        }

        if (model) model.set(name, ""); // clear data model too
    });

    // NumericTextBoxes to clear
    var numericFields = [
        "UnitCost",
        "Qty",
        "Percentage",
        "TotalCost"
    ];

    numericFields.forEach(function (name) {
        var num = container.find("[name='" + name + "']").data("kendoNumericTextBox");
        if (num) {
            num.value(0);
            num.trigger("change");
        } else {
            container.find("[name='" + name + "']").val(0);
        }

        if (model) model.set(name, 0);
    });

    // Optional: mark dirty so Kendo refreshes UI bindings
    if (model) model.dirty = true;
}
