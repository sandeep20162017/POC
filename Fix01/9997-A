Here’s how you can add an Edit button per row (before Delete) with its own JS handler:

✅ Step 1 – Add Command Column

Update your columns block like this:

columns.Command(command =>
{
    command.Custom("Edit")
        .Click("onSetEditClick")
        .Text("Edit")
        .IconClass("k-icon k-i-edit")
        .HtmlAttributes(new { @class = "scparts-action-btn k-button" });

    command.Destroy()
        .Text("Delete")
        .IconClass("k-icon k-i-delete")
        .HtmlAttributes(new { @class = "scparts-action-btn k-button" });
}).Title("Actions").Width(180);


Now each row will have Edit and Delete buttons.

✅ Step 2 – JS Function for Edit Button

Inline editing requires you to call the grid’s editRow() method:

function onSetEditClick(e) {
    e.preventDefault(); // prevent default navigation

    var grid = $("#SettingGrid").data("kendoGrid");
    var row = $(e.currentTarget).closest("tr");

    grid.editRow(row); // puts that row into inline edit mode
}
