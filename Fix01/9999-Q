You are telerik and asp.net core expert.
In the follwing view, Ineed to populate TotalCost with formula unitCost*Quantity*% 
1. When adding new part/updating part
2. When the form is loaded
@model BCES.Models.Parts.StockCodedPartsViewModel

@{
    var mdl = Model ?? new BCES.Models.Parts.StockCodedPartsViewModel();
    bool isNew = string.IsNullOrEmpty(mdl.MMSStockCode);
}

<div id="notification"></div>
<div class="popup-container scparts-popup-style">
    <div class="popup-actions">
        <button class="k-button k-primary" type="button" onclick="saveScPartPopup()">Update</button>
        <button class="k-button" type="button" onclick="cancelScPartPopup()">Cancel</button>
    </div>

    <div class="form-container">
        <form id="scPartsForm">
            @Html.HiddenFor(m => m.LinkCode)

            <!-- Part Information -->
            <div class="section-title">Part Information</div>
            <div class="form-row">
                <div class="form-group double-width">
                    @Html.LabelFor(m => m.MMSStockCode, "Stock Code", new { @class = "form-label required-label" })
                    @Html.EditorFor(m => m.MMSStockCode, "ScComboBox", new { htmlAttributes = new { required = "required" } })
                </div>
                <div class="form-group double-width">
                    @Html.LabelFor(m => m.PartType, "Part Type", new { @class = "form-label" })
                    @(Html.Kendo().TextBoxFor(m => m.PartType).HtmlAttributes(new { @readonly = "readonly" }))
                </div>
                <div class="form-group double-width">
                    @Html.LabelFor(m => m.UnitCost, "Unit Cost", new { @class = "form-label" })
                    @(Html.Kendo().NumericTextBoxFor(m => m.UnitCost).Format("c2"))
                </div>
            </div>
            <div class="form-row">
                <div class="form-group full-width">
                    @Html.LabelFor(m => m.DetailedDesc, "Part Description", new { @class = "form-label" })
                    @(Html.Kendo().TextBoxFor(m => m.DetailedDesc).HtmlAttributes(new { @readonly = "readonly" }))
                </div>
            </div>

            <!-- Supplier Information -->
            <div class="section-title">Supplier Information</div>
            <div class="form-row">
                <div class="form-group double-width">
                    @Html.LabelFor(m => m.CC, "Cost Centre", new { @class = "form-label required-label" })
                    @Html.EditorFor(m => m.CC, "ComboBoxEditor", new { htmlAttributes = new { required = "required" } })
                </div>
                <div class="form-group double-width">
                    @Html.LabelFor(m => m.OrigSupplierNum, "Supplier Num", new { @class = "form-label" })
                    @(Html.Kendo().TextBoxFor(m => m.OrigSupplierNum).HtmlAttributes(new { @readonly = "readonly" }))
                </div>
                <div class="form-group double-width">
                    @Html.LabelFor(m => m.OrigSupplierName, "Supplier Name", new { @class = "form-label" })
                    @(Html.Kendo().TextBoxFor(m => m.OrigSupplierName).HtmlAttributes(new { @readonly = "readonly" }))
                </div>
            </div>

            <!-- Cost Information -->
            <div class="section-title">Cost Information</div>
            <div class="form-row">
                <div class="form-group">
                    @Html.LabelFor(m => m.CoreCost, "Core Cost", new { @class = "form-label" })
                    @(Html.Kendo().NumericTextBoxFor(m => m.CoreCost).Min(0).Format("c2"))
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Qty, "Quantity", new { @class = "form-label required-label" })
                    @(Html.Kendo().NumericTextBoxFor(m => m.Qty).Min(0).Format("n0").HtmlAttributes(new { required = "required" }))
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Percentage, "%", new { @class = "form-label required-label" })
                    @(Html.Kendo().NumericTextBoxFor(m => m.Percentage).Format("n0").Min(0).Max(100).HtmlAttributes(new { required = "required" }))
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.TotalCost, "Total", new { @class = "form-label required-label" })
                    @(Html.Kendo().NumericTextBoxFor(m => m.TotalCost).Format("n0").Min(0).Max(100).HtmlAttributes(new { required = "required" }))
                </div>
               @*  <div class="form-group double-width">
                    @Html.LabelFor(m => m.TotalCost, "Total Cost", new { @class = "form-label" })
                    @(Html.Kendo().NumericTextBoxFor(m => m.TotalCost).Format("c2").HtmlAttributes(new { @readonly = "readonly" }))
                </div> *@
            </div>

           
        </form>
    </div>
</div>
