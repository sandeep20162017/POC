Step 1: Configure ComboBox with NoDataTemplate and Events
razor
Copy
@(Html.Kendo().ComboBox()
    .Name("YourProperty")
    .DataTextField("Text")
    .DataValueField("Value")
    .Filter(FilterType.Contains)
    .MinLength(2)
    .NoDataTemplate(@<text>
        <div id="invalid-selection-message" class="text-danger"> 
            Invalid Selection! 
            <script>
                // Prevent grid save when "No data" is shown
                var grid = $("#grid").data("kendoGrid");
                grid._originalSave = grid.saveRow;
                grid.saveRow = function() {
                    if ($("#invalid-selection-message").is(":visible")) {
                        kendo.ui.showNotification("Invalid value: Pake proper selection!", "error");
                        return; // Block grid save
                    }
                    grid._originalSave.apply(this, arguments);
                };
            </script>
        </div>
    </text>)
    .DataSource(source => 
    {
        source.Read(read => read.Action("GetFilteredData", "YourController"));
    })
    .Events(e => e
        .Change("clearInvalidMessage") // Clear message on valid selection
    )
)
Step 2: Add JavaScript to Clear Message on Valid Selection
javascript
Copy
function clearInvalidMessage(e) {
    // Hide the "No data" message when a valid selection is made
    $("#invalid-selection-message").hide(); 
    // Restore grid's save functionality
    var grid = $("#grid").data("kendoGrid");
    grid.saveRow = grid._originalSave;
}
Step 3: Configure Grid to Use InCell Editing
razor
Copy
@(Html.Kendo().Grid<YourModel>()
    .Name("grid")
    .Columns(columns => 
    {
        columns.Bound(p => p.YourProperty).EditorTemplateName("CustomComboBoxEditor");
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
