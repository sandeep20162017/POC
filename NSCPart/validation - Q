You are ASP.NET core (v 8.0) and Telerik (Kendoo) ASP.NET core expert.
Is it possible to have SQL annotations in MVC model? I am using Telerik grid, InlIne Edit.
I want to make sure description must be from SQL : "select description from Bus". If user input doesn not match with SQL description, issue error.
This is just like making Description readonly, but I don't want to use dropdown control.
Example my model is like :
model.cs
namespace BCES.Models.Admin
{
    public class BusModel
    {
        /// <summary>
        /// 
        /// </summary>
        public int ListId { get; set; }

        [Required(ErrorMessage = "This field is required.")]
        <<Is it possible to call SQL here>>>
        public string Description { get; set; }


    }
}

      Bus.cshtml :
      @model IEnumerable<BCES.Models.Admin.BusModel>

@{
    ViewData["Title"] = "Vehicle Management";
}

<h6>Vehicle Management</h6>

@(Html.Kendo().Grid<BCES.Models.Admin.BusModel>()
    .Name("busGrid")
    .Columns(columns =>
    {
        columns.Bound(u => u.ListId).Hidden(true);
        columns.Bound(u => u.Description).Title("Vehicle Name");
            

        columns.Command(command =>
           {
               command.Custom("Delete")
                  .Click("showDeleteConfirmation")
                  .Text(" ")
                  .IconClass("k-icon k-i-delete")
                  .HtmlAttributes(new { @class = "text-danger", title = "Delete" });
           }).Title("Actions");
     })
         //InCell
         .ToolBar(toolbar =>
        {
            toolbar.Create();
            toolbar.Save();
        })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .Sortable()
   // .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Events(events => events
                    .Error("onDataSourceError")
                    .RequestEnd("onRequestEnd")
                     )
        .Read(read => read.Url(Url.Action("ReadBus", "Bus")).Type(HttpVerbs.Get))
        .Create(create => create.Url(Url.Action("CreateBus", "Bus")).Type(HttpVerbs.Post))
        .Update(update => update.Url(Url.Action("UpdateBus", "Bus")).Type(HttpVerbs.Post))
        .Destroy(delete => delete.Url(Url.Action("DeleteBus", "Bus")).Type(HttpVerbs.Post))
        .Model(model =>
        {
            model.Id(u => u.ListId);
            model.Field(u => u.Description);
        })
      
    )
)
<!-- Custom Delete Confirmation Dialog -->
<div id="deleteConfirmationDialog" style="display: none;">
    <div class="confirmation-message">
        <span class="k-icon k-i-warning confirmation-icon"></span>
        <!-- Edit this span text  -->
        <span>Are you sure you want to delete this item?</span>
    </div>
    <div class="confirmation-buttons">
        <button type="button" class="k-button cancel-btn">Cancel</button>
        <button type="button" class="k-button confirm-btn">Delete</button>
    </div>
</div>
<div id="notification"></div>
@section Scripts {
    <script>
        function getAutoCompleteParams() {
            var input = $("input[data-role='autocomplete']:focus");
            return {
                columnName: input.attr("name"),
                searchText: input.val() || "" // Handle empty search text
            };
        }
    </script>
    <script>
        // Initialize notification FIRST
        var notification = $("#notification").kendoNotification({
            position: {
                pinned: true,
                top: 50,
                right: 30
            },
            autoHideAfter: 4000,
            stacking: "down"
        }).data("kendoNotification");

        // Error handler
        function onDataSourceError(e) {
            let errorMessage = "Operation failed. ";

            if (e.errorThrown) {
                errorMessage += e.errorThrown;
            } else if (e.xhr && e.xhr.responseText) {
                errorMessage += e.xhr.responseText;
            }

            notification.error(errorMessage);
        }

        // Success handler
        function onRequestEnd(e) {
            if (e.type === "create") {
                notification.success("Record created successfully");
            } else if (e.type === "update") {
                notification.success("Record updated successfully");
            } else if (e.type === "destroy") {
                notification.success("Record deleted successfully");
            }
        }
    </script>
    <script>

        // Initialize custom confirmation dialog
        var deleteDialog = $("#deleteConfirmationDialog").kendoWindow({
            width: "400px",
            title: "Confirm Delete",
            modal: true,
            visible: false,
            actions: ["Close"]
        }).data("kendoWindow");

        function showDeleteConfirmation(e) {
            e.preventDefault();
            var grid = $("#busGrid").data("kendoGrid");
            var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));

            // Store reference to the dataItem
            deleteDialog.dataItem = dataItem;

            deleteDialog.center().open();
        }

        // Handle dialog buttons
        $(document).on("click", "#deleteConfirmationDialog .confirm-btn", function () {
            var grid = $("#busGrid").data("kendoGrid");
            var dataItem = deleteDialog.dataItem;

            $.ajax({
                url: '@Url.Action("DeleteBus", "Bus")',
                type: 'POST',
                data: { ListId: dataItem.ListId },
                success: function () {
                    grid.dataSource.remove(dataItem);
                    notification.success("Record deleted successfully");
                    deleteDialog.close();
                },
                error: function (xhr) {
                    notification.error("Delete failed: " + xhr.responseText);
                    deleteDialog.close();
                }
            });
        });

        $(document).on("click", "#deleteConfirmationDialog .cancel-btn", function () {
            deleteDialog.close();
        });

    </script>
   
}
