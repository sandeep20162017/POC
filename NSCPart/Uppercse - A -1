Update the Grid Configuration:
Add the Edit event to the grid to trigger a JavaScript function when editing starts.

cshtml
Copy
@(
Html.Kendo().Grid<BCES.Models.Admin.LabourTypeModel>()
    .Name("LabourTypeGrid")
    .Columns(columns =>
    {
        // Existing column configurations
    })
    .Events(events => events.Edit("onEdit")) // Add this line
    // Rest of the grid configuration (ToolBar, Editable, DataSource, etc.)
)
Add the JavaScript Handler:
Include the onEdit function in your Scripts section to convert input to uppercase for the desired column (e.g., LabourDefn).

html
Copy
@section Scripts {
    <script>
        function onEdit(e) {
            // Check if the edited field is 'LabourDefn'
            if (e.field === "LabourDefn") {
                // Find the input element in the editor container
                var input = e.container.find("input");
                // Convert input value to uppercase as the user types
                input.on("input", function() {
                    this.value = this.value.toUpperCase();
                });
            }
        }
    </script>
}
Run HTML
Explanation:

Edit Event: The grid triggers the onEdit function when a cell enters edit mode.

Field Check: The condition e.field === "LabourDefn" ensures we only target the correct column.

Input Manipulation: The input event listener converts the input value to uppercase in real-time.

Adjust for Other Columns:
If you need this behavior for other columns (e.g., OverheadType), modify the onEdit function:

javascript
Copy
function onEdit(e) {
    // Apply to multiple columns
    if (e.field === "LabourDefn" || e.field === "OverheadType") {
        var input = e.container.find("input");
        input.on("input", function() {
            this.value = this.value.toUpperCase();
        });
    }
}
Note: Ensure your model properties (e.g., LabourDefn) are handled correctly on the server to store uppercase values if needed.

New chat
Message DeepSeek

