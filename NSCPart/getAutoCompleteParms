function getAutoCompleteParams() {
    // "this" refers to the Kendo DataSource instance
    var widget = this.owner; // Gets the widget (ComboBox/AutoComplete) that owns the DataSource

    if (widget && widget.element) {
        return {
            columnName: widget.element.attr("data-column"), // Get column name from widget's HTML attribute
            searchText: widget.input.val() || "" // Get current input value
        };
    }

    // Fallback if widget not detected
    return { columnName: "", searchText: "" };
}
Step 2: Verify Editor Template Configuration
Ensure your ComboBoxEditor.cshtml and AutoCompleteEditor.cshtml templates include the data-column attribute:

html
Copy
@(Html.Kendo().ComboBox()
    .Name(fieldName)
    .DataTextField("Text")
    .DataValueField("Value")
    .Editable(false)
    .HtmlAttributes(new Dictionary<string, object>
    {
        { "name", fieldName },
        { "data-role", "combobox" },
        { "data-column", fieldName } // âœ… Critical: Passes the column name
    })
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Url(Url.Action("GetAutoCompleteData", "AutoComplete"))
                .Type(HttpVerbs.Get)
                .Data("getAutoCompleteParams"); // Uses the global function
        })
        .ServerFiltering(true);
    })
)
