/AutoComplete/ValidateWidgetData?KeyWord=test123&HiddenColumnName=KeyWord

function onComboBoxDataBound(e) {
    var combobox = e.sender;
    if (combobox.dataSource.view().length === 0) {
        combobox.close();
        // Show validation error
        combobox.element.closest(".k-grid-edit-row")
            .find("[data-valmsg-for='" + combobox.element.attr("name") + "']")
            .show()
            .text("No matching data found");
    }
}
@model string

@{
    var fieldName = ViewData.TemplateInfo.GetFullHtmlFieldName("");
    var hiddenColumnField = ViewData.TemplateInfo.GetFullHtmlFieldName("HiddenColumnName");
}

@Html.Hidden(hiddenColumnField, "", new { @class = "hidden-column" })

@(Html.Kendo().ComboBox()
    .Name(fieldName)
    .DataTextField("Text")
    .DataValueField("Value")
    .Filter(FilterType.Contains)
    .Placeholder("Search...")
    .AutoBind(false)
    .MinLength(2)
    .HtmlAttributes(new Dictionary<string, object>
    {
        { "data-val", "true" }, // ðŸ‘ˆ Critical for validation
        { "data-val-remote", "Invalid selection" },
        { "data-val-remote-url", Url.Action("ValidateWidgetData", "AutoComplete") },
        { "data-val-remote-additionalfields", "*.HiddenColumnName" }, // ðŸ‘ˆ Wildcard syntax
        { "data-val-remote-type", "GET" }
    })
    .Events(e => e.DataBound("onComboBoxDataBound"))
    .DataSource(source => source
        .Read(read => read.Url(Url.Action("GetAutoCompleteData", "AutoComplete")).Data("getComboBoxParams"))
    )
)
