public async Task<IActionResult> UpdateEmpSalary([DataSourceRequest] DataSourceRequest request, [FromForm] EmpSalaryModel empSalaryModel)
{
    try
    {
        // UPSERT operation using MERGE statement
        var sql = @"
            MERGE INTO SBCES.EMPLOYEESALARIES AS target
            USING (VALUES (@WageGroup, @RatePerHour, @DateEntered)) 
                AS source (WageGroup, RatePerHour, DateEntered)
            ON target.WageGroup = source.WageGroup
            WHEN MATCHED THEN
                UPDATE SET 
                    RatePerHour = source.RatePerHour,
                    DateEntered = source.DateEntered
            WHEN NOT MATCHED THEN
                INSERT (WageGroup, RatePerHour, DateEntered)
                VALUES (source.WageGroup, source.RatePerHour, source.DateEntered);";

        var parameters = new
        {
            empSalaryModel.WageGroup,
            empSalaryModel.RatePerHour,
            DateEntered = DateTime.Now
        };

        await _dbConnection.ExecuteAsync(sql, parameters);

        return Json(new[] { empSalaryModel }.ToDataSourceResult(request));
    }
    catch (Exception ex)
    {
        return StatusCode(500, new { message = $"Error updating salary: {ex.Message}" });
    }
}
