In Javascript console.log("inside getComboBoxParams", currentColumnName) is NOT printed.
<script>
        var currentColumnName = "";

        $(document).ready(function () {
            setTimeout(function () {
                var grid = $("#NscPartsUsedGrid").data("kendoGrid");

                if (grid) {
                    console.error('found grid');
                    grid.bind("edit", function (e) {
                        console.error('inside edit');
                        // Capture the column name being edited
                        var fieldName = e.container.find("input[data-role='combobox']").attr("name");
                        currentColumnName = fieldName || "";
                        console.error("Current Column:", currentColumnName);
                    });
                } else {
                    console.error('Grid not found');
                }
            }, 100);
        });

        function getComboBoxParams() {
            console.log("inside getComboBoxParams", currentColumnName);
            var combobox = $(".k-combobox").data("kendoComboBox");

            if (combobox) {
                var params = {
                    columnName: currentColumnName, // Match the controller parameter name
                    searchText: combobox.text() || "" // Match the controller parameter name
                };

                console.log("Sending params:", params);
                return params;
            }

            return {};
        }
 </script>

ComboBoxEditor.cshtml :

@model object

@{
    var fieldName = ViewData.TemplateInfo.GetFullHtmlFieldName("");
}

@(Html.Kendo().ComboBox()
    .Name(fieldName)
    .DataTextField("Text")
    .DataValueField("Value")
    .Filter(FilterType.Contains)
    .Placeholder("Select...")
    .HtmlAttributes(new Dictionary<string, object>
    {
        { "name", fieldName },
        { "data-role", "combobox" }, // Correct data-role for ComboBox
        { "data-column", fieldName } // Pass column name
    })
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Url(Url.Action("GetAutoCompleteData", "AutoComplete"))
                .Type(HttpVerbs.Get)
                .Data("getComboBoxParams"); // Pass additional params
        })
        .ServerFiltering(true);
    })
   // .Template("#= Text #")
)
