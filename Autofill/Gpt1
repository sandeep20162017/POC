You are ASP.NET Core 8.0 and Telerik ASP.NET Core expert.
I need to add autocomplete feature for all the grid columns when user clicks on grid action Add and edit.
Since I want to make this change across the application, is there a way to use common implementaion and use this static clas or static functio for autocomplete feature? I was thinking like using a common controller and common cshtml that will take the common controller action and dapper SQL calls.

For the following I would like to call a same funtion for autocomplete
OrigSupplierName,KeyWord, Description, .CoreCost, TaskDescription etc
LabourTask.cshtml :
@model IEnumerable<BCES.Models.Admin.TaskModel>

@{
    ViewData["Title"] = "Task Description";
}
<h6>Task Details</h6>
@(
Html.Kendo().Grid<BCES.Models.Admin.TaskModel>()
                                .Name("TaskGrid")
                                .Columns(columns =>
                            {
                                columns.Bound(p => p.TaskId).Title("Task Id").Hidden(true) ;
                                columns.Bound(p => p.TaskDescription).Title("Task Description");
                               
                                columns.Command(command =>
                                {
                                    if (@ViewBag.RoleId == 1)
                                    {
                                        command.Edit();
                                    }
                                    if (@ViewBag.RoleId == 1)
                                    {
                                        command.Destroy();
                                    }
                                }).Width(200);
                            })
                    .ToolBar(toolbar =>
                    {
                        if (@ViewBag.RoleId == 1)
                        {
                            toolbar.Create();
                        }
                    })
               // .Editable(editable => editable.Mode(GridEditMode.InLine).TemplateName("NscPartsAddUpdate"))

                .Pageable()
                .Sortable()
                .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Model(model =>
                    {
                        model.Id(u => u.TaskId);
                        model.Field(c => c.TaskDescription);

                    })

                    .Read(read => read.Url(Url.Action("ReadTasks", "Task")).Type(HttpVerbs.Get))
                    .Create(create => create.Url(Url.Action("CreateTask", "Task")).Type(HttpVerbs.Post))
                    .Update(update => update.Url(Url.Action("UpdateTask", "Task")).Type(HttpVerbs.Post))
                    .Destroy(delete => delete.Url(Url.Action("DeleteTask", "Task")).Type(HttpVerbs.Post))

                   )

            )

@section Scripts {
    <script>

    </script>

}



NonStockCodedParts.cshtml
@model IEnumerable<BCES.Models.Parts.NscPartsUsedViewModel>

@{
    ViewData["Title"] = "Non Stock Coded Parts";
}
 <h4>Non Stock Coded Parts</h4>
@(
Html.Kendo().Grid<BCES.Models.Parts.NscPartsUsedViewModel>()
                                .Name("NscPartsUsedGrid")
                                .Columns(columns =>
                            {
                                columns.Bound(p => p.OrigSuppNum).Title("Supplier Number").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))); ;
                                columns.Bound(p => p.OrigSupplierName).Title("Supplier Name").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))); ;
                                columns.Bound(p => p.KeyWord).Title("Keyword").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))); ;
                                columns.Bound(p => p.Description).Title("Description").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))); ;
                                columns.Bound(p => p.CoreCost).Title("Per Unit Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
                                columns.Command(command => {
                                if(@ViewBag.RoleId == 1) {
                                command.Edit();
                                }
                                if(@ViewBag.RoleId == 1) {
                                command.Destroy();
                                }
                                }).Width(200);
                            })
                    .ToolBar(toolbar =>
                    {
                        if (@ViewBag.RoleId == 1)
                        {
                            toolbar.Create();
                        }
                    })
                .Editable(editable => editable.Mode(GridEditMode.InLine).TemplateName("NscPartsAddUpdate"))
                
                .Pageable()
                .Sortable()
                .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Model(model =>
                    {
                        model.Id(u => u.NscPartsUsedId);
                                                                       
                    })
                   
                    .Read(read => read.Url(Url.Action("GetNscPartsUsedView", "NscPartsUsed")).Type(HttpVerbs.Get))
                    .Create(create => create.Url(Url.Action("CreateNscPartsUsed", "NscPartsUsed")).Type(HttpVerbs.Post))
                    .Update(update => update.Url(Url.Action("UpdateNscPartsUsed", "NscPartsUsed")).Type(HttpVerbs.Post))
                    .Destroy(delete => delete.Url(Url.Action("DeleteNscPartsUsed", "NscPartsUsed")).Type(HttpVerbs.Post))
                        
                   )
                
            )

  @section Scripts {
                <script>
                     
                </script>
       
            }

         

        
