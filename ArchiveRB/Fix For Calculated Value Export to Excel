Fix for Calculated Fields
You can compute the values in the excelExport event and inject them into the exported file.

Example Code:
csharp
Copy
Edit
@(Html.Kendo().Grid<MyModel>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.ColA).Title("Col A");
        columns.Bound(c => c.ColB).Title("Col B");
        columns.Bound(c => c.ColC).Title("Col C");
        columns.Template("#= calculateValue(ColA, ColB) #").Title("Calculated Col");
        columns.ForeignKey(c => c.ColD, (IEnumerable<SelectListItem>)ViewData["DropDownData"]).Title("Col D");
    })
    .ToolBar(toolbar =>
    {
        toolbar.Excel();
    })
    .Excel(excel =>
    {
        excel.FileName("ExportedData.xlsx")
             .AllPages(true)
             .Filterable(true);
    })
    .Pageable()
    .Sortable()
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Events(events => events.ExcelExport("onExcelExport"))
)
JavaScript for Calculated Columns:
Hereâ€™s how you calculate the missing column value and inject it into the Excel file:

javascript
Copy
Edit
function calculateValue(colA, colB) {
    return colA * colB; // Example calculation
}

function onExcelExport(e) {
    var sheet = e.workbook.sheets[0];
    
    var grid = $("#Grid").data("kendoGrid");
    var data = grid.dataSource.data();

    // Inject calculated values into the Excel file
    sheet.rows.forEach(function(row, rowIndex) {
        if (rowIndex > 0) { // Skip header row
            var colA = data[rowIndex - 1].ColA;
            var colB = data[rowIndex - 1].ColB;

            if (colA != null && colB != null) {
                row.cells.push({
                    value: calculateValue(colA, colB), // Add calculated value
                    background: "#f9f9f9", // Optional formatting
                    color: "#333"
                });
            }
        }
    });
}
2. Fix for DropDown Columns Showing IDs Instead of Text
For dropdowns, you can map the IDs to the display values in the excelExport event like this:

Example Code:
javascript
Copy
Edit
function onExcelExport(e) {
    var sheet = e.workbook.sheets[0];
    var grid = $("#Grid").data("kendoGrid");
    var data = grid.dataSource.data();

    // Map dropdown IDs to text values
    var dropdownData = @Html.Raw(Json.Serialize(ViewData["DropDownData"]));

    sheet.rows.forEach(function(row, rowIndex) {
        if (rowIndex > 0) { // Skip header row
            var item = data[rowIndex - 1];
            
            if (item.ColD) {
                var textValue = dropdownData.find(x => x.Value == item.ColD)?.Text || item.ColD;

                // Replace the cell value with the text value
                row.cells[3].value = textValue;
            }
        }
    });
}
