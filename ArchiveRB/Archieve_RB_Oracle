
FUNCTION ARCHIVE_RB
    (vi_rebuilt_stock_num IN ARCH_RB_MASTERLIST.rebuilt_stock_num%TYPE,
     vi_username IN ARCH_RB_MASTERLIST.archived_by%TYPE,
     vi_link_number IN EMPLOYEE_LABOUR.link_number%TYPE,
     vi_typeid IN EMPLOYEE_LABOUR.typeid%TYPE,
     vi_labour_cost IN ARCH_RB_MASTERLIST.labour_cost%TYPE,
     vi_labour_overhead_amount IN ARCH_RB_MASTERLIST.labour_overhead_amount%TYPE,
     vi_labour_total IN ARCH_RB_MASTERLIST.labour_total%TYPE,
     vi_materials_total IN ARCH_RB_MASTERLIST.materials_total%TYPE,
     vi_total_rebuilt_part_cost IN ARCH_RB_MASTERLIST.total_rebuilt_part_cost%TYPE,
     vi_tax_total IN ARCH_RB_MASTERLIST.tax_total%TYPE,
     vi_total_cost_tax IN ARCH_RB_MASTERLIST.total_cost_tax%TYPE,
     vo_ret_val OUT NUMBER) RETURN NUMBER IS

arch_id NUMBER;
V_PRICE NUMBER;
BEGIN
    -- 1. Insert new record into the ARCH_RB_MASTERLIST table
    INSERT INTO ARCH_RB_MASTERLIST
        (
         mms_stock_code,
         item_ref_number,
         detailed_desc,
         keyword,
         core_part_num,
         rebuilt_stock_num,
         core_charge,
         job_number,
         estimated_cost,
         sop_number,
         date_archived,
         archived_by,
         arch_rb_masterlist_id,
         labour_cost,
         labour_overhead_amount,
         labour_total,
         materials_total,
         total_rebuilt_part_cost,
         tax_total,
         total_cost_tax
        )
    SELECT
        mms_stock_code,
        item_ref_number,
        detailed_desc,
        keyword,
        core_part_num,
        rebuilt_stock_num,
        core_charge,
        job_number,
        estimated_cost,
        sop_number,
        SYSDATE,
        vi_username,
        ARCH_RB_MASTERLIST_SEQ.NEXTVAL,
        vi_labour_cost,
        vi_labour_overhead_amount,
        vi_labour_total,
        vi_materials_total,
        vi_total_rebuilt_part_cost,
        vi_tax_total,
        vi_total_cost_tax
    FROM
        RB_MASTERLIST
    WHERE
        UPPER(rebuilt_stock_num) = vi_rebuilt_stock_num;
    SELECT
        max(arch_rb_masterlist_id)
    INTO
        arch_id
    FROM ARCH_RB_MASTERLIST;
-- 2. Insert record(s) into the ARCH_RB_EMPLOYEE_LABOUR table
    INSERT INTO ARCH_RB_EMPLOYEE_LABOUR
        (
         labour_defn,
         date_entered,
         link_number,
         typeid,
         costcentre,
         ARCH_RB_EMPLOYEE_LABOUR.task,
         labour_type,
         usage,
         hrs_reqd,
         adj_hrs,
         time_addition,
         arch_rb_masterlist_id
        )
    SELECT
        labour_defn,
        date_entered,
        link_number,
        typeid,
        costcentre,
        EMPLOYEE_LABOUR.task,
        labour_type,
        usage,
        hrs_reqd,
        adj_hrs,
        time_addition,
        ARCH_RB_MASTERLIST_SEQ.CURRVAL
    FROM
        EMPLOYEE_LABOUR
    WHERE
        link_number = vi_link_number AND
        typeid = vi_typeid;


V_PRICE := get_material_cost(vi_link_number,vi_typeid);
    -- 3. Insert record(s) into the ARCH_RB_SC_PARTS_USED table
    INSERT INTO ARCH_RB_SC_PARTS_USED
        (
         mms_stock_code,
         date_entered,
         reb_part_cost,
         user_entered,
         mms_cost,
         oem_cost,
         mms_rebuilt_code,
         cost_centre,
         qty_reqd,
         percent_usage,
         link_code,
         rebuilt_part,
         link_type,
         corecost,
         arch_rb_masterlist_id,
         total_cost,
         SC_KEYWORD,
         SC_DESCRIPTION)

        SELECT
            upper(SC_PARTS_USED.mms_stock_code),
            SC_PARTS_USED.date_entered,
            nvl(A.RB_UNIT_COST,0) AS "UNIT COST",
            upper(SC_PARTS_USED.user_entered),
            nvl(SC_PARTS_USED.mms_cost,0),
            nvl(SC_PARTS_USED.oem_cost,0),
            UPPER(SC_PARTS_USED.mms_rebuilt_code) AS "REBUILT NUMBER",
            UPPER(SC_PARTS_USED.cost_centre) AS "CC",
            UPPER(SC_PARTS_USED.qty_reqd) AS "QTY",
            REPLACE(SC_PARTS_USED.percent_usage,',','.') AS "%",
            vi_link_number,
            'Y',
            'RB',
            SC_PARTS_USED.corecost AS "CORE COST",
            arch_id,
            nvl(A.RB_COST,0) AS "TOTAL COST",
            UPPER(RB_MASTERLIST.keyword) AS "KEYWORD",
            UPPER(RB_MASTERLIST.detailed_desc) AS "DESCRIPTION"
        FROM
            SC_PARTS_USED,
            RB_MASTERLIST,
            (SELECT
            round(sum(total_cost),2) as RB_COST, round(sum(total_unit_cost),2) as RB_UNIT_COST , rb_reference
        FROM
            TEMP_materials_list
        group by
            rb_reference) A
        WHERE
            SC_PARTS_USED.link_code = vi_link_number AND
            SC_PARTS_USED.rebuilt_part = 'Y' AND
            SC_PARTS_USED.link_type = vi_typeid AND
            RB_MASTERLIST.rebuilt_stock_num(+)= SC_PARTS_USED.mms_rebuilt_code AND
            rb_reference (+)= SC_PARTS_USED.mms_rebuilt_code;

   -- 3b. Insert record(s) into the ARCH_RB_SC_PARTS_USED table
    INSERT INTO ARCH_RB_SC_PARTS_USED
        (
         mms_stock_code,
         date_entered,
         reb_part_cost,
         user_entered,
         mms_cost,
         oem_cost,
         mms_rebuilt_code,
         cost_centre,
         qty_reqd,
         percent_usage,
         link_code,
         rebuilt_part,
         link_type,
         corecost,
         arch_rb_masterlist_id,
         total_cost,
         SC_KEYWORD,
         SC_DESCRIPTION)
    SELECT
        A.mms_stock_code,
        A.date_entered,
        A.reb_part_cost,
        A.user_entered,
        A.mms_cost,
        A.oem_cost,
        A.mms_rebuilt_code,
        A.cost_centre,
        A.qty_reqd,
        A.percent_usage,
        A.link_code,
        A.rebuilt_part,
        A.link_type,
        cast(FINAL_COST(a.percent_usage, a.qty_reqd, a.corecost, 0)as number) as CORECOST,
        ARCH_RB_MASTERLIST_SEQ.CURRVAL,
        A.mms_cost * cast(A.qty_reqd as number) * (to_number(replace(nvl(A.percent_usage,'0'),',','.'))/ 100),
        NVL(B.part_type,'') ,
        NVL(B.detailed_desc,'')
    FROM
        SC_PARTS_USED A, STOCK_CODED_PARTS B
    WHERE
        B.mms_stock_code (+)= A.mms_stock_code AND
        link_code = vi_link_number AND
        link_type = vi_typeid and
        rebuilt_part = 'N';

    -- 4. Insert record(s) into the ARCH_RB_NSC_PARTS_USED table
    INSERT INTO ARCH_RB_NSC_PARTS_USED
        (orig_supp_num,
         orig_supplier_name,
         cost_centre,
         qty_reqd,
         percent_usage,
         date_entered,
         entered_by,
         link_code,
         cost,
         link_type,
         corecost,
         arch_rb_masterlist_id,
         total_cost)
    SELECT
        orig_supp_num,
        orig_supplier_name,
        cost_centre,
        qty_reqd,
        percent_usage,
        date_entered,
        entered_by,
        link_code,
        cost,
        link_type,
        CAST(FINAL_COST(percent_usage, qty_reqd, corecost, 0) AS NUMBER) as CORECOST,
        arch_id,
        cost * cast(qty_reqd as number) * (to_number(replace(nvl(percent_usage,'0'),',','.'))/ 100)
    FROM
         NSC_PARTS_USED
    WHERE
        link_code = vi_link_number AND
        link_type = vi_typeid;



     V_PRICE := get_labour_cost(vi_link_number,vi_typeid);

    -- 5. Insert record(s) into the ARCH_RB_LABOUR_CC_TOTAL table
    INSERT INTO ARCH_RB_LABOUR_CC_TOTAL
        (

         cost_centre,
         total_hours,
         ARCH_RB_MASTERLIST_ID
        )
       SELECT
            CC AS "COST CENTRE",
            SUM(extended_time) AS "LABOUR HRS",
            arch_id
        FROM
            TEMP_LABOUR_LIST
        GROUP BY
            CC;

-- 6. Insert record(s) into the ARCH_RB_MATERIALS_CC_TOTAL table
/*    INSERT INTO ARCH_RB_MATERIALS_CC_TOTAL
        (
         cost_centre,
         total_cost,
         arch_rb_masterlist_id
        )


    SELECT
        a.cost_centre AS cost_centre,
        sum(a.cost) AS total_cost,
        arch_id
    FROM
        (SELECT
            cost_centre,
            FINAL_COST(percent_usage, qty_reqd, mms_cost, corecost) AS cost
         FROM
            SC_PARTS_USED
         WHERE
            link_code = vi_link_number AND
            rebuilt_part = 'N' AND
            link_type =vi_typeid
            UNION ALL
                SELECT
                    cost_centre,
                    FINAL_COST(percent_usage, qty_reqd, reb_part_cost, corecost) as cost
                FROM
                    SC_PARTS_USED
                WHERE
                    link_code = vi_link_number AND
                    rebuilt_part = 'Y' AND
                    link_type =vi_typeid
                    UNION ALL
                        SELECT
                            cost_centre,
                            FINAL_COST(percent_usage, qty_reqd, cost, corecost) as cost
                        FROM
                            NSC_PARTS_USED
                        WHERE
                            link_code = vi_link_number AND
                            link_type =vi_typeid) a
        GROUP BY
            A.cost_centre;
  */

   INSERT INTO ARCH_RB_LIST_BUSES
        (
         bus_description,
         arch_rb_masterlist_id
        )

    SELECT
        LIST_OF_BUSES.description,
        arch_id
    FROM
        RB_LIST_OF_BUSES,
        LIST_OF_BUSES
    WHERE
        rebuilt_stock_num = vi_link_number AND
        RB_LIST_OF_BUSES.list_id = LIST_OF_BUSES.list_id;


V_PRICE := get_material_cost(vi_link_number,vi_typeid);

INSERT INTO ARCH_RB_MATERIALS_CC_TOTAL
        (COST_CENTRE,
        TOTAL_COST,
        ARCH_RB_MASTERLIST_ID

        )
        SELECT
            COST_CENTRE AS "CC",
            SUM(TOTAL_COST) AS "TOTAL COST",
            arch_id
        FROM
            TEMP_MATERIALS_LIST
        GROUP BY
            COST_CENTRE;


     vo_ret_val := 0;
    RETURN 0;




    EXCEPTION
        WHEN no_data_found THEN
            ROLLBACK;
		    vo_ret_val := -1;
		    RETURN -1;
        WHEN others THEN
            ROLLBACK;
            vo_ret_val := -2;
            RETURN -2;
END ARCHIVE_RB;


