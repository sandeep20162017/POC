You are MS SQL expert.
Yur tasks are
1. Based on the follwoing real table schema create schema for #temptables
2. Update SQL query below and use new table schema created in task (1) above

Task 1 :
USE [CES]
GO

/****** Object:  Table [SBCES].[ArchVehEmployeeLabour]    Script Date: 3/31/2025 3:29:43 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [SBCES].[ArchVehEmployeeLabour](
	[LabourDefn] [varchar](50) NULL,
	[DateEntered] [datetime] NULL,
	[LinkNumber] [varchar](25) NULL,
	[TypeId] [varchar](5) NULL,
	[Costcentre] [varchar](5) NULL,
	[Task] [varchar](50) NULL,
	[LabourType] [varchar](5) NULL,
	[Usage] [varchar](25) NULL,
	[HrsReqd] [varchar](25) NULL,
	[AdjHrs] [varchar](25) NULL,
	[TimeAddition] [numeric](18, 2) NULL,
	[ArchVehicleListId] [int] NOT NULL
) ON [PRIMARY]
GO

ALTER TABLE [SBCES].[ArchVehEmployeeLabour]  WITH CHECK ADD  CONSTRAINT [FK_ArchVehEmployeeLabour] FOREIGN KEY([ArchVehicleListId])
REFERENCES [SBCES].[ArchVehicleList] ([ArchVehicleListId])
GO

ALTER TABLE [SBCES].[ArchVehEmployeeLabour] CHECK CONSTRAINT [FK_ArchVehEmployeeLabour]
GO



USE [CES]
GO

/****** Object:  Table [SBCES].[ArchRbScPartsUsed]    Script Date: 3/31/2025 3:29:12 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [SBCES].[ArchRbScPartsUsed](
	[MmsStockCode] [varchar](30) NULL,
	[DateEntered] [datetime] NULL,
	[RebPartCost] [numeric](18, 2) NULL,
	[UserEntered] [varchar](50) NULL,
	[MmsCost] [numeric](18, 2) NULL,
	[OemCost] [numeric](18, 2) NULL,
	[MmsRebuiltCode] [varchar](30) NULL,
	[CostCentre] [varchar](4) NULL,
	[QtyReqd] [varchar](10) NULL,
	[PercentUsage] [varchar](10) NULL,
	[LinkCode] [varchar](30) NULL,
	[RebuiltPart] [varchar](1) NULL,
	[LinkType] [varchar](3) NULL,
	[Corecost] [numeric](18, 2) NULL,
	[ArchRbMasterlistId] [int] NOT NULL,
	[TotalCost] [numeric](18, 2) NULL,
	[ScKeyword] [varchar](50) NULL,
	[ScDescription] [varchar](500) NULL
) ON [PRIMARY]
GO

ALTER TABLE [SBCES].[ArchRbScPartsUsed]  WITH CHECK ADD  CONSTRAINT [FK_ArchScPartsUsed] FOREIGN KEY([ArchRbMasterlistId])
REFERENCES [SBCES].[ArchRbMasterlist] ([ArchRbMasterlistId])
GO

ALTER TABLE [SBCES].[ArchRbScPartsUsed] CHECK CONSTRAINT [FK_ArchScPartsUsed]
GO



USE [CES]
GO

/****** Object:  Table [SBCES].[ArchRbNscPartsUsed]    Script Date: 3/31/2025 3:28:47 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [SBCES].[ArchRbNscPartsUsed](
	[OrigSuppNum] [varchar](50) NULL,
	[OrigSupplierName] [varchar](50) NULL,
	[CostCentre] [varchar](4) NULL,
	[QtyReqd] [varchar](10) NULL,
	[PercentUsage] [varchar](10) NULL,
	[DateEntered] [datetime] NULL,
	[EnteredBy] [varchar](25) NULL,
	[LinkCode] [varchar](30) NULL,
	[Cost] [numeric](18, 2) NULL,
	[LinkType] [varchar](3) NULL,
	[Corecost] [numeric](18, 2) NULL,
	[ArchRbMasterlistId] [int] NOT NULL,
	[TotalCost] [numeric](18, 2) NULL
) ON [PRIMARY]
GO

ALTER TABLE [SBCES].[ArchRbNscPartsUsed]  WITH CHECK ADD  CONSTRAINT [FK_ArchNscPartsUsed] FOREIGN KEY([ArchRbMasterlistId])
REFERENCES [SBCES].[ArchRbMasterlist] ([ArchRbMasterlistId])
GO

ALTER TABLE [SBCES].[ArchRbNscPartsUsed] CHECK CONSTRAINT [FK_ArchNscPartsUsed]
GO



USE [CES]
GO

/****** Object:  Table [SBCES].[ArchRbMaterialsCcTotal]    Script Date: 3/31/2025 3:28:09 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [SBCES].[ArchRbMaterialsCcTotal](
	[CostCentre] [varchar](5) NULL,
	[TotalCost] [numeric](18, 2) NULL,
	[ArchRbMasterlistId] [int] NOT NULL
) ON [PRIMARY]
GO

ALTER TABLE [SBCES].[ArchRbMaterialsCcTotal]  WITH CHECK ADD  CONSTRAINT [FK_ArchRbMaterialsCcTotals] FOREIGN KEY([ArchRbMasterlistId])
REFERENCES [SBCES].[ArchRbMasterlist] ([ArchRbMasterlistId])
GO

ALTER TABLE [SBCES].[ArchRbMaterialsCcTotal] CHECK CONSTRAINT [FK_ArchRbMaterialsCcTotals]
GO



USE [CES]
GO

/****** Object:  Table [SBCES].[ArchRbMasterlist]    Script Date: 3/31/2025 3:27:43 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [SBCES].[ArchRbMasterlist](
	[ArchRbMasterlistId] [int] NOT NULL,
	[MmsStockCode] [varchar](30) NULL,
	[ItemRefNumber] [varchar](16) NULL,
	[DetailedDesc] [varchar](250) NULL,
	[Keyword] [varchar](250) NULL,
	[CorePartNum] [varchar](30) NULL,
	[RebuiltStockNum] [varchar](30) NULL,
	[CoreCharge] [varchar](25) NULL,
	[JobNumber] [varchar](25) NULL,
	[DateEntered] [datetime] NULL,
	[EnteredBy] [varchar](50) NULL,
	[EstimatedCost] [numeric](20, 2) NOT NULL,
	[SopNumber] [varchar](25) NULL,
	[LabourCost] [numeric](20, 2) NOT NULL,
	[LabourOverheadAmount] [numeric](20, 2) NOT NULL,
	[LabourTotal] [numeric](20, 2) NOT NULL,
	[MaterialsTotal] [numeric](20, 2) NOT NULL,
	[TotalRebuiltPartCost] [numeric](20, 2) NOT NULL,
	[TaxTotal] [numeric](20, 2) NULL,
	[TotalCostTax] [numeric](20, 2) NULL,
 CONSTRAINT [PK_ArchRbMasterlist] PRIMARY KEY CLUSTERED 
(
	[ArchRbMasterlistId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UK_ArchRbMasterlist] UNIQUE NONCLUSTERED 
(
	[RebuiltStockNum] ASC,
	[DateEntered] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [SBCES].[ArchRbMasterlist]  WITH CHECK ADD  CONSTRAINT [FK_ArchRbMasterlist] FOREIGN KEY([RebuiltStockNum])
REFERENCES [SBCES].[RbMasterlist] ([RebuiltStockNum])
GO

ALTER TABLE [SBCES].[ArchRbMasterlist] CHECK CONSTRAINT [FK_ArchRbMasterlist]
GO



USE [CES]
GO

/****** Object:  Table [SBCES].[ArchRbListBuses]    Script Date: 3/31/2025 3:27:18 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [SBCES].[ArchRbListBuses](
	[BusDescription] [varchar](500) NULL,
	[ArchRbMasterlistId] [int] NOT NULL
) ON [PRIMARY]
GO

ALTER TABLE [SBCES].[ArchRbListBuses]  WITH CHECK ADD  CONSTRAINT [FK_ArchRbListBuses] FOREIGN KEY([ArchRbMasterlistId])
REFERENCES [SBCES].[ArchRbMasterlist] ([ArchRbMasterlistId])
GO

ALTER TABLE [SBCES].[ArchRbListBuses] CHECK CONSTRAINT [FK_ArchRbListBuses]
GO



USE [CES]
GO

/****** Object:  Table [SBCES].[ArchRbLabourCcTotal]    Script Date: 3/31/2025 3:26:56 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [SBCES].[ArchRbLabourCcTotal](
	[CostCentre] [varchar](5) NULL,
	[ArchRbMasterlistId] [int] NOT NULL,
	[TotalHours] [varchar](25) NULL
) ON [PRIMARY]
GO

ALTER TABLE [SBCES].[ArchRbLabourCcTotal]  WITH CHECK ADD  CONSTRAINT [FK_ArchRbLabourCcTotal] FOREIGN KEY([ArchRbMasterlistId])
REFERENCES [SBCES].[ArchRbMasterlist] ([ArchRbMasterlistId])
GO

ALTER TABLE [SBCES].[ArchRbLabourCcTotal] CHECK CONSTRAINT [FK_ArchRbLabourCcTotal]
GO



USE [CES]
GO

/****** Object:  Table [SBCES].[ArchRbEmployeeLabour]    Script Date: 3/31/2025 3:26:26 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [SBCES].[ArchRbEmployeeLabour](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[LabourDefn] [varchar](50) NULL,
	[DateEntered] [datetime] NULL,
	[LinkNumber] [varchar](25) NULL,
	[TypeId] [varchar](5) NULL,
	[Costcentre] [varchar](5) NULL,
	[Task] [varchar](50) NULL,
	[LabourType] [varchar](5) NULL,
	[Usage] [varchar](25) NULL,
	[HrsReqd] [varchar](25) NULL,
	[AdjHrs] [varchar](25) NULL,
	[TimeAddition] [numeric](18, 2) NULL,
	[ArchRbMasterlistId] [int] NOT NULL,
 CONSTRAINT [PK_ArchRbEmployeeLabour] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [SBCES].[ArchRbEmployeeLabour]  WITH CHECK ADD  CONSTRAINT [FK_ArchEmployeeLabour] FOREIGN KEY([ArchRbMasterlistId])
REFERENCES [SBCES].[ArchRbMasterlist] ([ArchRbMasterlistId])
GO

ALTER TABLE [SBCES].[ArchRbEmployeeLabour] CHECK CONSTRAINT [FK_ArchEmployeeLabour]
GO



USE [CES]
GO

/****** Object:  Table [SBCES].[ArchRbMasterlist]    Script Date: 3/31/2025 3:06:10 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [SBCES].[ArchRbMasterlist](
	[ArchRbMasterlistId] [int] NOT NULL,
	[MmsStockCode] [varchar](30) NULL,
	[ItemRefNumber] [varchar](16) NULL,
	[DetailedDesc] [varchar](250) NULL,
	[Keyword] [varchar](250) NULL,
	[CorePartNum] [varchar](30) NULL,
	[RebuiltStockNum] [varchar](30) NULL,
	[CoreCharge] [varchar](25) NULL,
	[JobNumber] [varchar](25) NULL,
	[DateEntered] [datetime] NULL,
	[EnteredBy] [varchar](50) NULL,
	[EstimatedCost] [numeric](20, 2) NOT NULL,
	[SopNumber] [varchar](25) NULL,
	[LabourCost] [numeric](20, 2) NOT NULL,
	[LabourOverheadAmount] [numeric](20, 2) NOT NULL,
	[LabourTotal] [numeric](20, 2) NOT NULL,
	[MaterialsTotal] [numeric](20, 2) NOT NULL,
	[TotalRebuiltPartCost] [numeric](20, 2) NOT NULL,
	[TaxTotal] [numeric](20, 2) NULL,
	[TotalCostTax] [numeric](20, 2) NULL,
 CONSTRAINT [PK_ArchRbMasterlist] PRIMARY KEY CLUSTERED 
(
	[ArchRbMasterlistId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UK_ArchRbMasterlist] UNIQUE NONCLUSTERED 
(
	[RebuiltStockNum] ASC,
	[DateEntered] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [SBCES].[ArchRbMasterlist]  WITH CHECK ADD  CONSTRAINT [FK_ArchRbMasterlist] FOREIGN KEY([RebuiltStockNum])
REFERENCES [SBCES].[RbMasterlist] ([RebuiltStockNum])
GO

ALTER TABLE [SBCES].[ArchRbMasterlist] CHECK CONSTRAINT [FK_ArchRbMasterlist]
GO



Use Temptables created in Task 1 and update the below script (Task 2) :

-- File: MainMigrationScript.sql
USE [CES]
GO

-- File 1: CreateTempTables.sql  
USE [CES]  
GO  

-- Create all ARCH temp tables  
CREATE TABLE #ArchRbMasterlist (  
    ArchRbMasterlistId INT IDENTITY(1,1) PRIMARY KEY,  
    MmsStockCode VARCHAR(50),  
    ItemRefNumber VARCHAR(50),  
    DetailedDesc VARCHAR(MAX),  
    Keyword VARCHAR(100),  
    CorePartNum VARCHAR(50),  
    RebuiltStockNum VARCHAR(50),  
    CoreCharge DECIMAL(18,2),  
    JobNumber VARCHAR(50),  
    EstimatedCost DECIMAL(18,2),  
    SopNumber VARCHAR(50),  
    DateArchived DATETIME,  
    ArchivedBy VARCHAR(50),  
    LabourCost DECIMAL(18,2),  
    LabourOverheadAmount DECIMAL(18,2),  
    LabourTotal DECIMAL(18,2),  
    MaterialsTotal DECIMAL(18,2),  
    TotalRebuiltPartCost DECIMAL(18,2),  
    TaxTotal DECIMAL(18,2),  
    TotalCostTax DECIMAL(18,2)  
);  

CREATE TABLE #ArchRbEmployeeLabour (  
    LabourDefn VARCHAR(100),  
    DateEntered DATETIME,  
    LinkNumber VARCHAR(50),  
    TypeId VARCHAR(50),  
    CostCentre VARCHAR(50),  
    Task VARCHAR(100),  
    LabourType VARCHAR(50),  
    [Usage] DECIMAL(5,2),  
    HrsReqd VARCHAR(10),  
    AdjHrs VARCHAR(10),  
    TimeAddition VARCHAR(10),  
    ArchRbMasterlistId INT  
);  

CREATE TABLE #ArchRbScPartsUsed (  
    MmsStockCode VARCHAR(50),  
    DateEntered DATETIME,  
    RebPartCost DECIMAL(18,2),  
    UserEntered VARCHAR(50),  
    MmsCost DECIMAL(18,2),  
    OemCost DECIMAL(18,2),  
    MmsRebuiltCode VARCHAR(50),  
    CostCentre VARCHAR(50),  
    QtyReqd DECIMAL(18,2),  
    PercentUsage DECIMAL(5,2),  
    LinkCode VARCHAR(50),  
    RebuiltPart CHAR(1),  
    LinkType VARCHAR(50),  
    CoreCost DECIMAL(18,2),  
    ArchRbMasterlistId INT,  
    TotalCost DECIMAL(18,2),  
    ScKeyword VARCHAR(100),  
    ScDescription VARCHAR(MAX)  
);  

CREATE TABLE #ArchRbNscPartsUsed (  
    OrigSuppNum VARCHAR(50),  
    OrigSupplierName VARCHAR(100),  
    CostCentre VARCHAR(50),  
    QtyReqd DECIMAL(18,2),  
    PercentUsage DECIMAL(5,2),  
    DateEntered DATETIME,  
    EnteredBy VARCHAR(50),  
    LinkCode VARCHAR(50),  
    Cost DECIMAL(18,2),  
    LinkType VARCHAR(50),  
    CoreCost DECIMAL(18,2),  
    ArchRbMasterlistId INT,  
    TotalCost DECIMAL(18,2)  
);  

CREATE TABLE #ArchRbLabourCcTotal (  
    CostCentre VARCHAR(50),  
    TotalHours DECIMAL(18,2),  
    ArchRbMasterlistId INT  
);  

CREATE TABLE #ArchRbMaterialsCcTotal (  
    CostCentre VARCHAR(50),  
    TotalCost DECIMAL(18,2),  
    ArchRbMasterlistId INT  
);  

CREATE TABLE #ArchRbListBuses (  
    BusDescription VARCHAR(MAX),  
    ArchRbMasterlistId INT  
);  
---===========================================================
DECLARE @ViRebuiltStockNum VARCHAR(25) = '035434',
        @ViLinkNumber VARCHAR(25) = '035434',
        @ViTypeId VARCHAR(25) = 'RB',
        @ViUsername VARCHAR(50) = 'System',
        @ArchId INT;

-- Output Parameters
DECLARE @ViLabourCost DECIMAL(18,2),
        @ViLabourOverhead DECIMAL(18,2),
        @ViMaterialsTotal DECIMAL(18,2),
        @ViTaxTotal DECIMAL(18,2),
        @ViTotalCostTax DECIMAL(18,2);

BEGIN TRY
    --BEGIN TRANSACTION;

    -- Step 1: Calculate Costs
    EXEC SBCES.CalculateTotalLabourAndMaterialsPartsInRB
        @RebuiltPartNum = @ViLinkNumber,
        @TotalLabourCost = @ViLabourCost OUTPUT,
        @TotalLabourOverHeadCost = @ViLabourOverhead OUTPUT,
        @TotalMaterialCost = @ViMaterialsTotal OUTPUT,
        @TaxTotal = @ViTaxTotal OUTPUT,
        @TotalRebuiltPartCostWithTax = @ViTotalCostTax OUTPUT;

    -- Step 2: Insert into Masterlist
    INSERT INTO #ArchRbMasterlist (
        MmsStockCode, ItemRefNumber, DetailedDesc, Keyword,
        CorePartNum, RebuiltStockNum, CoreCharge, JobNumber,
        EstimatedCost, SopNumber, DateArchived, ArchivedBy,
        LabourCost, LabourOverheadAmount, LabourTotal,
        MaterialsTotal, TotalRebuiltPartCost, TaxTotal, TotalCostTax
    )
    SELECT
        RM.MmsStockCode,
        RM.ItemRefNumber,
        RM.DetailedDesc,
        RM.Keyword,
        RM.CorePartNum,
        RM.RebuiltStockNum,
        RM.CoreCharge,
        RM.JobNumber,
        RM.EstimatedCost,
        RM.SopNumber,
        GETDATE(),
        @ViUsername,
        @ViLabourCost,
        @ViLabourOverhead,
        @ViLabourCost + @ViLabourOverhead,
        @ViMaterialsTotal,
        @ViLabourCost + @ViMaterialsTotal,
        @ViTaxTotal,
        @ViTotalCostTax
    FROM SBCES.RbMasterlist RM
    WHERE RM.RebuiltStockNum = @ViRebuiltStockNum;

    SET @ArchId = SCOPE_IDENTITY();
    SELECT * FROM #ArchRbMasterlist;

    -- Step 3: Employee Labour
    INSERT INTO #ArchRbEmployeeLabour (
        LabourDefn, DateEntered, LinkNumber, TypeId,
        CostCentre, Task, LabourType, [Usage],
        HrsReqd, AdjHrs, TimeAddition, ArchRbMasterlistId
    )
    SELECT
        EL.LabourDefn,
        EL.DateEntered,
        EL.LinkNumber,
        EL.TypeId,
        EL.CostCentre,
        EL.Task,
        EL.LabourType,
        TRY_CAST(EL.[Usage] AS DECIMAL(5,2)),
        EL.HrsReqd,
        EL.AdjHrs,
        EL.TimeAddition,
        @ArchId
    FROM SBCES.EmployeeLabour EL
    WHERE EL.LinkNumber = @ViLinkNumber
        AND EL.TypeId = @ViTypeId;

    SELECT * FROM #ArchRbEmployeeLabour;

    -- Step 4: SC Parts Used (Rebuilt)
    INSERT INTO #ArchRbScPartsUsed (
        MmsStockCode, DateEntered, RebPartCost, UserEntered,
        MmsCost, OemCost, MmsRebuiltCode, CostCentre,
        QtyReqd, PercentUsage, LinkCode, RebuiltPart,
        LinkType, CoreCost, ArchRbMasterlistId, TotalCost,
        ScKeyword, ScDescription
    )
    SELECT
        UPPER(SU.MmsStockCode),
        SU.DateEntered,
        ISNULL(A.RbUnitCost, 0),
        UPPER(SU.EnteredBy),
        ISNULL(SU.MmsCost, 0),
        ISNULL(SU.OemCost, 0),
        UPPER(SU.MmsRebuiltCode),
        UPPER(SU.CostCentre),
        TRY_CAST(SU.QtyReqd AS DECIMAL(18,2)),
        TRY_CAST(REPLACE(SU.PercentUsage, ',', '.') AS DECIMAL(5,2)),
        @ViLinkNumber,
        'Y',
        'RB',
        SU.CoreCost,
        @ArchId,
        ISNULL(A.RbCost, 0),
        UPPER(RM.Keyword),
        UPPER(RM.DetailedDesc)
    FROM SBCES.ScPartsUsed SU
    LEFT JOIN SBCES.RbMasterlist RM 
        ON RM.RebuiltStockNum = SU.MmsRebuiltCode
    LEFT JOIN (
        SELECT 
            RbReference,
           -- ROUND(SUM(TotalCost), 2) AS RbCost,
			SUM(TRY_CAST(TotalCost AS DECIMAL(18,2))) AS RbCost,
			SUM(TRY_CAST(TotalUnitCost AS DECIMAL(18,2))) AS RbUnitCost
           -- ROUND(SUM(TotalUnitCost), 2) AS RbUnitCost
        FROM SBCES.TempMaterialsList
        GROUP BY RbReference
    ) A ON A.RbReference = SU.MmsRebuiltCode
    WHERE SU.LinkCode = @ViLinkNumber
        AND SU.RebuiltPart = 'Y'
        AND SU.LinkType = @ViTypeId;

    SELECT * FROM #ArchRbScPartsUsed WHERE RebuiltPart = 'Y';

    -- Step 5: SC Parts Used (Non-Rebuilt)
    INSERT INTO #ArchRbScPartsUsed (
        MmsStockCode, DateEntered, RebPartCost, UserEntered,
        MmsCost, OemCost, MmsRebuiltCode, CostCentre,
        QtyReqd, PercentUsage, LinkCode, RebuiltPart,
        LinkType, CoreCost, ArchRbMasterlistId, TotalCost,
        ScKeyword, ScDescription
    )
    SELECT
        A.MmsStockCode,
        A.DateEntered,
        A.RebPartCost,
        A.EnteredBy,
        A.MmsCost,
        A.OemCost,
        A.MmsRebuiltCode,
        A.CostCentre,
        TRY_CAST(A.QtyReqd AS DECIMAL(18,2)),
        TRY_CAST(REPLACE(A.PercentUsage, ',', '.') AS DECIMAL(5,2)),
        @ViLinkNumber,
        'N',
        @ViTypeId,
        SBCES.FinalCost(
            TRY_CAST(REPLACE(A.PercentUsage, ',', '.') AS DECIMAL(5,2)),
            TRY_CAST(A.QtyReqd AS DECIMAL(18,2)),
            A.CoreCost, 
            0
        ),
        @ArchId,
        A.MmsCost * TRY_CAST(A.QtyReqd AS DECIMAL(18,2)) 
            * (TRY_CAST(REPLACE(ISNULL(A.PercentUsage, '0'), ',', '.') AS DECIMAL(5,2))/100),
        ISNULL(B.PartType, ''),
        ISNULL(B.DetailedDesc, '')
    FROM SBCES.ScPartsUsed A
    LEFT JOIN SBCES.StockCodedParts B 
        ON B.MmsStockCode = A.MmsStockCode
    WHERE A.LinkCode = @ViLinkNumber
        AND A.LinkType = @ViTypeId
        AND A.RebuiltPart = 'N';

    SELECT * FROM #ArchRbScPartsUsed WHERE RebuiltPart = 'N';

    -- Step 6: NSC Parts Used
    INSERT INTO #ArchRbNscPartsUsed (
        OrigSuppNum, OrigSupplierName, CostCentre,
        QtyReqd, PercentUsage, DateEntered, EnteredBy,
        LinkCode, Cost, LinkType, CoreCost,
        ArchRbMasterlistId, TotalCost
    )
    SELECT
        NP.OrigSuppNum,
        NP.OrigSupplierName,
        NP.CostCentre,
        TRY_CAST(NP.QtyReqd AS DECIMAL(18,2)),
        TRY_CAST(REPLACE(NP.PercentUsage, ',', '.') AS DECIMAL(5,2)),
        NP.DateEntered,
        NP.EnteredBy,
        NP.LinkCode,
        NP.Cost,
        NP.LinkType,
        SBCES.FinalCost(
            TRY_CAST(REPLACE(NP.PercentUsage, ',', '.') AS DECIMAL(5,2)),
            TRY_CAST(NP.QtyReqd AS DECIMAL(18,2)),
            NP.CoreCost, 
            0
        ),
        @ArchId,
        NP.Cost * TRY_CAST(NP.QtyReqd AS DECIMAL(18,2)) 
            * (TRY_CAST(REPLACE(ISNULL(NP.PercentUsage, '0'), ',', '.') AS DECIMAL(5,2))/100)
    FROM SBCES.NscPartsUsed NP
    WHERE NP.LinkCode = @ViLinkNumber
        AND NP.LinkType = @ViTypeId;

    SELECT * FROM #ArchRbNscPartsUsed;

    -- Step 7: Labour CC Total
    INSERT INTO #ArchRbLabourCcTotal (
        CostCentre, TotalHours, ArchRbMasterlistId
    )
    SELECT
        CC,
        SUM(TRY_CAST(ExtendedTime AS DECIMAL(18,2))),
        @ArchId
    FROM SBCES.TempLabourList
    GROUP BY CC;

    SELECT * FROM #ArchRbLabourCcTotal;

    -- Step 8: Materials CC Total
    INSERT INTO #ArchRbMaterialsCcTotal (
        CostCentre, TotalCost, ArchRbMasterlistId
    )
    SELECT
        CostCentre,
        SUM(TRY_CAST(TotalCost AS DECIMAL(18,2))),
        @ArchId
    FROM SBCES.TempMaterialsList
    GROUP BY CostCentre;

    SELECT * FROM #ArchRbMaterialsCcTotal;

    -- Step 9: List Buses
    INSERT INTO #ArchRbListBuses (
        BusDescription, ArchRbMasterlistId
    )
    SELECT
        LB.Description,
        @ArchId
    FROM SBCES.RbListOfBuses RB
    INNER JOIN SBCES.ListOfBuses LB
        ON RB.ListId = LB.ListId
    WHERE RB.RebuiltStockNum = @ViLinkNumber;

    SELECT * FROM #ArchRbListBuses;

 --   COMMIT TRANSACTION;
END TRY
BEGIN CATCH
    ROLLBACK TRANSACTION;
    SELECT 
        ERROR_NUMBER() AS ErrorNumber,
        ERROR_MESSAGE() AS ErrorMessage;
END CATCH

-- Cleanup
DROP TABLE IF EXISTS #ArchRbMasterlist, #ArchRbEmployeeLabour,
                  #ArchRbScPartsUsed, #ArchRbNscPartsUsed,
                  #ArchRbLabourCcTotal, #ArchRbMaterialsCcTotal,
                  #ArchRbListBuses;
