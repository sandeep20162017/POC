Analysis of RB Part Addition in VB6 Code

1. Forms Involved:

frmAddRBPToEstimate: Handles adding/updating RB parts in an estimate.

frmAddRebuiltPart: Manages RB part metadata (e.g., stock codes, descriptions).

frmRebuiltPartsMain: Displays RB part details (materials, labor, costs).

frmRebuiltPartsAddMaterials: Lists materials (RB/SC/NSC parts) in an RB estimate.

frmRebuiltPartOptions: Provides options for RB part actions (e.g., copy, load).

frmTypeofPart: Selects part type when adding to an estimate.

2. SQL Calls:

Retrieval:

CES_INQUIRY.RETRIEVE_RBP_USED: Checks for existing RB parts in an estimate.

CES_INQUIRY.RETRIEVE_EST_TO_PROPAGATE_RB: Finds estimates affected by RB part changes.

CES_INQUIRY.RETRIEVE_RB: Fetches RB part details (e.g., stock code, keyword).

Modification:

CES_UPDATE.ADD_RBP_USED: Adds a new RB part to an estimate.

CES_UPDATE.UPDATE_RBP_USED: Updates an existing RB part.

CES_UPDATE.AUDIT_INSERT_MODIFY_HISTORY: Logs audit trails for changes.

3. Key Business Rules:

No Duplicates:
Rule: An RB part cannot be added multiple times to the same estimate.
Implementation: frmAddRBPToEstimate.cmdAdd_Click checks for duplicates via RETRIEVE_RBP_USED.

Cycle Prevention:
Rule: RB parts cannot form cyclic dependencies (e.g., RB-A → RB-B → RB-A).
Implementation: frmAddRBPToEstimate.ResolveRebuiltPart uses clsGraph to detect cycles in RB part relationships.

Change Propagation:
Rule: Modifying an RB part updates all estimates containing it.
Implementation: RETRIEVE_EST_TO_PROPAGATE_RB identifies dependent estimates, and audit logs are propagated.

4. Workflow for Adding RB Parts:

Validation: Check for duplicates and valid inputs (quantity, % usage).

Cycle Check: Use graph traversal to ensure no cyclic dependencies.

Database Insert/Update: Add/update the RB part via ADD_RBP_USED/UPDATE_RBP_USED.

Audit Logging: Record changes in AUDIT_MODIFY_HISTORY.

Propagation: Update all affected estimates if the RB part is nested.
