@model BCES.Models.Vehicle.VehicleViewModel

<div class="popup-container">
    <div class="popup-header">
        <div class="popup-title">@(Model.VehicleListId == 0 ? "Add New Vehicle Estimate" : $"Estimate #{Model.VehicleListId}")</div>
        <div class="tab-actions">
            <button id="btnEdit" class="k-button" style="@(Model.VehicleListId == 0 ? "display:none;" : "")">
                <span class="k-icon k-i-edit"></span> Edit
            </button>
            <button id="btnSave" class="k-button k-primary">
                <span class="k-icon k-i-save"></span> Save
            </button>
        </div>
    </div>

    <div class="form-container">
        <form id="vehicleDetailForm">
            @Html.HiddenFor(m => m.VehicleListId)

            <!-- Vehicle Information Section -->
            <div class="section-title">Vehicle Information</div>
            
            <!-- Row 1: Estimate #, Vehicle Series, Quantity -->
            <div class="form-row">
                <div class="form-group">
                    @Html.LabelFor(m => m.VehicleListId, "Estimate #", new { @class = "form-label" })
                    @(Html.Kendo().TextBoxFor(m => m.VehicleListId)
                        .Value(Model.VehicleListId == 0 ? "(System Generated)" : Model.VehicleListId.ToString())
                        .HtmlAttributes(new { 
                            @readonly = "readonly", 
                            @class = "k-textbox read-only",
                            style = "width:100%; padding: 4px 6px; height: 28px;" 
                        }))
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(m => m.VehSeriesCode, "Vehicle Series", new { @class = "form-label required-label" })
                    @Html.EditorFor(m => m.VehSeriesCode, "ComboBoxEditor", new
                    {
                        htmlAttributes = new
                        {
                            required = "required",
                            @class = "vehicle-field",
                            style = "width:100%; height: 28px;"
                        }
                    })
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(m => m.NumOfVehicles, "Quantity", new { @class = "form-label required-label" })
                    @(Html.Kendo().NumericTextBoxFor(m => m.NumOfVehicles)
                        .Format("0")
                        .Min(1)
                        .HtmlAttributes(new
                        {
                            required = "required",
                            @class = "vehicle-field",
                            style = "width:100%; height: 28px;"
                        }))
                </div>
            </div>
            
            <!-- Row 2: Description, SOP Number -->
            <div class="form-row">
                <div class="form-group double-width">
                    @Html.LabelFor(m => m.ProjDesc, "Description", new { @class = "form-label required-label" })
                    @Html.EditorFor(m => m.ProjDesc, "ComboBoxEditor", new
                    {
                        htmlAttributes = new
                        {
                            required = "required",
                            @class = "vehicle-field",
                            style = "width:100%; height: 28px;"
                        }
                    })
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(m => m.Sopnumber, "SOP Number", new { @class = "form-label" })
                    @(Html.Kendo().TextBoxFor(m => m.Sopnumber)
                        .HtmlAttributes(new
                        {
                            @class = "vehicle-field",
                            style = "width:100%; padding: 4px 6px; height: 28px;"
                        }))
                </div>
            </div>
            
            <!-- Specifications Section -->
            <div class="section-title">Specifications</div>
            
            <!-- Row 3: Make, Model, Year -->
            <div class="form-row">
                <div class="form-group">
                    @Html.LabelFor(m => m.Make, "Make", new { @class = "form-label" })
                    @Html.EditorFor(m => m.Make, "ComboBoxEditor", new
                    {
                        htmlAttributes = new
                        {
                            @class = "vehicle-field",
                            style = "width:100%; height: 28px;"
                        }
                    })
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(m => m.VehModel, "Model", new { @class = "form-label" })
                    @Html.EditorFor(m => m.VehModel, "ComboBoxEditor", new
                    {
                        htmlAttributes = new
                        {
                            @class = "vehicle-field",
                            style = "width:100%; height: 28px;"
                        }
                    })
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(m => m.Year, "Year", new { @class = "form-label" })
                    @(Html.Kendo().NumericTextBoxFor(m => m.Year)
                        .Format("0")
                        .Min(1900)
                        .Max(DateTime.Now.Year + 1)
                        .HtmlAttributes(new
                        {
                            @class = "vehicle-field",
                            style = "width:100%; height: 28px;"
                        }))
                </div>
            </div>
            
            <!-- Row 4: Engine, Transmission, Differential -->
            <div class="form-row">
                <div class="form-group">
                    @Html.LabelFor(m => m.Engine, "Engine", new { @class = "form-label" })
                    @Html.EditorFor(m => m.Engine, "ComboBoxEditor", new
                    {
                        htmlAttributes = new
                        {
                            @class = "vehicle-field",
                            style = "width:100%; height: 28px;"
                        }
                    })
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(m => m.Transmission, "Transmission", new { @class = "form-label" })
                    @Html.EditorFor(m => m.Transmission, "ComboBoxEditor", new
                    {
                        htmlAttributes = new
                        {
                            @class = "vehicle-field",
                            style = "width:100%; height: 28px;"
                        }
                    })
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(m => m.Differential, "Differential", new { @class = "form-label" })
                    @Html.EditorFor(m => m.Differential, "ComboBoxEditor", new
                    {
                        htmlAttributes = new
                        {
                            @class = "vehicle-field",
                            style = "width:100%; height: 28px;"
                        }
                    })
                </div>
            </div>
            
            <!-- Audit Section -->
            <div class="section-title">Audit Information</div>
            
            <!-- Row 5: Last Modified By, Last Modified Date -->
            <div class="form-row">
                <div class="form-group">
                    @Html.LabelFor(m => m.ModifiedLastBy, "Last Modified By", new { @class = "form-label" })
                    @(Html.Kendo().TextBoxFor(m => m.ModifiedLastBy)
                        .HtmlAttributes(new { 
                            @readonly = "readonly", 
                            @class = "k-textbox read-only",
                            style = "width:100%; padding: 4px 6px; height: 28px;" 
                        }))
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(m => m.ModifiedLastDate, "Last Modified Date", new { @class = "form-label" })
                    @(Html.Kendo().TextBoxFor(m => m.ModifiedLastDate)
                        .HtmlAttributes(new { 
                            @readonly = "readonly", 
                            @class = "k-textbox read-only",
                            style = "width:100%; padding: 4px 6px; height: 28px;" 
                        }))
                </div>
            </div>
        </form>
    </div>
</div>

<style>
    /* BASE STYLES - OPTIMIZED FOR 1100x600 */
    .popup-container {
        width: 1100px;
        height: 600px;
        background: white;
        border-radius: 4px;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin: 0 auto;
        display: flex;
        flex-direction: column;
    }
    
    /* HEADER - ULTRA COMPACT */
    .popup-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 6px 12px;
        background: linear-gradient(to right, #2c3e50, #4a6491);
        color: white;
        flex-shrink: 0;
        height: 38px;
    }
    
    .popup-title {
        font-size: 16px;
        font-weight: 600;
        letter-spacing: 0.1px;
    }
    
    .tab-actions {
        display: flex;
        gap: 6px;
    }
    
    .k-button {
        border-radius: 3px;
        font-weight: 500;
        padding: 4px 8px;
        display: flex;
        align-items: center;
        gap: 4px;
        background-color: #f0f0f0;
        border: 1px solid #ccc;
        color: #333;
        font-size: 12px;
        height: 26px;
    }
    
    .k-button:hover {
        transform: none;
        box-shadow: 0 1px 2px rgba(0,0,0,0.1);
    }
    
    .k-button.k-primary {
        background: #3f51b5;
        border-color: #3f51b5;
        color: white;
    }
    
    /* FORM CONTAINER - FILL SPACE WITHOUT SCROLL */
    .form-container {
        padding: 8px 15px;
        overflow: hidden;
        flex: 1;
        display: flex;
        flex-direction: column;
    }
    
    /* FORM ROWS - TIGHT SPACING */
    .form-row {
        display: flex;
        gap: 10px;
        margin-bottom: 8px;
        align-items: flex-start;
    }
    
    .form-group {
        display: flex;
        flex-direction: column;
        flex: 1;
    }
    
    .double-width {
        flex: 1.8;
    }
    
    /* FORM ELEMENTS - COMPACT & EFFICIENT */
    .form-label {
        display: block;
        margin-bottom: 3px;
        font-weight: 600;
        color: #2c3e50;
        font-size: 11px;
    }
    
    .required-label::after {
        content: " *";
        color: #e74c3c;
        font-size: 11px;
    }
    
    .k-textbox, .k-combobox, .k-numerictextbox {
        width: 100%;
    }
    
    /* INPUT CONTROLS - MINIMAL HEIGHT */
    .k-textbox, .k-numerictextbox .k-numeric-wrap, 
    .k-combobox .k-dropdown-wrap {
        border: 1px solid #d1d5db;
        border-radius: 3px;
        padding: 4px 8px;
        background: #fff;
        min-height: 28px;
        font-size: 12px;
    }
    
    .k-textbox:focus, 
    .k-numerictextbox .k-numeric-wrap:focus-within, 
    .k-combobox .k-dropdown-wrap:focus-within {
        border-color: #3498db;
        box-shadow: 0 0 0 1px rgba(52, 152, 219, 0.2);
    }
    
    /* READONLY FIELDS */
    .read-only, .read-only .k-dropdown-wrap, 
    .read-only .k-numeric-wrap, 
    .read-only .k-input {
        background-color: #f8fafc !important;
        color: #4b5563 !important;
        cursor: not-allowed !important;
    }
    
    .read-only .k-combobox .k-select {
        display: none !important;
    }
    
    /* SECTION TITLES - MINIMAL SPACE */
    .section-title {
        font-size: 12px;
        color: #2c3e50;
        margin-bottom: 6px;
        padding-bottom: 4px;
        border-bottom: 1px solid #3498db;
        display: flex;
        align-items: center;
        gap: 5px;
    }
    
    .section-title::before {
        content: "";
        display: block;
        width: 4px;
        height: 14px;
        background: #3498db;
        border-radius: 2px;
    }
</style>

<script>
    // Initialize form state based on mode (add vs edit)
    $(document).ready(function() {
        const isAddMode = @Model.VehicleListId === 0;
        
        // Set initial readonly state
        setFormReadOnly(!isAddMode);
        
        // Handle Edit button click
        $("#btnEdit").click(function() {
            setFormReadOnly(false);
            $(this).hide();
        });
        
        // Handle Save button click
        $("#btnSave").click(function() {
            $("#vehicleDetailForm").submit();
        });
    });
    
    // Set form readonly state
    function setFormReadOnly(readOnly) {
        $(".vehicle-field").each(function() {
            const input = $(this);
            const widget = kendo.widgetInstance(input, kendo.ui);
            
            if (widget) {
                if (typeof widget.readonly === 'function') {
                    widget.readonly(readOnly);
                } else if (widget.element && widget.element.is("input")) {
                    input.prop("readonly", readOnly);
                }
            } else {
                input.prop("readonly", readOnly);
            }
            
            // Toggle readonly class for styling
            input.toggleClass("read-only", readOnly);
        });

        // Special handling for comboboxes
        $("[data-role='combobox']").each(function() {
            const combo = $(this).data("kendoComboBox");
            if (combo) {
                combo.readonly(readOnly);
                combo.enable(!readOnly);
                $(combo.element).toggleClass("read-only", readOnly);
            }
        });
    }
</script>
