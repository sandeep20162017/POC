@using BCES.Models.Vehicle
@using BCES.Models.Parts
@model IEnumerable<VehicleViewModel>

@{
    ViewData["Title"] = "Vehicle Estimate";
}

<h6>Vehicle Estimate</h6>

<!-- Kendo main grid in Vehicles tab -->
@(Html.Kendo().TabStrip()
    .Name("mainTabStrip")
    .Items(ts =>
    {
        ts.Add().Text("Vehicles").Selected(true)
            .Content(@<text>
                @(Html.Kendo().Grid<VehicleViewModel>()
                    .Name("VehicleGrid")
                    .Columns(c =>
                    {
                        c.Bound(v => v.VehicleListId).Title("Estimate #")
                            .ClientTemplate("<a class='estimate-link' onclick='window.openEstimatePopup(#=VehicleListId#)'>#=VehicleListId#</a>").Width(120);
                        c.Bound(v => v.VehSeriesCode).Title("Vehicle Series").HeaderHtmlAttributes(new { @class = "required-header" }).EditorTemplateName("ComboBoxEditor").Width(150);
                        c.Bound(v => v.NumOfVehicles).Title("Qty").HeaderHtmlAttributes(new { @class = "required-header" }).Width(80);
                        c.Bound(v => v.ProjDesc).Title("Description").HeaderHtmlAttributes(new { @class = "required-header" }).Width(250);
                        c.Command(cmd =>
                        {
                            cmd.Custom("Copy").IconClass("k-icon k-i-copy").Click("window.onCopyEstimate");
                            cmd.Custom("Archive").IconClass("k-icon k-i-folder").Click("window.onArchiveClick");
                            cmd.Custom("Delete").IconClass("k-icon k-i-delete").Click("window.showDeleteConfirmation");
                        }).Width(180);
                    })
                    .ToolBar(tb => tb.ClientTemplate("<button class='k-button k-button-icontext' onclick='window.openEstimatePopup(0)'><span class='k-icon k-i-plus'></span>Add New Record</button>"))
                    .Pageable(p => p.PageSizes(new[] { 10, 20, 50 }))
                    .Sortable()
                    .Filterable()
                    .Scrollable()
                    .HtmlAttributes(new { style = "height:550px;" })
                    .DataSource(ds => ds.Ajax()
                        .PageSize(10)
                        .Model(m => m.Id(v => v.VehicleListId))
                        .Read(r => r.Action("GetVehiclesView", "Vehicles").Type(HttpVerbs.Get))
                        .Create(c => c.Action("AddVehiclesView", "Vehicles").Type(HttpVerbs.Post))
                        .Update(u => u.Action("UpdateVehiclesView", "Vehicles").Type(HttpVerbs.Post))
                        .Destroy(d => d.Action("DeleteVehicle", "Vehicles").Type(HttpVerbs.Post))
                    )
                )
            </text>);
    })
)

<!-- Popup tabs for vehicle details -->
<div id="estimatePopup" style="display:none;">
    @(Html.Kendo().TabStrip()
        .Name("estimateTabs")
        .SelectedIndex(0)
        .Events(e => e.Select("onTabSelect"))
        .Items(tb =>
        {
            tb.Add().Text("Vehicle").Content(@<text>
                <div id="vehicleTabContent">
                    <!-- Vehicle content loaded dynamically -->
                </div>
            </text>);

            tb.Add().Text("StockCoded Parts").Content(@<text>
                <div id="stockCodedPartsTabContent">
                    @await Html.PartialAsync("_ScPartsPartial",
                        new List<StockCodedPartsViewModel>(),
                        new ViewDataDictionary(ViewData) {
                            { "PartNum", ViewBag.PartNum }
                        })
                </div>
            </text>).Enabled(false);

            tb.Add().Text("NonStock Parts").Content(@<text>
                <div id="nonStockPartsTabContent">
                    <!-- NonStock Parts content loaded dynamically -->
                </div>
            </text>).Enabled(false);

            tb.Add().Text("Rebuilt Parts").Content(@<text>
                <div id="rebuiltPartsTabContent">
                    <!-- Rebuilt Parts content loaded dynamically -->
                </div>
            </text>).Enabled(false);

            tb.Add().Text("Labour Details").Content("<div id='labourDetailsContent'></div>").Enabled(false);
            tb.Add().Text("Labour Estimate").Content("<div id='labourEstimateContent'></div>").Enabled(false);
            tb.Add().Text("Material Estimate").Content("<div id='materialEstimateContent'></div>").Enabled(false);
            tb.Add().Text("Total Cost").Content("<div id='totalCostContent'></div>").Enabled(false);
        })
    )
</div>

<!-- (rest of your dialogs, styles, and scripts remain unchanged) -->
