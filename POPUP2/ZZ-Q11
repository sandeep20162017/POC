Can you check index.cshtml for template or detailed template? Heres -ArchivedVehicleTemplte.cshtml
@using BCES.Models.Vehicle
@using BCES.Models.Common
@model IEnumerable<BCES.Models.Vehicle.VehicleViewModel>

@{
    ViewData["Title"] = "Archived Rebuilt Parts";
}

<h6>Archived Rebuilt Parts</h6>

@try
{
    @(
        Html.Kendo().Grid<VehicleViewModel>()
                .Name("ArchivedRebuiltPartsGrid")
                .Columns(columns =>
                {
                        columns.Bound(c => c.VehicleListId).Title("Vehicle List Id").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Hidden(true);
                        columns.Bound(c => c.VehSeriesCode).Title("Vehicle Series Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
                        columns.Bound(c => c.NumOfVehicles).Title("Num Of Vehicles").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
                        columns.Bound(c => c.LabourCost).Title("Labour Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
                        columns.Bound(c => c.LabourOverheadAmount).Title("Labour Overhead Amount").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
                        columns.Bound(c => c.LabourTotal).Title("Labour Total").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
                        columns.Bound(c => c.MaterialsTotal).Title("Materials Total").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
                        columns.Bound(c => c.TotalBusEstimateCost).Title("Total Bus Estimate Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
                        
                        
                        columns.Bound(c => c.EnteredBy).Title("Modified By").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
                        columns.Bound(c => c.DateEntered).Title("Modified Date").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
                
                    
                 columns.Command(command =>
                {
                    command.Custom("Save to Excel").Text(" ").IconClass("k-icon k-i-file-excel").Click("onArchivedSaveToExcelClick").HtmlAttributes(new { title = "Save to Excel" });
                    command.Custom("Email Estimate").Text(" ").IconClass("k-icon k-i-email").Click("onArchivedEmailEstimateClick").HtmlAttributes(new { title = "Email Estimate" });
                }).Title("Actions").Width(200).HtmlAttributes(new { @class = "action-buttons" });
            })
            
            .Pageable()
            .Sortable()
            //.ClientDetailTemplateId("archived-template")
            .Resizable(r => r.Columns(true))
            .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Model(model =>
                {
                        model.Id(c => c.VehicleListId);
                        model.Field(c => c.VehicleListId);
             
                })
                   //.Read(read => read.Url(Url.Action("GetArchivedVehiclesView", "Vehicles") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Get))
                       .Read(read => read.Url(Url.Action("GetArchivedVehiclesView", "Vehicles")).Type(HttpVerbs.Get))
            )
        )
}
catch (Exception ex)
{
    <div class="alert alert-danger">Error loading vehicle estimates: @ex.Message</div>
}

<!-- Placeholder for dynamically loaded email estimate popup and notification -->
<div id="archived-email-estimate-container" style="display: none;">
    @Html.Partial("_EmailEstimatePopup")
    <div id="archived-estimates-container"></div>
    <div id="archived-notification"></div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            
        });

        // Define the functions in the same file
       
    </script>

    
}
