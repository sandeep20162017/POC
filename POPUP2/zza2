✅ Fix for ComboBoxEditor.cshtml (with your setup)
Replace this:

cshtml
Copy
Edit
@model object

@{
    var fieldName = ViewData.TemplateInfo.GetFullHtmlFieldName("");
    var columnLockMap = ViewData["LockMap"]?.ToString() ?? "";
}
With this updated block:

cshtml
Copy
Edit
@model object

@{
    var fieldName = ViewData.TemplateInfo.GetFullHtmlFieldName("");
    var columnLockMap = ViewData["LockMap"]?.ToString() ?? "";
    var comboValue = Model?.ToString() ?? ""; // ✅ Use Model directly
}
Then apply .Value(comboValue) like this:

c
Copy
Edit
@(Html.Kendo().ComboBox()
    .Name(fieldName)
    .Value(comboValue) <!-- ✅ This ensures preselection works -->
    .DataTextField("Text")
    .DataValueField("Value")
    .Filter(FilterType.Contains)
    .Placeholder("Search...")
    .AutoBind(false)
    .EnforceMinLength(true)
    .NoDataTemplate("<div style='color: red; font-weight: bold;'>Invalid Selection</div>")
    .HtmlAttributes(new Dictionary<string, object>
    {
        { "name", fieldName },
        { "data-column", fieldName },
        { "data-role", "combobox" },
        { "data-lock-map", columnLockMap },
        { "class", "auto-lock-column required-cell" },
        { "required", "required" }
    })
    .Events(e =>
    {
        e.DataBound("onComboBoxDataBound");
        e.Change("onComboBoxChange");
    })
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Url(Url.Action("GetAutoCompleteData", "AutoComplete"))
                .Type(HttpVerbs.Get)
                .Data("getComboBoxParams");
        })
        .ServerFiltering(true);
    })
    .Template("#= Text #")
)
