1. Fix ComboBox Values Not Showing in Popup
File: ComboBoxEditor.cshtml
Add .Text(comboValue) to ensure values display properly:

html
@(Html.Kendo().ComboBox()
    .Name(fieldName)
    .DataTextField("Text")
    .DataValueField("Value")
    .Filter(FilterType.Contains)
    .Placeholder("Search...")
    .AutoBind(true)
    .EnforceMinLength(true)
    .NoDataTemplate("<div style='color: red; font-weight: bold;'>Invalid Selection</div>")
    .HtmlAttributes(new Dictionary<string, object>
    {
        // ... existing attributes ...
    })
    .Events(e =>
    {
        e.DataBound("onComboBoxDataBound");
        e.Change("onComboBoxChange");
    })
    .DataSource(source =>
    {
        // ... existing data source ...
    })
    .Value(comboValue)
    .Text(comboValue) // ADD THIS LINE
    .Template("#= Text #")
)
2. Make Vehicle Tab Use Full Width
File: _VehPopUp.cshtml
Update CSS styles:

css
.k-edit-form-container {
    background-color: white !important;
    width: 1200px; /* Add fixed width */
    max-width: none; /* Remove max-width restriction */
}

.popup-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 1px solid #eee;
    width: 100%; /* Ensure full width */
}

.form-row {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -10px;
    width: 100%; /* Full width */
}

/* REMOVE fixed column widths */
.form-group {
    padding: 0 10px;
    margin-bottom: 15px;
    flex: 1; /* Flexible width */
    min-width: 300px; /* Minimum width for fields */
}

/* DELETE THESE RULES:
.form-group.col-md-8 { ... }
.form-group.col-md-4 { ... }
*/
3. Implement Readonly/Editable Toggle
File: Index.cshtml (JavaScript section)
Add these functions to handle edit mode:

javascript
// Add to global functions
window.setFormReadOnly = function(readOnly) {
    $("#vehicleDetailForm :input").each(function() {
        var input = $(this);
        var widget = kendo.widgetInstance(input, kendo.ui);
        
        if (widget) {
            if (typeof widget.readonly === 'function') {
                widget.readonly(readOnly);
            } else if (widget.element && widget.element.is("input")) {
                input.prop("readonly", readOnly);
            }
        } else {
            input.prop("readonly", readOnly);
        }
    });

    $("[data-role='combobox']").each(function() {
        var combo = $(this).data("kendoComboBox");
        if (combo) {
            combo.readonly(readOnly);
        }
    });
};

// Modify wireVehicleForm function
function wireVehicleForm() {
    // ... existing code ...
    
    // Initialize readonly state (true for existing records)
    var isReadOnly = window.currentVehicleId !== 0;
    setFormReadOnly(isReadOnly);

    // Handle Edit button click
    $("#btnEdit").off("click").on("click", function() {
        setFormReadOnly(false);
        pendingChanges = true;
    });
    
    // ... rest of existing code ...
}
File: _VehPopUp.cshtml
Add ID to Edit button:

html
<!-- Change this button -->
<button id="btnEdit" class="k-button"> <!-- ADD ID HERE -->
    <span class="k-icon k-i-edit"></span> Edit
</button>
4. Additional Fix for Popup Initialization
File: Index.cshtml (JavaScript section)
Modify openEstimatePopup to reset pending changes:

javascript
window.openEstimatePopup = function(vehicleId) {
    pendingChanges = false; // Ensure fresh state
    currentVehicleId = vehicleId;
    window.tabContentLoaded = [false, false, false, false, false, false, false];
    
    // ... existing code ...
};
Summary of Changes:
Added .Text(comboValue) to ComboBoxEditor to display values

Updated CSS in _VehPopUp for full-width layout

Implemented:

Readonly mode when opening existing estimates
