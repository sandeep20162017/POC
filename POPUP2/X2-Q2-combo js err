JS : undefined for combobox while clikied on 'Save'. The values are displayed good on the screen:

console.log('VehSeriesCode :', vm.VehSeriesCode) returns undefined
      console.log('NumOfVehicles :', vm.NumOfVehicles); returns correct  number 12
      console.log('ProjDesc :', vm.ProjDesc); returns undefined

 $("#vehicleForm").off("submit").on("submit", function(e) {
     console.log('submit called');

     e.preventDefault();
     if (!pendingChanges) { console.log (' no pending changes...returning'); return;}
     
     var vm = {
         VehicleListId: $("#VehicleListId").val(),
         VehSeriesCode: $("#VehSeriesCode").val(),
         NumOfVehicles: $("#NumOfVehicles").val(),
         ProjDesc: $("#ProjDesc").val(),
         Make: $("#Make").val(),
         VehModel: $("#VehModel").val(),
         Year: $("#Year").val(),
         Engine: $("#Engine").val(),
         Transmission: $("#Transmission").val(),
         Differential: $("#Differential").val(),
         Sopnumber: $("#Sopnumber").val()
     };
      console.log('VehSeriesCode :', vm.VehSeriesCode);
      console.log('NumOfVehicles :', vm.NumOfVehicles);
      console.log('ProjDesc :', vm.ProjDesc);
     if (!vm.VehSeriesCode || !vm.NumOfVehicles || !vm.ProjDesc) {
         return kendo.alert("Please fill required fields.");
     }
ComboBoxEditor.cs :
@model object

@{
    var fieldName = ViewData.TemplateInfo.GetFullHtmlFieldName("");
    var columnLockMap = ViewData["LockMap"]?.ToString() ?? "";
    var comboValue = Model?.ToString() ?? ""; 
}

@(Html.Kendo().ComboBox()
    .Name(fieldName)
    .DataTextField("Text")
    .DataValueField("Value")
    .Value(comboValue)
    .Text(comboValue)
    
    .Filter(FilterType.Contains)
    .Placeholder("Search...")
    .AutoBind(false)
    @* .MinLength(2) *@
    .EnforceMinLength(true)
    .NoDataTemplate("<div style='color: red; font-weight: bold;'>Invalid Selection</div>")
    .HtmlAttributes(new Dictionary<string, object>
    {
        { "name", fieldName },
        { "data-column", fieldName },
        { "data-role", "combobox" },
        { "data-lock-map", columnLockMap },
        { "class", "auto-lock-column"  + " required-cell"},
        {"required", "required"}
    })
    .Events(e =>
    {
        e.DataBound("onComboBoxDataBound");
        e.Change("onComboBoxChange");
    })
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Url(Url.Action("GetAutoCompleteData", "AutoComplete"))
                .Type(HttpVerbs.Get)
                .Data("getComboBoxParams");
        })
        .ServerFiltering(true);
    })
    .Template("#= Text #")
)

        
