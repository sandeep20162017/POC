You are Oracle and MS SQL expert.
Following schema is for Oracle. I have already migrated Oracle tables and data to MS SQL.
Table and column names in Oracle matches with MS SQL table and columnes.
Only difference for all the  table and col names in MS SQL is Table and column names are without underscore (_).
Example Oracle Table name : RB_MASTERLIST MS Table name : RBMASTERLIST
Example Oracle Table name : SC_PARTS_USED  MS Table name : SCPARTSUSED 
Example Oracle Col name : REBUILT_STOCK_NUMT MS Col name : REBUILTSTOCKNUM
Example Oracle Col name : TOTAL_COST  MS Col name : TOTALCOST
Pls help migrating below queries from Oracle to MS SQL. Use above suggested naming convention for MS Table, Columns an aliases.
Oracle Queries :
begin CES_INQUIRY.RETRIEVE_AUDIT_6(VI_ESTIMATE_NUMBER=>:V00001, VI_ESTIMATE_TYPE=>:V00002, VO_CURSOR=>:R000C000); end;

SELECT * FROM AUDIT_MODIFY_HISTORY WHERE ESTIMATE_NUMBER = :B2 AND ESTIMATE_TYPE = :B1 AND ESTIMATE_TYPE IN ('MB','RB','BUS','KIT','NSCP') ORDER BY DATE_CHANGED DESC

SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0))AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER('035434' ) AND REBUILT_PART = 'N' AND LINK_TYPE = 'RB' UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED,NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER('035434' ) AND NSC_PARTS_USED.LINK_TYPE = 'RB' AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME

INSERT INTO TEMP_LABOUR_LIST VALUES (:B9 ,:B8 ,:B7 ,:B3 ,ROUND((HHMM_TO_MINUTES(:B5 ) * :B1 ),0),:B6 , (:B6 / 60) * ROUND(HHMM_TO_MINUTES(:B5 ) * :B1 ) * (:B3 /100) , ROUND((:B3 / 100) * HHMM_TO_MINUTES(:B5 ) * :B1 ) ,'RB',UPPER(:B4 ), ROUND((:B3 / 100) * ROUND(HHMM_TO_MINUTES(:B2 ) * :B1 )))

begin CES_INQUIRY.RETRIEVE_CES_SETTI(VI_PARAMETER=>:V00001, VO_CURSOR=>:R000C000); end;

SELECT RB_LIST_OF_BUSES.LIST_ID, LIST_OF_BUSES.DESCRIPTION FROM RB_LIST_OF_BUSES, LIST_OF_BUSES WHERE RB_LIST_OF_BUSES.REBUILT_STOCK_NUM = '035434' AND RB_LIST_OF_BUSES.LIST_ID = LIST_OF_BUSES.LIST_ID

SELECT CC AS "COST CENTRE", DECIMAL_MINUTES_TO_HHMM(SUM(EXTENDED_TIME)) AS "LABOUR HRS", SUM(TOTAL_COST) AS "TOTAL COST" FROM TEMP_LABOUR_LIST GROUP BY CC ORDER BY CC ASC

SELECT COST_CENTRE AS "CC", SUM(TOTAL_COST) AS "TOTAL COST", SUM(TAXABLE_COST)AS "TAXABLE COST" FROM TEMP_MATERIALS_LIST GROUP BY COST_CENTRE ORDER BY COST_CENTRE ASC
INSERT INTO TEMP_LABOUR_LIST VALUES (:B8 ,:B7 ,:B6 ,:B2 ,HHMM_TO_MINUTES(:B4 ),:B5 , :B5 * HHMM_TO_MINUTES(:B4 ) * :B2 / 6000, ROUND((:B2 / 100) * HHMM_TO_MINUTES(:B4 )) ,'RB',UPPER(:B3 ), ROUND((:B2 / 100) * HHMM_TO_MINUTES(:B1 )))

SELECT EMPLOYEE_LABOUR.LABOUR_DEFN AS "LABOUR TYPE", EMPLOYEE_LABOUR.COSTCENTRE AS "CC", EMPLOYEE_LABOUR.TASK AS "TASK", REPLACE(EMPLOYEE_LABOUR.USAGE,',','.') AS "USAGE", EMPLOYEE_LABOUR.HRS_REQD AS "TIME", EMPLOYEE_SALARIES.RATE_PER_HOUR AS "RATE PER HOUR", EMPLOYEE_LABOUR.TIME_ADDITION AS "TIME ADDITION", HHMM_TO_DECIMAL(EMPLOYEE_LABOUR.ADJ_HRS) AS "WRENCH TIME" FROM EMPLOYEE_LABOUR, EMPLOYEE_SALARIES, EMPL_CLASS WHERE EMPLOYEE_LABOUR.LABOUR_DEFN = UPPER(EMPL_CLASS.LABOUR_DEFN) AND EMPLOYEE_SALARIES.WAGE_GROUP = EMPL_CLASS.WAGE_GROUP AND EMPLOYEE_LABOUR.LINK_NUMBER = '035434' AND EMPLOYEE_LABOUR.TYPEID = 'RB'

begin CES_INQUIRY.RETRIEVE_RBP_TOTAL_COST2(VI_IDNUM=>:V00001, VI_TYPE=>:V00002, VO_CURSOR=>:R000C000); end;

begin CES_INQUIRY.RB_LIST_BUSES(VI_REBUILT_STOCK_NUM=>:V00001, VO_CURSOR=>:R000C000); end;

SELECT EMPLOYEE_LABOUR.LABOUR_DEFN AS "LABOUR TYPE", EMPLOYEE_LABOUR.COSTCENTRE AS "CC", EMPLOYEE_LABOUR.TASK AS "TASK", REPLACE(EMPLOYEE_LABOUR.USAGE,',','.') AS "USAGE", EMPLOYEE_LABOUR.HRS_REQD AS "TIME", EMPLOYEE_SALARIES.RATE_PER_HOUR AS "RATE PER HOUR", EMPLOYEE_LABOUR.TIME_ADDITION AS "TIME ADDITION", HHMM_TO_DECIMAL(EMPLOYEE_LABOUR.ADJ_HRS) AS "WRENCH TIME" FROM EMPLOYEE_LABOUR, EMPLOYEE_SALARIES, EMPL_CLASS WHERE EMPLOYEE_LABOUR.LABOUR_DEFN = UPPER(EMPL_CLASS.LABOUR_DEFN) AND EMPLOYEE_SALARIES.WAGE_GROUP = EMPL_CLASS.WAGE_GROUP AND EMPLOYEE_LABOUR.LINK_NUMBER = '035434' AND EMPLOYEE_LABOUR.TYPEID = :B1 

begin CES_INQUIRY.RETRIEVE_ALL_LABOUR(VI_IDNUM=>:V00001, VI_TYPE=>:V00002, VO_CURSOR=>:R000C000); end;

SELECT DISTINCT UPPER(SC_PARTS_USED.LINK_CODE) AS "link_code", SC_PARTS_USED.QTY_REQD AS "QTY", SC_PARTS_USED.PERCENT_USAGE AS "%", SC_PARTS_USED.MMS_REBUILT_CODE AS "Rebuilt Code" FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = 'RB' AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER('035434' )

SELECT ROUND(SUM(TOTAL_COST),2) AS LABOUR_COST FROM TEMP_LABOUR_LIST

SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0)) AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER('035434' ) AND REBUILT_PART = 'N' AND LINK_TYPE =UPPER('RB' ) UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED, NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER('035434') AND NSC_PARTS_USED.LINK_TYPE = UPPER('RB' ) AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME

begin CES_INQUIRY.RETRIEVE_MB_LABOUR(VI_IDNUM=>:V00001, VI_TYPE=>:V00002, VO_CURSOR=>:R000C000); end;

SELECT EMPLOYEE_LABOUR.LABOUR_DEFN AS "LABOUR TYPE", EMPLOYEE_LABOUR.COSTCENTRE AS "CC", EMPLOYEE_LABOUR.TASK AS "TASK", REPLACE(EMPLOYEE_LABOUR.USAGE,',','.') AS "USAGE", EMPLOYEE_LABOUR.HRS_REQD AS "TIME", EMPLOYEE_LABOUR.ADJ_HRS AS "WRENCH TIME", EMPLOYEE_LABOUR.DATE_REVISED AS "DATE REVISED", EMPLOYEE_LABOUR.TIME_ADDITION AS "TIME ADDITION", CES_SETTINGS.VALUE AS "VALUE", EMPLOYEE_LABOUR.ROWID FROM EMPLOYEE_LABOUR, (SELECT CES_SETTINGS.VALUE FROM CES_SETTINGS WHERE CES_SETTINGS.PARAMETER = 'NON_PRODUCTIVE_ADJUSTMENT') CES_SETTINGS WHERE EMPLOYEE_LABOUR.LINK_NUMBER = '035434' AND EMPLOYEE_LABOUR.TYPEID = :B1 ORDER BY EMPLOYEE_LABOUR.COSTCENTRE

begin CES_INQUIRY.RETRIEVE_SC_ORIG_SUPPLIER_NUM(VI_OSN=>:V00001, VO_CURSOR=>:R000C000); end;

begin CES_INQUIRY.RETRIEVE_SC_ORIG_SUPPLIER_NUM(VI_OSN=>:V00001, VO_CURSOR=>:R000C000); end;

SELECT ORIG_SUPPLIER_NUM, UPPER(MMS_STOCK_CODE) AS MMS_STOCK_CODE, REPLACE(UPPER(MMS_NEW_COST), ',','.') AS MMS_NEW_COST FROM STOCK_CODED_PARTS
WHERE MMS_STOCK_CODE = '035433'
--WHERE RTRIM(ORIG_SUPPLIER_NUM) = RTRIM('035434' )

begin CES_INQUIRY.RETRIEVE_SC_ORIG_SUPPLIER_NUM(VI_OSN=>:V00001, VO_CURSOR=>:R000C000); end;

SELECT UPPER(SC_PARTS_USED.MMS_REBUILT_CODE) AS "REBUILT NUMBER", NVL(A.RB_UNIT_COST,0) AS "UNIT COST", UPPER(SC_PARTS_USED.COST_CENTRE) AS "CC", UPPER(SC_PARTS_USED.QTY_REQD) AS "QTY", REPLACE(SC_PARTS_USED.PERCENT_USAGE,',','.') AS "%", SC_PARTS_USED.CORECOST AS "CORE COST", NVL(A.RB_COST,0) AS "TOTAL COST", UPPER(RB_MASTERLIST.DETAILED_DESC) AS "DESCRIPTION", UPPER(RB_MASTERLIST.KEYWORD) AS "KEYWORD", SC_PARTS_USED.ROWID FROM SC_PARTS_USED, RB_MASTERLIST, (SELECT ROUND(SUM(TOTAL_COST),2) AS RB_COST, ROUND(SUM(TOTAL_UNIT_COST),2) AS RB_UNIT_COST , RB_REFERENCE FROM TEMP_MATERIALS_LIST GROUP BY RB_REFERENCE) A WHERE SC_PARTS_USED.LINK_CODE = '035434' AND SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = 'RB' AND RB_MASTERLIST.REBUILT_STOCK_NUM(+)= SC_PARTS_USED.MMS_REBUILT_CODE AND RB_REFERENCE (+)= SC_PARTS_USED.MMS_REBUILT_CODE ORDER BY SC_PARTS_USED.MMS_REBUILT_CODE

SELECT UPPER(REBUILT_STOCK_NUM) AS "rebuilt_stock_num", MMS_STOCK_CODE, KEYWORD, DETAILED_DESC, NVL(SOP_NUMBER,' ') AS "sop_number", NVL(JOB_NUMBER,' ') AS "job_number", CORE_PART_NUM, CORE_CHARGE, ESTIMATED_COST, DATE_MODIFIED, ACTIVE, ROWID FROM RB_MASTERLIST

INSERT INTO TEMP_MATERIALS_LIST VALUES (:B7 ,:B6 ,ROUND(:B1 * :B4 ,2) ,:B5 * :B4 ,:B3 , :B2 * :B1 )
begin CES_INQUIRY.RETRIEVE_RB(VO_CURSOR=>:R000C000); end;

SELECT COUNT(*) FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = 'RB' AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER('RB' )

SELECT DISTINCT UPPER(SC_PARTS_USED.LINK_CODE) AS "link_code", SC_PARTS_USED.QTY_REQD AS "QTY", SC_PARTS_USED.PERCENT_USAGE AS "%", SC_PARTS_USED.MMS_REBUILT_CODE AS "Rebuilt Code" FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = UPPER('RB' ) AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER('035434')

SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0)) AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B2 ) AND REBUILT_PART = 'N' AND LINK_TYPE =UPPER('RB' ) UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED, NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER('035434' ) AND NSC_PARTS_USED.LINK_TYPE = UPPER('RB' ) AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME

SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0))AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER('model.RBStockNum' ) --RBStockNum
AND REBUILT_PART = 'N' AND LINK_TYPE = 'RB' UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED,NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(model.RBStockNum ) --RBStockNum
AND NSC_PARTS_USED.LINK_TYPE = 'RB' AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME

begin CES_INQUIRY.RETRIEVE_RBP_USED(VI_IDNUM=>:V00001, VI_LINK_TYPE=>:V00002, VO_CURSOR=>:R000C000); end;
=====================================================================================================
Search Stock Coded Part :
SELECT UPPER(MMS_STOCK_CODE) AS "STOCK CODE", UPPER(NVL(DETAILED_DESC, ' ')) AS "DESCRIPTION", NVL(OEM_PART_COST,0) AS "OEM_PART_COST", NVL(MMS_NEW_COST,0) AS "PRICE", UPPER(NVL(PART_TYPE, ' ')) AS "KEYWORD", LAST_MODIFIED_DATE AS "LAST MODIFIED DATE", ROWID FROM STOCK_CODED_PARTS WHERE NVL(MMS_STOCK_CODE,' ') LIKE '%'||TRIM(:B4 )||'%' AND UPPER(NVL(DETAILED_DESC,' ')) LIKE '%'||TRIM(UPPER(:B3 ))||'%' AND UPPER(NVL(PART_TYPE, ' ')) LIKE '%'||TRIM(UPPER(:B2 ))||'%' AND (MMS_NEW_COST >= :B1 OR MMS_NEW_COST IS NULL) ORDER BY MMS_STOCK_CODE
begin CES_INQUIRY.SEARCH_SC_PART(VI_ORIG_SUPPLIER_NUM=>:V00001, VI_OEM_PART_COST=>0, VI_DESCRIPTION=>:V00003, VI_KEYWORD=>:V00004, VI_COST_COMPARETYPE=>:V00005, VO_CURSOR=>:R000C000); end;

begin CES_INQUIRY.SEARCH_SC_PART(:V00001,:V00002,:V00003,:V00004,:V00005); end;

begin CES_INQUIRY.SEARCH_SC_PART(VI_ORIG_SUPPLIER_NUM=>:V00001, VI_OEM_PART_COST=>:V00002, VI_DESCRIPTION=>:V00003, VI_KEYWORD=>:V00004, VI_COST_COMPARETYPE=>:V00005, VO_CURSOR=>:R000C000); end;
BEGIN SYS.DBMS_DESCRIBE.DESCRIBE_PROCEDURE(:object_name,:res1,:res2,:overload,:position,:level,:argument,:datatype,:default,:in_out,:length,:precision,:scale,:radix,:spare); END;

SELECT UPPER(COST_CENTRE) AS COST_CENTRE FROM COST_CENTRES ORDER BY COST_CENTRE

begin CES_INQUIRY.RETRIEVE_COST_CENTRES(VO_CURSOR=>:R000C000); end;

SELECT DISTINCT UPPER(DETAILED_DESC) AS DETAILED_DESC FROM STOCK_CODED_PARTS

SELECT DISTINCT UPPER(PART_TYPE) AS PART_TYPE FROM STOCK_CODED_PARTS
BEGIN SYS.DBMS_DESCRIBE.DESCRIBE_PROCEDURE(:object_name,:res1,:res2,:overload,:position,:level,:argument,:datatype,:default,:in_out,:length,:precision,:scale,:radix,:spare); END;

SELECT DISTINCT UPPER(MMS_STOCK_CODE) AS MMS_STOCK_CODE, UPPER(MMS_SYNC_DATE) AS MMS_SYNC_DATE FROM STOCK_CODED_PARTS
======================
Add Stock coded Part :
INSERT INTO SC_PARTS_USED ( MMS_STOCK_CODE, DATE_ENTERED, USER_ENTERED, MMS_COST, OEM_COST, LAST_MODIFIED_BY, LAST_MODIFIED_DATE, COST_CENTRE, QTY_REQD, PERCENT_USAGE, LINK_CODE, REBUILT_PART, LINK_TYPE, MMS_REBUILT_CODE, CORECOST, REB_PART_COST ) VALUES ( UPPER(:B13 ), SYSDATE, NVL(UPPER(:B10 ), ' '), NVL(:B12 , 0), NVL(:B11 , 0), UPPER(:B10 ), SYSDATE, NVL(UPPER(:B9 ), ' '), NVL(:B8 ,'0'), NVL(:B7 , '0'), :B6 , :B5 , :B4 , NVL(:B3 , ' '), NVL(:B2 , 0), NVL(:B1 , 0) )


