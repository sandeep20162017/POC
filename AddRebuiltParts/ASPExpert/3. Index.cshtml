@using BCES.Models.RebuiltParts
@model IEnumerable<RebuiltPartViewModel>

@{
    ViewData["Title"] = "Rebuilt Parts";
}

<h2>Rebuilt Parts</h2>

@(Html.Kendo().Grid<RebuiltPartViewModel>()
    .Name("RebuiltPartsGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.StockCode).Title("Rebuilt Stock Code").EditorTemplateName("TextBoxTemplate");
        columns.Bound(c => c.Description).Title("Description").EditorTemplateName("TextBoxTemplate");
        columns.Bound(c => c.Keyword).Title("Keyword").EditorTemplateName("DropDownTemplate");
        columns.Bound(c => c.JobNumber).Title("Job Number").EditorTemplateName("DropDownTemplate");
        columns.Bound(c => c.MMSBuyCode).Title("MMS Buy Code").EditorTemplateName("TextBoxTemplate");
        columns.Bound(c => c.CoreCost).Title("Core Cost").EditorTemplateName("NumericTemplate");
        columns.Bound(c => c.SOPNumber).Title("SOP Number").EditorTemplateName("TextBoxTemplate");
        columns.Bound(c => c.BuyCost).Title("Buy Cost").EditorTemplateName("NumericTemplate");
        columns.Bound(c => c.RemanufacturedCost).Title("Remanufactured Cost").EditorTemplateName("NumericTemplate");
        columns.Bound(c => c.IsActive).Title("Status").EditorTemplateName("RadioTemplate");
        columns.Bound(c => c.Vehicles).Title("Vehicles").EditorTemplateName("MultiSelectTemplate");
        columns.Command(command => { command.Edit(); command.Destroy(); }).Title("Actions");
    })
    .ToolBar(toolbar => { toolbar.Create(); })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Sortable()
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            model.Id(c => c.StockCode);
            model.Field(c => c.Vehicles).DefaultValue(new List<string>());
        })
        .Read(read => read.Action("Index", "RebuiltParts"))
        .Create(create => create.Action("Create", "RebuiltParts"))
        .Update(update => update.Action("Update", "RebuiltParts"))
        .Destroy(destroy => destroy.Action("Delete", "RebuiltParts"))
    )
)
