You are ASp.NET core (v 8.0) and Telerik ASp.NET core expert.
I am using Telerik ASp.NET core grid.
Grid uses InCell edit.
When user clicks on Delete (row bould), drfault destory grid functin gets called. User sees a Kendo pop up "Are you sure you want to delete this record"
This dialog pop up has two buttons. Ok and Cancel.
When OK is clicked controller delete action should be called, but in the following case, it doesn't get called.
Delete in controoler gets called when user clicks on delete, confirm the actio (click on Ok) on defalut pop up dialog and hen clik on Save.
Pls help fix this.
Site.cshtml :
@model IEnumerable<BCES.Models.Admin.SiteModel>

@{
    ViewData["Title"] = "Site Management";
}

<h6>Site Management</h6>

@(Html.Kendo().Grid<BCES.Models.Admin.SiteModel>()
    .Name("siteGrid")
    .Columns(columns =>
    {
        columns.Bound(u => u.SiteId).Hidden(true); //InCell
        columns.Bound(u => u.SiteName) // Display SiteName
            .Title("Site Name")
            .EditorTemplateName("SiteNameDropDown");

        columns.Command(command =>
        {
            command.Destroy().Text(" ").IconClass("k-icon k-i-delete").HtmlAttributes(new { title = "Delete" });
        }).Title("Actions");
       
    })
    //InCell
     .ToolBar(toolbar =>
    {
        toolbar.Create();
        toolbar.Save();
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell)) //InCell
    .Pageable()
    .Sortable()
   // .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Read(read => read.Url(Url.Action("GetSiteView", "Site")).Type(HttpVerbs.Get))
        .Create(create => create.Url(Url.Action("CreateSite", "Site")).Type(HttpVerbs.Post))
        .Update(update => update.Url(Url.Action("UpdateSite", "Site", new { SiteId = "{0}" })).Type(HttpVerbs.Post)) //InCell
        .Destroy(delete => delete.Url(Url.Action("DeleteSite", "Site")).Type(HttpVerbs.Post))
        .Model(model =>
        {
            model.Id(u => u.SiteId); //InCell
            model.Field(u => u.SiteName);
        })
         .Events(events => events
                    .Error("onDataSourceError")
                    .RequestEnd("onRequestEnd")
                     )
    )
)
<div id="notification"></div>
@section Scripts {
  <script>
              //InCell
              $(document).ready(function() {
                var notification = $("#notification").kendoNotification({
                    position: {
                        pinned: true,
                        top: 50,
                        right: 30
                    },
                    autoHideAfter: 4000,
                    stacking: "down"
                }).data("kendoNotification");
                                

            });
  </script>
    <script>
        // Initialize notification FIRST
        var notification = $("#notification").kendoNotification({
            position: {
                pinned: true,
                top: 50,
                right: 30
            },
            autoHideAfter: 4000,
            stacking: "down"
        }).data("kendoNotification");

        // Error handler
        function onDataSourceError(e) {
            let errorMessage = "Operation failed. ";

            if (e.errorThrown) {
                errorMessage += e.errorThrown;
            } else if (e.xhr && e.xhr.responseText) {
                errorMessage += e.xhr.responseText;
            }

            notification.error(errorMessage);
        }

        // Success handler
        function onRequestEnd(e) {
            if (e.type === "create") {
                notification.success("Record created successfully");
            } else if (e.type === "update") {
                notification.success("Record updated successfully");
            } else if (e.type === "destroy") {
                notification.success("Record deleted successfully");
            }
        }
    </script>
}
