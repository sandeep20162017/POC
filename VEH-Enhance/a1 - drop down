ðŸ§± 1. Use the filtering event
The filtering event gives you the search text before the server call.

csharp
Copy
Edit
@(Html.Kendo().DropDownList()
    .Name("YourFieldName")
    .DataTextField("Text")
    .DataValueField("Value")
    .Filter(FilterType.Contains)
    .OptionLabel("Search...")
    .AutoBind(false)
    .MinLength(2)
    .Events(e => e.Filtering("onDropDownFiltering"))
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Url(Url.Action("GetAutoCompleteData", "AutoComplete"))
                .Type(HttpVerbs.Get)
                .Data("getDropDownParams");
        })
        .ServerFiltering(true);
    })
)
ðŸ§  2. Capture Search Text in JS (globally)
javascript
Copy
Edit
// Shared state to hold search text and name
var currentDropDownSearch = {
    columnName: "",
    searchText: ""
};

function onDropDownFiltering(e) {
    var dropdown = e.sender;
    currentDropDownSearch.columnName = dropdown.element.attr("name");
    currentDropDownSearch.searchText = e.filter.value;
}
âœ… 3. Update the Data Function
javascript
Copy
Edit
function getDropDownParams() {
    return {
        columnName: currentDropDownSearch.columnName,
        searchText: currentDropDownSearch.searchText
    };
}
