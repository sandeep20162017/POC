public async Task<IActionResult> ArchiveVehicleDetails([FromBody] ArchiveVehicleRequestModel payload)
{
    try
    {
        var parameters = new DynamicParameters();
        parameters.Add("@VehicleListId", payload.VehicleListId);
        parameters.Add("@ReturnValue", dbType: DbType.Int32, direction: ParameterDirection.ReturnValue);

        await _dbConnection.ExecuteAsync(
            "[SBCES].[ArchiveVehicleV1]",
            parameters,
            commandType: CommandType.StoredProcedure
        );

        var retVal = parameters.Get<int>("@ReturnValue");

        return Json(new
        {
            success = retVal == 0,
            message = retVal == 0
                ? $"Archived Vehicle List Id: {payload.VehicleListId}"
                : $"Archive failed with return value: {retVal}"
        });
    }
    catch (Exception ex)
    {
        return Json(new
        {
            success = false,
            message = $"Archive failed: {ex.Message}"
        });
    }
}
