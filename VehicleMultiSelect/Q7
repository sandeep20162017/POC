You are ASP.NET core version 8.0 expert and have vast knowledge of Telerik ASP.NET core controls.
Implement following. Add exception handling. Add comments. Use/Create editor template. Add logic in the server side, instead of in the javaaascript. :
1. TestRBPartsViewModel.cs
namespace BCES.Models.Parts
{
    public class RebuiltPartsViewModel
    {
      public string RebuiltStockNum { get; set; }
      public string Keyword { get; set; }
      public List<BusesModel>? Buses { get; set; } = [];
  }
}

namespace BCES.Models.Parts
{
    public class BusesModel
    {
      public int ListId{ get; set; }
      public string Keyword { get; set; }
      public String? Description { get; set; }; //comma seperated list of buses from SQL
  }
}
2. Implement TestRebuiltPartController.cs
This should have CRUD functionality (add new Part, update new part, delete new part). 
RebuiltStockNum is PK. It has one to many relationship with Buses (rbl.listid, lb.description).  lb.description must be visible in comma seperated style in the Buses column of the grid for each RebuiltStockNum. Modify/Use following SQL to implement the functionality.
Sample SQL :
  SELECT rbm.RbMasterlistId,
       rbm.[RebuiltStockNum],
       rbm.[MmsStockCode],
       rbm.[Keyword],
       rbm.JobNumber,
       rbm.[CorePartNum],
       rbm.[DetailedDesc],
       rbm.[CoreCharge],
       rbm.[EstimatedCost],
       rbm.[BuyNewCost],
       rbm.[RemanCost],
       rbm.[ExternalCost],
       rbl.listid,
       lb.description
FROM [SBCES].[RbMasterlist] rbm
JOIN SBCES.RBLISTOFBUSES rbl ON rbm.RebuiltStockNum = rbl.RebuiltStockNum  
JOIN SBCES.LISTOFBUSES lb ON rbl.listid = lb.listid	

3. Implement TestRebuiltPartIndex.cshtml
a. This page has two Telerik tab strips ("Rebuilt Parts", "Archieved Parts"). By default tab1 is visible
b. Tab 1 (Rebuilt Parts) will have telerik grid (columns - RebuiltStockNum (text), Keyword(text), Buses (Telerik multiselect), Update, Delete buttons (icons))
c. Tab 1 (Rebuilt Parts) will have telerik grid (columns - RebuiltStockNum (text), Keyword(text), Buses (Telerik multiselect), Update, Delete buttons (icons))
c. Header button to create
d. Tab 1 (Rebuilt Parts) has another tab view
d1. This tab view has 2 sub tabs 'Labour details', 'Parts details'. When user clicks on each row on grid (c-above), these tabs are visible.

e. Tab 2- ('Archieved Parts') will have telerik grid (columns - RebuiltStockNum (text), Keyword(text), Buses (Telerik multiselect), Update, Delete buttons (icons))
c. Tab 2- ('Archieved Parts') will have telerik grid (columns - RebuiltStockNum (text), Keyword(text), Buses (Telerik multiselect), Update, Delete buttons (icons))
f. Header button to create
g. Tab 2- ('Archieved Parts') has another tab view
g1. This tab view has 2 sub tabs 'Archived Labour details', 'Archived Parts details'. When user clicks on each row on grid (c-above), these tabs are visible.

