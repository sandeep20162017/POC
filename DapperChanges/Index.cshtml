@model IEnumerable<UserViewModel>

@{
    ViewData["Title"] = "User Management";
}

<!-- Kendo UI Grid for displaying User and Role information -->
<div>
    @(Html.Kendo().Grid<UserViewModel>()
        .Name("UserGrid") // Name of the grid
        .Columns(columns =>
        {
            columns.Bound(u => u.UserId).Hidden(); // Hide the UserId column
            columns.Bound(u => u.UserName).Title("User Name").Width(150); // Display UserName column
            columns.Bound(u => u.RoleModel.RoleName).Title("Role Name").Width(150)
                .EditorTemplateName("RoleNameDropDown") // Use a custom template for RoleName dropdown
                .ClientTemplate("#= RoleModel.RoleName #"); // Client-side display template for RoleName

            columns.Command(command => command.Destroy()).Width(100).Title("Delete"); // Add delete button
        })
        .ToolBar(toolbar =>
        {
            toolbar.Create(); // Add button on the toolbar
            toolbar.Save();   // Save button for grid updates
        })
        .Editable(editable => editable.Mode(GridEditMode.InCell)) // Enable InCell editing
        .DataSource(dataSource => dataSource
            .Ajax() // Use Ajax binding
            .Model(model =>
            {
                model.Id(u => u.UserId); // Define UserId as the key
                model.Field(u => u.UserId).Editable(false); // UserId should not be editable
                model.Field(u => u.RoleModel.RoleName).DefaultValue("Select Role"); // Default value for RoleName
            })
            .Read(read => read.Action("UserViewRead", "UserManagementGrid")) // Bind read action
            .Create(create => create.Action("UserViewAdd", "UserManagementGrid")) // Bind add action
            .Update(update => update.Action("UserViewUpdate", "UserManagementGrid")) // Bind update action
            .Destroy(destroy => destroy.Action("UserViewDelete", "UserManagementGrid")) // Bind delete action
            .Events(events => events.Error("onError")) // Handle errors on the client side
        )
        .Editable
