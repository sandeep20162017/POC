Exception :
Must declare the scalar variable "@EnteredBy". I want to assign EnteredBy with userName and DateEntered zto DateTime.Now.
private async Task<int> AddVehicleAsync(VehicleViewModel vehicleViewModel)
{
    var userName = ViewBag.UserName;

    _dbConnection.Open();
    using (var transaction = _dbConnection.BeginTransaction())
    {
        try
        {
            // Insert into the main RbMasterlist table
            var insertVehlistQuery = @"
                                                INSERT INTO SBCES.VehicleList (
                                                    Sopnumber, ProjDesc, Differential, Engine, LabourCost,
                                                    LabourOverheadAmount, Make, Model, VehSeriesCode, Year, MaterialsTotal, EnteredBy,
                                                    DateEntered
                                                )
                                                VALUES (
                                                    @Sopnumber, @ProjDesc, @Differential, @Engine, @LabourCost,
                                                    @LabourOverheadAmount, @Make, @Model, @VehSeriesCode, @Year, @MaterialsTotal, @EnteredBy,
                                                    @DateEntered
                                                );
                                                SELECT CAST(SCOPE_IDENTITY() AS INT);
                                            ";

            var vehicleListId = await _dbConnection.QuerySingleAsync<int>(insertVehlistQuery, new
            {
                vehicleViewModel.Sopnumber,
                vehicleViewModel.ProjDesc,
                vehicleViewModel.Differential,
                vehicleViewModel.Engine,
                vehicleViewModel.LabourCost,
                vehicleViewModel.LabourOverheadAmount,
                vehicleViewModel.Make,
                vehicleViewModel.Model,
                vehicleViewModel.Transmission,
                vehicleViewModel.VehSeriesCode,
                vehicleViewModel.Year,
                vehicleViewModel.MaterialsTotal,
                userName,
                DateTime.Now
              
            }, transaction);



            // Commit the transaction
            transaction.Commit();

            return vehicleListId;
            
        }
        catch (Exception ex)
        {
            // Rollback the transaction in case of an error
           // transaction.Rollback();
            Console.WriteLine($"Error creating Vehicle data: {ex.Message}");
            throw; // Re-throw the exception to propagate it
        }
    }

}
