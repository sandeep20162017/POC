// === UPDATED LOCK LOGIC FOR COMBOBOX FIELDS ===
const dataItems = ds.view();

grid.tbody.find("tr").each(function (index) {
    const row = $(this);
    const model = dataItems[index];

    // Find all combobox inputs in this row with a lock-map
    row.find("input[data-role='combobox'][data-lock-map].auto-lock-column").each(function () {
        const $input = $(this);
        const lockMap = $input.attr("data-lock-map");
        const combo = $input.data("kendoComboBox");

        if (!combo || !lockMap || !gridType) return;

        // Parse lock map like "VehicleGrid:always;RbGrid:notNew"
        const rules = lockMap.split(";").reduce(function (acc, pair) {
            const [key, val] = pair.split(":");
            if (key && val) acc[key.trim()] = val.trim();
            return acc;
        }, {});

        const lockRule = rules[gridType] || "none";
        let shouldLock = false;

        if (lockRule === "always") shouldLock = true;
        else if (lockRule === "notNew" && !model.isNew?.()) shouldLock = true;
        else if (lockRule === "newOnly" && model.isNew?.()) shouldLock = true;

        if (shouldLock) {
            combo.enable(false);
            combo.wrapper.addClass("field-disabled");
            combo.input.prop("readonly", true);
        }
    });
});
