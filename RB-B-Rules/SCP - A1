✅ Step 1: Attach the save Event
Add the Save event handler to your grid config:

csharp
Copy
Edit
.Events(events =>
{
    events.DataBound("onGridDataBound");
    events.Save("onGridCellSave"); // new handler
})
✅ Step 2: Add the onGridCellSave Function in JavaScript
javascript
Copy
Edit
function onGridCellSave(e) {
    const fieldName = e.column.field;
    const editableFields = ["CoreCost", "Qty", "Percentage"];

    if (editableFields.includes(fieldName)) {
        const model = e.model;

        const coreCost = parseFloat(model.CoreCost) || 0;
        const qty = parseFloat(model.Qty) || 0;
        const percentage = parseFloat(model.Percentage) || 0;

        const coreCharge = qty * coreCost * percentage;
        const totalCost = (coreCost * qty * percentage) - coreCharge;

        model.set("CoreCharge", coreCharge);
        model.set("TotalCost", totalCost);

        // Optional: Notify the user
        if (window.kendo && kendo.ui && kendo.ui.Notification) {
            const notification = $("#notification").data("kendoNotification");
            if (notification) {
                notification.show("Total Cost recalculated.", "info");
            }
        }
    }
}
