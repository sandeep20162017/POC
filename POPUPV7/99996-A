Example:

.Pageable(p => p
    .Numeric(true)       // Show numeric page buttons
    .Input(false)        // Hide input box
    .PreviousNext(true)  // Show next/prev arrows
)
.Scrollable(s => s.Virtual(true).Height("400px"))
.Events(e => e.DataBound("onGridDataBound"))


And then in JavaScript:

function onGridDataBound(e) {
    var grid = e.sender;
    var pageSize = grid.dataSource.pageSize();
    var skip = grid.dataSource.skip(); // number of records skipped
    var currentPage = Math.floor(skip / pageSize) + 1;

    // Remove previous highlight
    grid.wrapper.find(".k-pager-numbers li").removeClass("k-state-selected");

    // Highlight the current page
    grid.wrapper.find(".k-pager-numbers li[data-page='" + currentPage + "']")
        .addClass("k-state-selected");
}


This way, as you scroll (virtual paging triggers dataBound), the pager updates and shows the active page.

2. Fixing Page Size to 7

Instead of giving a dropdown with 10, 20, 50, just hardcode the page size:

.Pageable(p => p.PageSizes(false)) // hides the page size dropdown
.DataSource(ds => ds.Ajax()
    .PageSize(7) // fixed page size
    .ServerOperation(true)
)


That ensures the user canâ€™t change page size. It will always stay at 7 rows.
