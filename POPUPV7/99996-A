How to Fix It

Instead of only relying on DataBound, you should also hook into the change event of the DataSource (fires whenever the data view changes) or even the grid’s scroll event.

Here’s an approach that works reliably:

.Events(e => e.DataBound("onGridDataBound")
               .DataBinding("onGridDataBinding"))


And in JavaScript:

function updatePagerHighlight(grid) {
    var pageSize = grid.dataSource.pageSize();
    var skip = grid.dataSource.skip(); // number of items skipped
    var currentPage = Math.floor(skip / pageSize) + 1;

    // clear old highlight
    grid.wrapper.find(".k-pager-numbers li").removeClass("k-state-selected");

    // apply highlight
    grid.wrapper.find(".k-pager-numbers li[data-page='" + currentPage + "']")
        .addClass("k-state-selected");
}

function onGridDataBound(e) {
    updatePagerHighlight(e.sender);
}

function onGridDataBinding(e) {
    // Fires right before data is fetched
    updatePagerHighlight(e.sender);
}

Alternative: Directly Hook Into Scroll

If you want real-time sync while scrolling, attach to the grid’s scroll container:

$("#MyGrid .k-grid-content").on("scroll", function () {
    var grid = $("#MyGrid").data("kendoGrid");
    updatePagerHighlight(grid);
});
