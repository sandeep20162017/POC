@model BCES.Models.Parts.LabourDetailsRebuiltPartsViewModel

<div class="scparts-popup-style">
    <!-- Popup title -->
    <div class="section-title">
        @(Model.Id == 0 ? "Add New Labour Details" : "Edit Labour Details")
    </div>

    <!-- Action buttons -->
    <div class="popup-action">
        <button id="btnSaveLabour" class="k-button k-primary" type="button" onclick="saveLabourDeatilsPopup()">Update</button>
        <button id="btnCancelLabour" class="k-button" type="button" onclick="cancelLabourDetailsPopup()">Cancel</button>
    </div>

    <!-- Main form container -->
    <div class="form-container">
        <!-- Labour Type Information -->
        <div class="section-title">Labour Type Information</div>
        <div class="form-row">
            <!-- Labour Type -->
            <div class="form-group double-width">
                @Html.LabelFor(m => m.LabourDefn, "Labour Type", new { @class = "form-label required-label" })
                @Html.EditorFor(m => m.LabourDefn, "ComboBoxEditor", new {
                    LockMap = "",
                    AdditionalAttributes = new Dictionary<string, object> {
                        { "class", "form-control required-cell" },
                        { "required", "required" }
                    }
                })
            </div>

            <!-- Task -->
            <div class="form-group double-width">
                @Html.LabelFor(m => m.Task, "Task", new { @class = "form-label required-label" })
                @Html.EditorFor(m => m.Task, "ComboBoxEditor", new {
                    LockMap = "",
                    AdditionalAttributes = new Dictionary<string, object> {
                        { "class", "form-control required-cell" },
                        { "required", "required" }
                    }
                })
            </div>

            <!-- Cost Centre -->
            <div class="form-group double-width">
                @Html.LabelFor(m => m.CostCentre, "Cost Centre", new { @class = "form-label" })
                @Html.EditorFor(m => m.CostCentre, "ComboBoxEditor", new {
                    LockMap = "",
                    AdditionalAttributes = new Dictionary<string, object> {
                        { "class", "form-control" }
                    }
                })
            </div>
        </div>

        <!-- Labour Usage -->
        <div class="section-title">Labour Usage</div>
        <div class="form-row">
            <!-- Usage % -->
            <div class="form-group double-width">
                @Html.LabelFor(m => m.Usage, "%", new { @class = "form-label required-label" })
                @(Html.Kendo().NumericTextBoxFor(m => m.Usage)
                    .Format("n0").Min(0).Max(100)
                    .HtmlAttributes(new { @class = "form-control required-cell", required = "required" }))
            </div>

            <!-- Hours -->
            <div class="form-group double-width">
                @Html.LabelFor(m => m.LabourHrs, "Hrs", new { @class = "form-label required-label" })
                @(Html.Kendo().NumericTextBoxFor(m => m.LabourHrs)
                    .Min(0).Max(132).Format("n0")
                    .HtmlAttributes(new { @class = "form-control required-cell" }))
            </div>

            <!-- Minutes -->
            <div class="form-group double-width">
                @Html.LabelFor(m => m.LabourMins, "Min", new { @class = "form-label required-label" })
                @(Html.Kendo().NumericTextBoxFor(m => m.LabourMins)
                    .Min(0).Max(59).Format("n0")
                    .HtmlAttributes(new { @class = "form-control required-cell" }))
            </div>
        </div>

        <!-- History -->
        <div class="section-title">History</div>
        <div class="form-row">
            <!-- Modified By -->
            <div class="form-group double-width">
                @Html.LabelFor(m => m.LastModifiedBy, "Modified By", new { @class = "form-label" })
                @(Html.Kendo().TextBoxFor(m => m.LastModifiedBy)
                    .HtmlAttributes(new { @readonly = "readonly", @class = "form-control" }))
            </div>

            <!-- Modified Date -->
            <div class="form-group double-width">
                @Html.LabelFor(m => m.DateRevised, "Modified Date", new { @class = "form-label" })
                @(Html.Kendo().TextBoxFor(m => m.DateRevised)
                    .HtmlAttributes(new { @readonly = "readonly", @class = "form-control" }))
            </div>
        </div>
    </div>
</div>
