Generate MakevsBuy cost estimate query. It should have Make vs Buy #, MB number, keyword, description, bus type, # of buses using comp,vendor part #, buy code, rebuilt_code, core-code, annual usage, benchnumber, sample provided, recommendation, reman ex cost, external cost, new cost, internal cost, sop number, core cost, job number, date opened 


SELECT 
    ROW_NUMBER() OVER (ORDER BY RBM.MmsStockCode) AS MakeVsBuyNumber,
    RBM.MmsStockCode AS MBNumber,
    KM.Keyword,
    KM.DetailedDesc AS Description,
    VL.VehSeriesCode AS BusType,
    COUNT(RLOB.VehicleListId) AS NumberOfBusesUsingComp,
    RBM.ItemRefNumber AS VendorPartNumber,
    RBM.BuyNewCost AS BuyCode,
    RBM.RebuiltStockNum AS RebuiltCode,
    RBM.CorePartNum AS CoreCode,
    SUM(CAST(VL.NumOfVehicles AS INT)) AS AnnualUsage,
    RBM.JobNumber AS BenchNumber,
    RBM.RemanCost AS RemanExCost,
    RBM.ExternalCost,
    RBM.BuyNewCost AS NewCost,
    RBM.SopNumber,
    RBM.CoreCharge AS CoreCost,
    RBM.JobNumber,
    RBM.DateModified AS DateOpened
FROM 
    SCES.RbMasterlist RBM
INNER JOIN 
    SCES.RbListOfBuses RLOB ON RBM.RebuiltStockNum = RLOB.RebuiltStockNum
INNER JOIN 
    SCES.VehicleList VL ON RLOB.VehicleListId = VL.VehicleListId
INNER JOIN 
    SCES.KitsMasterlist KM ON RBM.CorePartNum = KM.PartNo
GROUP BY 
    RBM.MmsStockCode,
    KM.Keyword,
    KM.DetailedDesc,
    VL.VehSeriesCode,
    RBM.ItemRefNumber,
    RBM.BuyNewCost,
    RBM.RebuiltStockNum,
    RBM.CorePartNum,
    RBM.JobNumber,
    RBM.RemanCost,
    RBM.ExternalCost,
    RBM.SopNumber,
    RBM.CoreCharge,
    RBM.JobNumber,
    RBM.DateModified;
GO