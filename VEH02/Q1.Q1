You are telerik ASP.NEt core and aSp.NEt core expert. Pls help fix grid error. Details below.
I have Id (Identity column in model).  Pls help fix.
@model IEnumerable<BCES.Models.Parts.LabourDetailsRebuiltPartsViewModel>

@{
    ViewData["Title"] = "Labour Details";
}

<h6>Labour Details</h6>

@(
Html.Kendo().Grid<BCES.Models.Parts.LabourDetailsRebuiltPartsViewModel>()
               @*  .Name("LabourDetailsGrid_{@ViewBag.PartNum}") *@
                .Name($"LabourDetailsGrid_{ViewBag.PartNum}") //fix this
                //visual save changes
                .Events(events => events
                    .DataBound("onLabourGridDataBound")
                    .SaveChanges("onLabourGridSave")
                    .Edit("onGridEdit")
                    .Save("onGridCellSave") //validation ssk23
                )
                .Columns(columns =>
                {
                    columns.Bound(c => c.Id);//.Title("Id").Hidden(true);
                    columns.Bound(c => c.LabourDefn).Title("Labour Type").EditorTemplateName("ComboBoxEditor").Width(150)
                    .HtmlAttributes(new
                    {
                        //data_field = "LabourDefn",
                        data_partnum = ViewBag.PartNum
                    });
                    columns.Bound(c => c.CostCentre).Title("Cost Centre").EditorTemplateName("ComboBoxEditor").Width(150);
                    columns.Bound(c => c.Task).Title("Labour Task").EditorTemplateName("ComboBoxEditor").Width(100);
                    columns.Bound(c => c.Usage).Title("%").Width(150);
                    //  columns.Bound(c => c.TimeAddition).Title("Time").Format("{0:N2}");
                    // columns.Bound(c => c.RatePerHour).Title("Rate Per Hour").Format("{0:N2}");
                    //columns.Bound(c => c.HrsReqd).Title("Hrs Reqd").Format("{0:N2}");
                    columns.Bound(c => c.LabourHrs).Title("Labour Hrs").Width(50);
                    columns.Bound(c => c.LabourMins).Title("Labour Mins").Width(50);
                    columns.Bound(c => c.LastModifiedBy).Title("Modified By").Width(170);
                    columns.Bound(c => c.DateRevised).Title("Modified Date").Width(170)
                    .ClientTemplate("#=  DateRevised !== 0 ? formatToEST(DateRevised) : '(System Generated)' #"); ; //  format dateTime;;
                    // columns.Command(command => command.Edit()).Title("Actions");
                    columns.Command(command =>
                    {
                        if (@ViewBag.RoleId == 1)
                        {
                            // command.Edit().Text(" ").IconClass("k-icon k-i-edit").HtmlAttributes(new { title = "Edit" }); // Edit button with tooltip
                        }
                        if (@ViewBag.RoleId == 1)
                        {

                            command.Custom("Delete")
                             .Click("showDeleteConfirmation")
                             .Text(" ")
                             .IconClass("k-icon k-i-delete")
                             .HtmlAttributes(new
                             {
                                 @class = "text-danger",
                                 title = "Delete",
                                 data_grid = $"LabourDetailsGrid_{ViewBag.PartNum}",
                                 data_url = Url.Action("DeleteLabourDetail", "LabourDetails"),
                                 data_id_field = "Id",
                                 data_grid_type = "VehicleGrid"
                             });
                        }
                    }).Width(100);
                })
                .ToolBar(toolbar =>
                {
                    if (@ViewBag.RoleId == 1)
                    {
                        toolbar.Create();
                        toolbar.Save();
                    }
                })
                .Editable(editable => editable.Mode(GridEditMode.InCell))
                .Pageable()
                .Sortable()
                .Resizable(r => r.Columns(true))
                .Scrollable(s => s.Height("auto"))
                .Resizable(r => r.Columns(true))
                .Scrollable()
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Batch(true)
                    .ServerOperation(false)
                    .Model(model =>
                    {
                        model.Id(c => c.Id);
                        model.Field(c => c.Id);
                       // model.Field(c => c.LastModifiedBy).Editable(false);
                      //  model.Field(c => c.DateRevised).Editable(false);
                    })
                    .Events(events =>
                    {
                          events.RequestEnd($"function(e){{ onRequestEnd(e, 'LabourDetailsGrid_{ViewBag.PartNum}'); }}");
                        events.Error("onDataSourceError");
                      

                    })

                    
        .Read(read => read.Url(Url.Action("GetLabourDetails", "LabourDetails") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Get))
        .Create(create => create.Url(Url.Action("CreateLabourDetail", "LabourDetails") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
        
            .Update(update => update.Url(Url.Action("UpdateLabourDetail", "LabourDetails") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType)
            .Type(HttpVerbs.Post))
            
            
        .Destroy(delete => delete.Url(Url.Action("DeleteLabourDetail", "LabourDetails") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
    )
)
==========================
Additional details :
var grid = $("#ArchivedVehicleGrid").data("kendoGrid");
console.warn("Before Arch Initializaion " );
   grid.bind("detailInit", function (e) {
       console.warn("Detail initialization started for ArchVehicleList: " + e.data.ArchVehicleListId);
       console.log("Detail initialization started for VehicleList: " + e.data.VehicleListId);
       var tabUrlLabourDetail = '@Url.Action("LabourDetailsPartial", "Vehicles")' + '?oldid=' + e.data.VehicleListId + "&gridType=ArchivedVehicleGrid" + "&id=" + e.data.ArchVehicleListId;
       
       console.warn("Before Get the container for the detail template ArchVehicleList: " + e.data.ArchVehicleListId);
       // Get the container for the detail template
       var container = e.detailCell.find("#archived-detail-template-" + e.data.ArchVehicleListId);
       console.warn("After Get the container for the detail template ArchVehicleList: " + e.data.ArchVehicleListId);

       console.warn("Before Load the TabStrip structure ArchVehicleList: " + e.data.ArchVehicleListId);

       // Load the TabStrip structure
       container.html(`
                                   <div id="archived-tabstrip-container-${e.data.ArchVehicleListId}">
                               <ul>
                                    <li class="k-state-active">Labour Details</li>
                                   
                               </ul>
                                <div id="archived-labour-details-content" +  e.data.ArchVehicleListId></div>
                               
                           </div>
                       `);
       console.warn("After Load the TabStrip structure ArchVehicleList: " + e.data.ArchVehicleListId);
       // Initialize the Kendo TabStrip
       var tabStrip = $("#archived-tabstrip-container-" + e.data.ArchVehicleListId).kendoTabStrip({
           animation: { open: { effects: "fadeIn" } },
           select: function (e) {
               tabIndex = $(e.item).index(); // Get the index of the selected tab
               tabStripName = e.sender.element.attr("id"); //ssk tabStripName
                console.warn("tabStripName: " + tabStripName);
               // Load the partial view content for the selected tab
               tabUrl = tabIndex == 0 ? tabUrlLabourDetail :
                   tabIndex == 1 ? tabUrlLabourHourSummary :
                       tabIndex == 2 ? tabUrlMaterialCostSummary :
                           tabIndex == 3 ? tabScPartDetail :
                               tabIndex == 4 ? tabUrlNscDetail :
                                   tabIndex == 5 ? tabUrlRbPartDetail :
                                       tabUrlTotalCost;

               $.get(tabUrl)
                   .done(function (data) {
                       $(e.contentElement).html(data);
                       console.error($(e.contentElement).html(data));
                       kendo.init($(e.contentElement)); // Reinitialize Kendo widgets
                   })
                   .fail(function (xhr, status, error) {
                       console.error("Error loading tab content: ", error);
                       if (notification) {
                           notification.show("An error occurred while loading the tab content. Please try again.", "error");
                       } else {
                           console.error("Notification is not initialized.");
                       }
                   });
           }
       }).data("kendoTabStrip");

       console.warn("Load the first tab's content ");
       // Load the first tab's content
       $.get(tabUrlLabourDetail)
           .done(function (data) {
               $("#archived-labour-details-content").html(data);
               kendo.init($("#archived-labour-details-content" +  e.data.ArchVehicleListId)); // Reinitialize Kendo widgets
           })
           .fail(function (xhr, status, error) {
               console.error("Error loading initial tab content: ", error);
               if (notification) {
                   notification.show("An error occurred while loading the initial tab content. Please try again.", "error");
               } else {
                   console.error("Notification is not initialized.");
               }
           });
    });
    console.warn("archived end");
}
@section Scripts {
    
}
Model :
public class LabourDetailsRebuiltPartsViewModel
{
    
    public int Id { get; set; }
...
Additional details :
GetLabourDetails didn't get called.
public IActionResult LabourDetailsPartial([FromQuery] string id, [FromQuery] string gridType)
{
    //set 
    ViewBag.PartNum = id;
    if (gridType == null)
    {
        ViewBag.GridType = "VehicleGrid";
    }
    else 
    {
        ViewBag.GridType = gridType;

    }
    var model = new List<LabourDetailsRebuiltPartsViewModel> { };
    return PartialView("_LabourDetails", model);
}
__LabourDetails.cshtml :
.Read(read => read.Url(Url.Action("GetLabourDetails", "LabourDetails") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Get))
LabourDetaisController.cs :
public async Task<IActionResult> GetLabourDetails([DataSourceRequest] DataSourceRequest request, [FromQuery] string id, [FromQuery] string gridType)
{
