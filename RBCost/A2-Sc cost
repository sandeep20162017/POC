let isUpdating = false;

function onGridCellSave(e) {
    const field = e.container.find("input").attr("name");
    const value = e.values[field];

    if (field === "Usage" || field === "Percentage") {
        if (value < 0 || value > 100) {
            e.preventDefault(); // cancel save
            notifyValidationError("Usage % must be between 0 and 100.");
            clearCell(e.container);
            return;
        }
    }

    if (field === "LabourMins") {
        if (value < 0 || value > 59) {
            e.preventDefault(); // cancel save
            notifyValidationError("Minutes must be between 0 and 59.");
            clearCell(e.container);
            return;
        }
    }

    if (!isUpdating && ["CoreCost", "Qty", "Percentage"].includes(field)) {
        isUpdating = true;

        const model = e.model;

        const coreCost = parseFloat(model.CoreCost) || 0;
        const qty = parseFloat(model.Qty) || 0;
        const percentage = parseFloat(model.Percentage) || 0;

        const coreCharge = qty * coreCost * percentage;
        const totalCost = (coreCost * qty * percentage) - coreCharge;

        // Temporarily detach event to avoid recursion
        setTimeout(() => {
            model.set("CoreCharge", coreCharge);
            model.set("TotalCost", totalCost);
            isUpdating = false;
        }, 0);
    }
}
