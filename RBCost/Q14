All the columns required for stored procs ar in the row (calculated) and are in the view model. Pls suggest an easy way to pass these values to tored proc.
Ca I pass thsose from JS aas .data to stored proc? 
My JS :
function onArchiveClick(e) {
    e.preventDefault();
    var grid = $("#VehicleGrid").data("kendoGrid");
   
    var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));

    // Call the controller action with the entire dataItem as JSON
    $.ajax({
        url: '@Url.Action("ArchiveVehicleDetails", "Vehicles")',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(dataItem),
        success: function (data) {
            // Display a Kendo Notification
            var notification = $("#notification").kendoNotification({
                position: {
                    pinned: true,
                    top: 50,
                    right: 50
                },
                autoHideAfter: 5000, // Hide after 5 seconds
                stacking: "down"
            }).data("kendoNotification");

            notification.show("Archived successfully.", "info");
        },
        error: function (xhr, status, error) {
            console.error("Error archiving: ", error);
        }
    });
}
Controlller :
public async Task<IActionResult> ArchiveVehicleDetails([FromBody] VehicleViewModel vehicleViewModel)
{

    try
    {
        var parameters = new
        {

            LinkNumber = vehicleViewModel.VehicleListId,
            TypeId = "BUS", // Default value from stored proc
            Username = ViewBag.UserName?.ToString().ToUpper() ?? "SYSTEM"
        };

        await _dbConnection.ExecuteAsync(
            "[SBCES].[ArchiveVehicleEstimate]",
            parameters,
            commandType: CommandType.StoredProcedure
        );

        return Json(new
        {
            success = true,
            message = $"Archived Vehicle List Id: {vehicleViewModel.VehicleListId}",
            vehicleViewModel.VehicleListId
        });
    }
    catch (Exception ex)
    {
        //log exception 
        return Json(new
        {
            success = false,
            message = $"Archive failed: {ex.Message}"
        });
    }
}
