‚úÖ Best Fix: Preload Total Cost tab in the background
Here‚Äôs how to resolve this elegantly without changing tab behavior for users:

‚úÖ Step-by-step Fix
üîÅ 1. Preload Total Cost tab once on detailInit, not on tab click
In detailInit, fetch Total Cost tab content right after loading the first tab (Labour Details):

js
Copy
Edit
// Step 1: Load the first tab content (Labour Details)
$.get(tabUrlLabourDetail)
    .done(function (data) {
        $("#labour-details-content-" + vehicleListId).html(data);
        kendo.init($("#labour-details-content-" + vehicleListId)); // Reinitialize Kendo widgets
    });

// ‚úÖ Step 2: ALSO preload Total Cost tab in the background
$.get(tabUrlTotalCost)
    .done(function (data) {
        $("#total-cost-content-" + vehicleListId).html(data);
        kendo.init($("#total-cost-content-" + vehicleListId)); // init TotalCostGrid early
        console.log("Total Cost tab preloaded for VehicleListId:", vehicleListId);
    })
    .fail(function (xhr, status, error) {
        console.error("Error preloading Total Cost tab:", error);
    });
‚úÖ This ensures the grid (e.g., #TotalCostInRbModelGrid_{VehicleListId}) exists in the DOM by the time the Archive button is clicked, even if the user never selects the Total Cost tab.

‚úÖ 2. Fix labour-details-content ID bug
You currently have:

js
Copy
Edit
$("#labour-details-content").html(data);
But the content div is named:

html
Copy
Edit
<div id="labour-details-content-${vehicleListId}"></div>
So correct this line to:

js
Copy
Edit
$("#labour-details-content-" + vehicleListId).html(data);
