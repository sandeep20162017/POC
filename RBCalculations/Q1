You are ASP.NET core v 8.0 and Telerik ASp.NET Core expert.
Query returns corect dataset i SQL server, but here
 var model = await GetLabourHourSummaryInRbPartsData(rebuiltPartNum, gridType);
model is null.
Pls assist me fixing this

Model :
using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;

namespace BCES.Models.Parts
{
    public class LabourDetailsRebuiltPartsViewModel
    {
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int Id { get; set; }

        [StringLength(50)]
        public string? LabourDefn { get; set; }

        public DateTime? DateEntered { get; set; }

        [StringLength(25)]
        public string? LinkNumber { get; set; }

        [StringLength(5)]
        public string? TypeId { get; set; }

        [StringLength(5)]
        public string? CostCentre { get; set; }

        [StringLength(50)]
        public string? Task { get; set; }

        public int? LabourType { get; set; }

        [StringLength(25)]
        public string? Usage { get; set; }

        public decimal? RatePerHour { get; set; }

        public int LabourHrs { get; set; }
        public int LabourMins { get; set; }

        [StringLength(25)]
        public string? HrsReqd { get; set; }

        [StringLength(25)]
        public string? AdjHrs { get; set; }

        public DateOnly? DateRevised { get; set; }  // Using DateOnly for date (no time component)

        [Column(TypeName = "numeric(18,2)")]
        public decimal? TimeAddition { get; set; }

        [StringLength(30)]
        public string? RebuiltPartNum { get; set; }

        [StringLength(25)]
        public string? LastModifiedBy { get; set; }


    }

}
Controller :
[HttpGet]
[AllowAnonymous]
public async Task<JsonResult> GetLabourHourSummaryInRbParts([DataSourceRequest] DataSourceRequest request, [FromQuery] string rebuiltPartNum,  [FromQuery] string gridType)
{
    // Fetch data for the grid

    if (string.IsNullOrEmpty(rebuiltPartNum))
    {
        return null;// BadRequest("rebuiltPartNum is required.");
    }

    // Fetch data for the grid using the rebuiltPartNum
    var model = await GetLabourHourSummaryInRbPartsData(rebuiltPartNum, gridType);

   

    return Json(model.ToDataSourceResult(request));

}
[AllowAnonymous]
private async Task<IEnumerable<LabourDetailsRebuiltPartsViewModel>> GetLabourHourSummaryInRbPartsData(string RebuiltPartNum, string gridType)
{
    //TODO use GridType
    try
    {

       
        var query = @"
                    SELECT [Id]
                      ,[LabourDefn]
                      ,[DateEntered]
                      ,[LinkNumber]
                      ,[TypeId]
                      ,[CostCentre]
                      ,[Task]
                      ,[LabourType]
                      ,[Usage]
                      ,[HrsReqd]
                      ,[AdjHrs]
                      ,[DateRevised]
                      ,[TimeAddition]
                      ,[RebuiltPartNum]
                      ,[LastModifiedBy]
                  FROM [CES].[SBCES].[EmployeeLabour]
                  WHERE LinkNumber ='" + RebuiltPartNum + "' AND TypeId = 'RB'";

                     

        return await _dbConnection.QueryAsync<LabourDetailsRebuiltPartsViewModel>(query);

    }
    catch (Exception ex)
    {
        return null;
    }
}
