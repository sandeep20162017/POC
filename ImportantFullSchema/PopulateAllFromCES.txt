-- Insert into OEMKits
IF OBJECT_ID('BCES.OEMKits', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.OEMKits (PartNumber, KitDetailedDescription, BriefDescription)
    SELECT TOP 10 PartNumber, DetailedDesc, BriefDesc
    FROM CES.KITS_MASTERLIST;
END

-- Insert into SalaryRates
IF OBJECT_ID('BCES.SalaryRates', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.SalaryRates (WageGroup, RatePerHour, DateEntered)
    SELECT TOP 10 WAGE_GROUP, RATE_PER_HOUR, DATE_ENTERED
    FROM CES.EMPLOYEE_SALARIES;
END

-- Insert into EmployeeLabour
IF OBJECT_ID('BCES.EmployeeLabour', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.EmployeeLabour (LabourDefn, DateEntered, LinkNumber, TypeID, CostCentre, Task, LabourType, Usage, HrsReqd, AdjHrs, DateRevised, TimeAddition, RebuiltPartNum, LastModifiedBy, LabourTypeID, SalaryRateID)
    SELECT TOP 10 LABOUR_DEFN, DATE_ENTERED, LINK_NUMBER, TYPEID, COSTCENTRE, TASK, LABOUR_TYPE, USAGE, HRS_REQD, ADJ_HRS, DATE_REVISED, TIME_ADDITION, REBUILT_PART_NUM, LAST_MODIFIED_BY, LT.LabourTypeID, SR.SalaryRateID
    FROM CES.EMPLOYEE_LABOUR EL
    JOIN BCES.LabourTypes LT ON EL.LABOUR_TYPE = LT.LabourDefinition
    JOIN BCES.SalaryRates SR ON EL.LABOUR_TYPE = SR.WageGroup;
END

-- Insert into MakeVsBuyEstimates
IF OBJECT_ID('BCES.MakeVsBuyEstimates', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.MakeVsBuyEstimates (MakeVsBuyNumber, Keyword, Description, NumberOfBusUsingComponent, VendorPartNumber, MMSBuyCode, RebuiltCode, CoreCode, CoreCost, ProjectedAnnualUsage, BenchNumber, SOPNumber, JobNumber, ExternalRebuiltCost, RemanufacturedExchangeCost, BuyNewCost, VehicleEstimateID)
    SELECT TOP 10 MB_NUMBER, KEYWORD, DESCRIPTION, NUM_BUS_COMP, VENDOR_PART_NUM, BUY_CODE, REBUILD_CODE, CORE_CODE, CORE_COST, ANNUAL_USAGE, BENCH_NUMBER, SOP_NUMBER, JOB_NUMBER, EXTERNAL_COST, REMAN_COST, BUY_NEW_COST, VE.VehicleEstimateID
    FROM CES.MB_LIST MBL
    JOIN BCES.VehicleEstimates VE ON MBL.MB_NUMBER = VE.VehicleSeriesCode;
END

-- Insert into LabourTypes
IF OBJECT_ID('BCES.LabourTypes', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.LabourTypes (LabourDefinition, RatePerHour, HoursPerWeek, DateEntered, OverheadType)
    SELECT TOP 10 LABOUR_DEFN, RATE_PER_HOUR, HRS_PER_WEEK, DATE_ENTERED, OVERHEADTYPE
    FROM CES.EMPL_CLASS;
END

-- Insert into Transmissions
IF OBJECT_ID('BCES.Transmissions', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.Transmissions (Name)
    SELECT TOP 10 NAME
    FROM CES.TRANSMISSIONS;
END

-- Insert into Differentials
IF OBJECT_ID('BCES.Differentials', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.Differentials (Name)
    SELECT TOP 10 NAME
    FROM CES.DIFFERENTIAL;
END

-- Insert into Engines
IF OBJECT_ID('BCES.Engines', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.Engines (Name)
    SELECT TOP 10 NAME
    FROM CES.ENGINES;
END

-- Insert into BusSeries
IF OBJECT_ID('BCES.BusSeries', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.BusSeries (BusSeriesCode, BusSeriesDescription)
    SELECT TOP 10 BusSeriesCode, BusSeriesDescription
    FROM CES.BusSeries;
END

-- Insert into PartTypes
IF OBJECT_ID('BCES.PartTypes', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.PartTypes (PartTypeName)
    SELECT TOP 10 PartTypeName
    FROM CES.PartTypes;
END

-- Insert into CostCentres
IF OBJECT_ID('BCES.CostCentres', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.CostCentres (CostCentreCode, CostCentreDescription)
    SELECT TOP 10 CostCentreCode, CostCentreDescription
    FROM CES.CostCentres;
END

-- Insert into Suppliers
IF OBJECT_ID('BCES.Suppliers', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.Suppliers (SupplierName, SupplierCode, SupplierContact)
    SELECT TOP 10 SupplierName, SupplierCode, SupplierContact
    FROM CES.Suppliers;
END

--------------
-- Insert into VehicleEstimates
IF OBJECT_ID('BCES.VehicleEstimates', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.VehicleEstimates (VehicleSeriesCode, NumberOfVehicles, ProjectDescription, DateEntered, EnteredBy, ModifiedLastBy, Make, Model, Year, EngineID, Transmission, Differential, SOPNumber, YearMakeModelID, TransmissionID, DifferentialID)
    SELECT TOP 10 VEH_SERIES_CODE, NUM_OF_VEHICLES, PROJ_DESC, DATE_ENTERED, ENTERED_BY, MODIFIED_LAST_BY, MAKE, MODEL, YEAR, E.EngineID, TRANSMISSION, DIFFERENTIAL, SOPNUMBER, YMM.YearMakeModelID, T.TransmissionID, D.DifferentialID
    FROM CES.VEHICLE_LIST VL
    JOIN BCES.Engines E ON VL.ENGINE = E.Name
    JOIN BCES.YearMakeModel YMM ON VL.MAKE = YMM.Make AND VL.MODEL = YMM.Model AND VL.YEAR = YMM.Year
    JOIN BCES.Transmissions T ON VL.TRANSMISSION = T.Name
    JOIN BCES.Differentials D ON VL.DIFFERENTIAL = D.Name;
END

-- Insert into RebuiltParts
IF OBJECT_ID('BCES.RebuiltParts', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.RebuiltParts (RebuiltStockCode, Description, Keyword, JobNumber, MMSBuyCode, ToreCode, CoreCost, SOPNumber, BusSeriesID, PartTypeID)
    SELECT TOP 10 RebuiltStockCode, Description, Keyword, JobNumber, MMSBuyCode, ToreCode, CoreCost, SOPNumber, BS.BusSeriesID, PT.PartTypeID
    FROM CES.RebuiltParts RP
    JOIN BCES.BusSeries BS ON RP.BusSeriesCode = BS.BusSeriesCode
    JOIN BCES.PartTypes PT ON RP.PartTypeName = PT.PartTypeName;
END

-- Insert into NonStockCodedParts
IF OBJECT_ID('BCES.NonStockCodedParts', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.NonStockCodedParts (RebuiltPartID, SupplierID, PartDescription, Keyword, Quantity, UnitCost, CoreCost, CostCentreID, SupplierName, SupplierNumber, PartUnitCost)
    SELECT TOP 10 RP.RebuiltPartID, S.SupplierID, PartDescription, Keyword, Quantity, UnitCost, CoreCost, CC.CostCentreID, SupplierName, SupplierNumber, PartUnitCost
    FROM CES.NonStockCodedParts NSCP
    JOIN BCES.RebuiltParts RP ON NSCP.RebuiltStockCode = RP.RebuiltStockCode
    JOIN BCES.Suppliers S ON NSCP.SupplierCode = S.SupplierCode
    JOIN BCES.CostCentres CC ON NSCP.CostCentreCode = CC.CostCentreCode;
END

-- Insert into StockCodedParts
IF OBJECT_ID('BCES.StockCodedParts', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.StockCodedParts (RebuiltPartID, MMSStockCode, PartType, PartDescription, CostCentreID, PercentUsage, Quantity, LastRevised, CoreCost)
    SELECT TOP 10 RP.RebuiltPartID, MMSStockCode, PartType, PartDescription, CC.CostCentreID, PercentUsage, Quantity, LastRevised, CoreCost
    FROM CES.StockCodedParts SCP
    JOIN BCES.RebuiltParts RP ON SCP.RebuiltStockCode = RP.RebuiltStockCode
    JOIN BCES.CostCentres CC ON SCP.CostCentreCode = CC.CostCentreCode;
END

-- Insert into Materials
IF OBJECT_ID('BCES.Materials', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.Materials (RebuiltPartID, MaterialType, Quantity, PercentUsage, UnitCost, RebuiltNumber, Keyword, Description, LastRevised, PartCost)
    SELECT TOP 10 RP.RebuiltPartID, MaterialType, Quantity, PercentUsage, UnitCost, RebuiltNumber, Keyword, Description, LastRevised, PartCost
    FROM CES.Materials M
    JOIN BCES.RebuiltParts RP ON M.RebuiltStockCode = RP.RebuiltStockCode;
END

-- Insert into LabourTasks
IF OBJECT_ID('BCES.LabourTasks', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.LabourTasks (RebuiltPartID, TaskDescriptionID, LabourPosition, CostCentreID, PercentUsage, HoursRequiredH, HoursRequiredM)
    SELECT TOP 10 RP.RebuiltPartID, LTD.LabourTaskDescriptionID, LabourPosition, CC.CostCentreID, PercentUsage, HoursRequiredH, HoursRequiredM
    FROM CES.LabourTasks LT
    JOIN BCES.RebuiltParts RP ON LT.RebuiltStockCode = RP.RebuiltStockCode
    JOIN BCES.LabourTaskDescriptions LTD ON LT.TaskDescription = LTD.TaskDescription
    JOIN BCES.CostCentres CC ON LT.CostCentreCode = CC.CostCentreCode;
END