-- Insert into VehicleEstimates
IF OBJECT_ID('BCES.VehicleEstimates', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.VehicleEstimates (VehicleSeriesCode, NumberOfVehicles, ProjectDescription, DateEntered, EnteredBy, ModifiedLastBy, Make, Model, Year, EngineID, Transmission, Differential, SOPNumber, YearMakeModelID, TransmissionID, DifferentialID)
    SELECT TOP 10 VEH_SERIES_CODE, NUM_OF_VEHICLES, PROJ_DESC, DATE_ENTERED, ENTERED_BY, MODIFIED_LAST_BY, MAKE, MODEL, YEAR, E.EngineID, TRANSMISSION, DIFFERENTIAL, SOPNUMBER, YMM.YearMakeModelID, T.TransmissionID, D.DifferentialID
    FROM CES.VEHICLE_LIST VL
    JOIN BCES.Engines E ON VL.ENGINE = E.Name
    JOIN BCES.YearMakeModel YMM ON VL.MAKE = YMM.Make AND VL.MODEL = YMM.Model AND VL.YEAR = YMM.Year
    JOIN BCES.Transmissions T ON VL.TRANSMISSION = T.Name
    JOIN BCES.Differentials D ON VL.DIFFERENTIAL = D.Name;
END

-- Insert into RebuiltParts
IF OBJECT_ID('BCES.RebuiltParts', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.RebuiltParts (RebuiltStockCode, Description, Keyword, JobNumber, MMSBuyCode, ToreCode, CoreCost, SOPNumber, BusSeriesID, PartTypeID)
    SELECT TOP 10 RebuiltStockCode, Description, Keyword, JobNumber, MMSBuyCode, ToreCode, CoreCost, SOPNumber, BS.BusSeriesID, PT.PartTypeID
    FROM CES.RebuiltParts RP
    JOIN BCES.BusSeries BS ON RP.BusSeriesCode = BS.BusSeriesCode
    JOIN BCES.PartTypes PT ON RP.PartTypeName = PT.PartTypeName;
END

-- Insert into NonStockCodedParts
IF OBJECT_ID('BCES.NonStockCodedParts', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.NonStockCodedParts (RebuiltPartID, SupplierID, PartDescription, Keyword, Quantity, UnitCost, CoreCost, CostCentreID, SupplierName, SupplierNumber, PartUnitCost)
    SELECT TOP 10 RP.RebuiltPartID, S.SupplierID, PartDescription, Keyword, Quantity, UnitCost, CoreCost, CC.CostCentreID, SupplierName, SupplierNumber, PartUnitCost
    FROM CES.NonStockCodedParts NSCP
    JOIN BCES.RebuiltParts RP ON NSCP.RebuiltStockCode = RP.RebuiltStockCode
    JOIN BCES.Suppliers S ON NSCP.SupplierCode = S.SupplierCode
    JOIN BCES.CostCentres CC ON NSCP.CostCentreCode = CC.CostCentreCode;
END

-- Insert into StockCodedParts
IF OBJECT_ID('BCES.StockCodedParts', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.StockCodedParts (RebuiltPartID, MMSStockCode, PartType, PartDescription, CostCentreID, PercentUsage, Quantity, LastRevised, CoreCost)
    SELECT TOP 10 RP.RebuiltPartID, MMSStockCode, PartType, PartDescription, CC.CostCentreID, PercentUsage, Quantity, LastRevised, CoreCost
    FROM CES.StockCodedParts SCP
    JOIN BCES.RebuiltParts RP ON SCP.RebuiltStockCode = RP.RebuiltStockCode
    JOIN BCES.CostCentres CC ON SCP.CostCentreCode = CC.CostCentreCode;
END

-- Insert into Materials
IF OBJECT_ID('BCES.Materials', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.Materials (RebuiltPartID, MaterialType, Quantity, PercentUsage, UnitCost, RebuiltNumber, Keyword, Description, LastRevised, PartCost)
    SELECT TOP 10 RP.RebuiltPartID, MaterialType, Quantity, PercentUsage, UnitCost, RebuiltNumber, Keyword, Description, LastRevised, PartCost
    FROM CES.Materials M
    JOIN BCES.RebuiltParts RP ON M.RebuiltStockCode = RP.RebuiltStockCode;
END

-- Insert into LabourTasks
IF OBJECT_ID('BCES.LabourTasks', 'U') IS NOT NULL
BEGIN
    INSERT INTO BCES.LabourTasks (RebuiltPartID, TaskDescriptionID, LabourPosition, CostCentreID, PercentUsage, HoursRequiredH, HoursRequiredM)
    SELECT TOP 10 RP.RebuiltPartID, LTD.LabourTaskDescriptionID, LabourPosition, CC.CostCentreID, PercentUsage, HoursRequiredH, HoursRequiredM
    FROM CES.LabourTasks LT
    JOIN BCES.RebuiltParts RP ON LT.RebuiltStockCode = RP.RebuiltStockCode
    JOIN BCES.LabourTaskDescriptions LTD ON LT.TaskDescription = LTD.TaskDescription
    JOIN BCES.CostCentres CC ON LT.CostCentreCode = CC.CostCentreCode;
END