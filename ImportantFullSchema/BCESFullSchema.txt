-- Create the BCES schema if it doesn't exist
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'BCES')
BEGIN
    EXEC('CREATE SCHEMA BCES');
END

-- Grant necessary permissions to the user
DECLARE @schemaName NVARCHAR(128) = 'BCES';
DECLARE @userName NVARCHAR(128) = 'your_username'; -- Replace with your username

EXEC sp_addrolemember 'db_owner', @userName; -- Grant db_owner role for simplicity, adjust as needed

-- Disable all foreign key constraints
EXEC sp_msforeachtable "ALTER TABLE ? NOCHECK CONSTRAINT all";

-- Drop existing tables if they exist
IF OBJECT_ID('BCES.VehicleEstimates', 'U') IS NOT NULL
    DROP TABLE BCES.VehicleEstimates;

IF OBJECT_ID('BCES.OEMKits', 'U') IS NOT NULL
    DROP TABLE BCES.OEMKits;

IF OBJECT_ID('BCES.MakeVsBuyEstimates', 'U') IS NOT NULL
    DROP TABLE BCES.MakeVsBuyEstimates;

IF OBJECT_ID('BCES.LabourTaskDescriptions', 'U') IS NOT NULL
    DROP TABLE BCES.LabourTaskDescriptions;

IF OBJECT_ID('BCES.LabourTypes', 'U') IS NOT NULL
    DROP TABLE BCES.LabourTypes;

IF OBJECT_ID('BCES.SalaryRates', 'U') IS NOT NULL
    DROP TABLE BCES.SalaryRates;

IF OBJECT_ID('BCES.YearMakeModel', 'U') IS NOT NULL
    DROP TABLE BCES.YearMakeModel;

IF OBJECT_ID('BCES.ApplicationSettings', 'U') IS NOT NULL
    DROP TABLE BCES.ApplicationSettings;

IF OBJECT_ID('BCES.Engines', 'U') IS NOT NULL
    DROP TABLE BCES.Engines;

IF OBJECT_ID('BCES.EmployeeLabour', 'U') IS NOT NULL
    DROP TABLE BCES.EmployeeLabour;

IF OBJECT_ID('BCES.LabourTasks', 'U') IS NOT NULL
    DROP TABLE BCES.LabourTasks;

IF OBJECT_ID('BCES.Materials', 'U') IS NOT NULL
    DROP TABLE BCES.Materials;

IF OBJECT_ID('BCES.NonStockCodedParts', 'U') IS NOT NULL
    DROP TABLE BCES.NonStockCodedParts;

IF OBJECT_ID('BCES.PartTypes', 'U') IS NOT NULL
    DROP TABLE BCES.PartTypes;

IF OBJECT_ID('BCES.RebuiltParts', 'U') IS NOT NULL
    DROP TABLE BCES.RebuiltParts;

IF OBJECT_ID('BCES.StockCodedParts', 'U') IS NOT NULL
    DROP TABLE BCES.StockCodedParts;

IF OBJECT_ID('BCES.Suppliers', 'U') IS NOT NULL
    DROP TABLE BCES.Suppliers;

IF OBJECT_ID('BCES.CostCentres', 'U') IS NOT NULL
    DROP TABLE BCES.CostCentres;

IF OBJECT_ID('BCES.Transmissions', 'U') IS NOT NULL
    DROP TABLE BCES.Transmissions;

IF OBJECT_ID('BCES.Differentials', 'U') IS NOT NULL
    DROP TABLE BCES.Differentials;


-- Create new tables

-- Table: Engines
-- Requirements Satisfied: R15, R16
CREATE TABLE BCES.Engines (
    EngineID INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(25)
);

-- Table: PartTypes
-- Requirements Satisfied: R1, R4, R6, R9, R10, R11, R12, R20, R21, R30, R31
IF OBJECT_ID('BCES.PartTypes', 'U') IS NULL
    CREATE TABLE BCES.PartTypes (
        PartTypeID INT IDENTITY(1,1) PRIMARY KEY,
        PartTypeName NVARCHAR(50)
    );

-- Table: Suppliers
-- Requirements Satisfied: R2, R5, R13, R14, R21, R25, R26, R32, R33
CREATE TABLE BCES.Suppliers (
    SupplierID INT IDENTITY(1,1) PRIMARY KEY,
    SupplierName NVARCHAR(100),
    SupplierCode NVARCHAR(50),
    SupplierContact NVARCHAR(100)
);

-- Table: ApplicationSettings
-- Requirements Satisfied: R40
CREATE TABLE BCES.ApplicationSettings (
    SettingID INT IDENTITY(1,1) PRIMARY KEY,
    LabourOverhead DECIMAL(5, 2),
    FringeValue DECIMAL(5, 2),
    NonProductiveAdjustment DECIMAL(5, 2),
    TaxRate DECIMAL(5, 2),
    Use NVARCHAR(50)
);

-- Table: YearMakeModel
-- Requirements Satisfied: R37
CREATE TABLE BCES.YearMakeModel (
    YearMakeModelID INT IDENTITY(1,1) PRIMARY KEY,
    Make NVARCHAR(50),
    Model NVARCHAR(50),
    Year NVARCHAR(4)
);

-- Table: SalaryRates
-- Requirements Satisfied: R36
CREATE TABLE BCES.SalaryRates (
    SalaryRateID INT IDENTITY(1,1) PRIMARY KEY,
    WageGroup NVARCHAR(50),
    RatePerHour DECIMAL(10, 2),
    DateEntered DATETIME
);

-- Table: LabourTypes
-- Requirements Satisfied: R35
CREATE TABLE BCES.LabourTypes (
    LabourTypeID INT IDENTITY(1,1) PRIMARY KEY,
    LabourDefinition NVARCHAR(50),
    RatePerHour DECIMAL(10, 2),
    HoursPerWeek DECIMAL(10, 2),
    DateEntered DATETIME,
    OverheadType NVARCHAR(50)
);

-- Table: LabourTaskDescriptions
-- Requirements Satisfied: R34
CREATE TABLE BCES.LabourTaskDescriptions (
    LabourTaskDescriptionID INT IDENTITY(1,1) PRIMARY KEY,
    TaskDescription NVARCHAR(200)
);

-- Table: MakeVsBuyEstimates
-- Requirements Satisfied: R28, R29, R30, R31, R32, R33
CREATE TABLE BCES.MakeVsBuyEstimates (
    MakeVsBuyEstimateID INT IDENTITY(1,1) PRIMARY KEY,
    MakeVsBuyNumber NVARCHAR(50),
    Keyword NVARCHAR(100),
    Description NVARCHAR(255),
    NumberOfBusUsingComponent NVARCHAR(50),
    VendorPartNumber NVARCHAR(50),
    MMSBuyCode NVARCHAR(50),
    RebuiltCode NVARCHAR(50),
    CoreCode NVARCHAR(50),
    CoreCost DECIMAL(10, 2),
    ProjectedAnnualUsage NVARCHAR(50),
    BenchNumber NVARCHAR(50),
    SOPNumber NVARCHAR(50),
    JobNumber NVARCHAR(50),
    ExternalRebuiltCost DECIMAL(10, 2),
    RemanufacturedExchangeCost DECIMAL(10, 2),
    BuyNewCost DECIMAL(10, 2),
    VehicleEstimateID INT FOREIGN KEY REFERENCES BCES.VehicleEstimates(VehicleEstimateID)
);

-- Table: OEMKits
-- Requirements Satisfied: R17, R23, R24
CREATE TABLE BCES.OEMKits (
    OEMKitID INT IDENTITY(1,1) PRIMARY KEY,
    PartNumber NVARCHAR(50),
    KitDetailedDescription NVARCHAR(250),
    BriefDescription NVARCHAR(250)
);

-- Table: VehicleEstimates
-- Requirements Satisfied: R15, R16, R17
CREATE TABLE BCES.VehicleEstimates (
    VehicleEstimateID INT IDENTITY(1,1) PRIMARY KEY,
    VehicleSeriesCode NVARCHAR(20),
    NumberOfVehicles NVARCHAR(50),
    ProjectDescription NVARCHAR(200),
    DateEntered DATETIME,
    EnteredBy NVARCHAR(25),
    ModifiedLastBy NVARCHAR(25),
    Make NVARCHAR(25),
    Model NVARCHAR(25),
    Year NVARCHAR(25),
    EngineID INT FOREIGN KEY REFERENCES BCES.Engines(EngineID),
    Transmission NVARCHAR(25),
    Differential NVARCHAR(25),
    SOPNumber NVARCHAR(25),
    YearMakeModelID INT FOREIGN KEY REFERENCES BCES.YearMakeModel(YearMakeModelID),
    TransmissionID INT FOREIGN KEY REFERENCES BCES.Transmissions(TransmissionID),
    DifferentialID INT FOREIGN KEY REFERENCES BCES.Differentials(DifferentialID)
);

-- Table: BusSeries
-- Requirements Satisfied: R1, R4, R6, R7, R9, R10, R11, R12, R19, R20, R21, R30, R31, R33
CREATE TABLE BCES.BusSeries (
    BusSeriesID INT IDENTITY(1,1) PRIMARY KEY,
    BusSeriesCode NVARCHAR(20),
    BusSeriesDescription NVARCHAR(100)
);

-- Table: RebuiltParts
-- Requirements Satisfied: R1, R4, R6, R7, R9, R10, R11, R12, R19, R20, R21, R30, R31, R33
CREATE TABLE BCES.RebuiltParts (
    RebuiltPartID INT IDENTITY(1,1) PRIMARY KEY,
    RebuiltStockCode NVARCHAR(50),
    Description NVARCHAR(255),
    Keyword NVARCHAR(100),
    JobNumber NVARCHAR(50),
    MMSBuyCode NVARCHAR(50),
    ToreCode NVARCHAR(50),
    CoreCost DECIMAL(10, 2),
    SOPNumber NVARCHAR(50),
    BusSeriesID INT FOREIGN KEY REFERENCES BCES.BusSeries(BusSeriesID),
    PartTypeID INT FOREIGN KEY REFERENCES BCES.PartTypes(PartTypeID)
);

-- Table: NonStockCodedParts
-- Requirements Satisfied: R2, R3, R5, R13, R14, R21, R25, R26, R32, R33
CREATE TABLE BCES.NonStockCodedParts (
    NonStockPartID INT IDENTITY(1,1) PRIMARY KEY,
    RebuiltPartID INT FOREIGN KEY REFERENCES BCES.RebuiltParts(RebuiltPartID),
    SupplierID INT FOREIGN KEY REFERENCES BCES.Suppliers(SupplierID),
    PartDescription NVARCHAR(255),
    Keyword NVARCHAR(100),
    Quantity INT,
    UnitCost DECIMAL(10, 2),
    CoreCost DECIMAL(10, 2),
    CostCentreID INT FOREIGN KEY REFERENCES BCES.CostCentres(CostCentreID),
    SupplierName NVARCHAR(100),
    SupplierNumber NVARCHAR(100),
    PartUnitCost DECIMAL(10, 2)
);

-- Table: StockCodedParts
-- Requirements Satisfied: R11, R12, R20, R21, R30, R31
CREATE TABLE BCES.StockCodedParts (
    StockPartID INT IDENTITY(1,1) PRIMARY KEY,
    RebuiltPartID INT FOREIGN KEY REFERENCES BCES.RebuiltParts(RebuiltPartID),
    MMSStockCode NVARCHAR(50),
    PartType NVARCHAR(50),
    PartDescription NVARCHAR(255),
    CostCentreID INT FOREIGN KEY REFERENCES BCES.CostCentres(CostCentreID),
    PercentUsage DECIMAL(5, 2),
    Quantity INT,
    LastRevised DATETIME,
    CoreCost DECIMAL(10, 2)
);

-- Table: Materials
-- Requirements Satisfied: R9, R10, R11, R12, R13, R14, R30, R31, R32, R33
CREATE TABLE BCES.Materials (
    MaterialID INT IDENTITY(1,1) PRIMARY KEY,
    RebuiltPartID INT FOREIGN KEY REFERENCES BCES.RebuiltParts(RebuiltPartID),
    MaterialType INT,
    Quantity INT,
    PercentUsage DECIMAL(5, 2),
    UnitCost DECIMAL(10, 2),
    RebuiltNumber NVARCHAR(50),
    Keyword NVARCHAR(100),
    Description NVARCHAR(255),
    LastRevised DATETIME,
    PartCost DECIMAL(10, 2)
);

-- Table: LabourTasks
-- Requirements Satisfied: R7, R8, R18, R29
CREATE TABLE BCES.LabourTasks (
    LabourTaskID INT IDENTITY(1,1) PRIMARY KEY,
    RebuiltPartID INT FOREIGN KEY REFERENCES BCES.RebuiltParts(RebuiltPartID),
    TaskDescriptionID INT FOREIGN KEY REFERENCES BCES.LabourTaskDescriptions(LabourTaskDescriptionID),
    LabourPosition NVARCHAR(100),
    CostCentreID INT FOREIGN KEY REFERENCES BCES.CostCentres(CostCentreID),
    PercentUsage DECIMAL(5, 2),
    HoursRequiredH INT,
    HoursRequiredM INT
);

-- Table: EmployeeLabour
-- Requirements Satisfied: R7
CREATE TABLE BCES.EmployeeLabour (
    EmployeeLabourID INT IDENTITY(1,1) PRIMARY KEY,
    LabourDefn NVARCHAR(50),
    DateEntered DATETIME,
    LinkNumber NVARCHAR(25),
    TypeID NVARCHAR(5),
    CostCentre NVARCHAR(5),
    Task NVARCHAR(200),
    LabourType NVARCHAR(5),
    Usage NVARCHAR(25),
    HrsReqd NVARCHAR(25),
    AdjHrs NVARCHAR(25),
    DateRevised DATE,
    TimeAddition DECIMAL(18, 2),
    RebuiltPartNum NVARCHAR(30),
    LastModifiedBy NVARCHAR(25),
    LabourTypeID INT FOREIGN KEY REFERENCES BCES.LabourTypes(LabourTypeID),
    SalaryRateID INT FOREIGN KEY REFERENCES BCES.SalaryRates(SalaryRateID)
);

-- Table: CostCentres
-- Requirements Satisfied: R7, R8, R11, R12, R13, R14, R18, R20, R21, R22, R25, R26, R29, R30, R31, R32, R33
CREATE TABLE BCES.CostCentres (
    CostCentreID INT IDENTITY(1,1) PRIMARY KEY,
    CostCentreCode NVARCHAR(20),
    CostCentreDescription NVARCHAR(100)
);

-- Table: Transmissions
-- Requirements Satisfied: R15, R16
CREATE TABLE BCES.Transmissions (
    TransmissionID INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(25)
);

-- Table: Differentials
-- Requirements Satisfied: R15, R16
CREATE TABLE BCES.Differentials (
    DifferentialID INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(25)
);