@model IEnumerable<UserViewModel>
@{
    ViewData["Title"] = "User Management";
}

<div>
    @(Html.Kendo().Grid<UserViewModel>()
        .Name("UserGrid")
        .Columns(columns =>
        {
            columns.Bound(u => u.UserId).Hidden();
            columns.Bound(u => u.UserName).Title("User Name").Width(150);
            columns.Bound(u => u.RoleModel.RoleName).Title("Role Name").Width(150)
                .EditorTemplateName("RoleNameDropDown")
                .ClientTemplate("#= RoleModel.RoleName #");

            columns.Command(command => command.Destroy()).Width(100).Title("Delete");
        })
        .ToolBar(toolbar =>
        {
            toolbar.Create();
            toolbar.Save();
        })
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model =>
            {
                model.Id(u => u.UserId);
                model.Field(u => u.UserId).Editable(false);
                model.Field(u => u.RoleModel.RoleName).DefaultValue("Select Role");
                model.Field(u => u.RoleModel.RoleId).DefaultValue(0);
            })
            .Read(read => read.Action("UserViewRead", "UserManagementGrid"))
            .Create(create => create.Action("UserViewAdd", "UserManagementGrid"))
            .Update(update => update.Action("UserViewUpdate", "UserManagementGrid"))
            .Destroy(destroy => destroy.Action("UserViewDelete", "UserManagementGrid"))
            .Events(events => events.Error("onError"))
        )
        .Navigatable(true)
    )
</div>

<script>
    function onError(e) {
        alert("An error occurred while processing the request: " + e.xhr.responseText);
    }

    function serializeData(data) {
        return kendo.stringify(data);
    }

    $("#UserGrid").data("kendoGrid").dataSource.transport.options.update.data = function(data) {
        return serializeData(data);
    };

    $("#UserGrid").data("kendoGrid").dataSource.transport.options.create.data = function(data) {
        return serializeData(data);
    };
</script>
