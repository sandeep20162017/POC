ðŸ›  Step 1: Add Red Border CSS
Add this CSS to your page (best inside your main site's .css or inside the Razor page):

html
Copy
Edit
<style>
.invalid-combobox {
    border: 2px solid #f44336 !important; /* Red border */
    background-color: #ffe6e6 !important; /* Light pink background */
}
</style>
âœ… This will style any input with .invalid-combobox class to look wrong immediately.

ðŸ›  Step 2: Update onRebuiltStockNumChange to handle Red Border
javascript
Copy
Edit
function onRebuiltStockNumChange(e) {
    var selectedValue = e.sender.value() ? e.sender.value().trim() : "";

    console.log("Entered value:", selectedValue);

    var grid = $("#RbPartsMaterialDetailsRebuiltPartsGrid").data("kendoGrid");

    // Find the current editing row and model
    var cell = $(e.sender.wrapper).closest("td");
    var row = cell.closest("tr");
    var editingModel = grid.dataItem(row);

    console.log("Editing model ID:", editingModel && editingModel.Id, "UID:", editingModel && editingModel.uid);

    var isDuplicate = false;

    grid.dataSource.data().forEach(function (item, index) {
        console.log("Checking row", index, "value:", item.RebuiltStockNum, "UID:", item.uid);

        if (item && item.RebuiltStockNum && item !== editingModel) {
            var existingValue = item.RebuiltStockNum.trim().toLowerCase();
            var newValue = selectedValue.toLowerCase();

            console.log("Comparing existing:", existingValue, "with new:", newValue);

            if (existingValue === newValue) {
                console.log("DUPLICATE FOUND at row", index);
                isDuplicate = true;
            }
        }
    });

    if (isDuplicate) {
        // Highlight field with red border
        e.sender.wrapper.addClass("invalid-combobox");

        // (Optional) Disable Save toolbar button
        $(".k-grid-save-changes").prop("disabled", true).addClass("k-state-disabled");
    } else {
        // Remove any error styles
        e.sender.wrapper.removeClass("invalid-combobox");

        // (Optional) Enable Save toolbar button back
        $(".k-grid-save-changes").prop("disabled", false).removeClass("k-state-disabled");
    }
}
ðŸ“ˆ What happens now:

Scenario	Behavior
User types/selects duplicate RebuiltStockNum	ComboBox gets red border, light red background, Save button disabled
User fixes the value (types unique value)	ComboBox border returns to normal, Save button enabled
âœ… No popup interrupts
âœ… User can fix easily
âœ… Cleaner experience

ðŸ”¥ Bonus: Small polish for Save button CSS (optional)
If you want Save button to "look" disabled properly, you can tweak it like this:

html
Copy
Edit
<style>
.k-grid-save-changes.k-state-disabled {
    background: #cccccc !important;
    color: #666666 !important;
    cursor: not-allowed !important;
    pointer-events: none !important;
}
</style>
