Add this to your Grid setup:
csharp
Copy
Edit
.DataSource(dataSource => dataSource
    .Ajax()
    .Events(events => events.RequestEnd("onRequestEnd"))
    .Model(model =>
    {
        model.Id(c => c.Id);
        model.Field(c => c.Id);
        model.Field(c => c.RebuiltStockNum);
    })
    .Read(read => read.Url(Url.Action("GetRbPartsUsedInEstimates", "RbPartsUsedInEstimates") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Get))
    .Create(create => create.Url(Url.Action("CreateRbPartsUsedInEstimates", "RbPartsUsedInEstimates") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
    .Update(update => update.Url(Url.Action("UpdateRbPartsUsedInEstimates", "RbPartsUsedInEstimates") + "?id=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
    .Destroy(delete => delete.Url(Url.Action("DeleteRbPartsUsedInRbtParts", "RbPartsUsedInEstimates") + "?rebuiltPartNum=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
)
ðŸ“œ Then in your JavaScript:
javascript
Copy
Edit
function onRequestEnd(e) {
    var grid = $("#RbPartsMaterialDetailsRebuiltPartsGrid").data("kendoGrid");

    if (e.type === "create" && !e.response.Errors) {
        // Only refresh if create was successful (no errors)
        grid.dataSource.read();
    }

    if (e.type === "update" && !e.response.Errors) {
        // Optional: if you also want to clear after update
        grid.dataSource.read();
    }

    if (e.type === "destroy" && !e.response.Errors) {
        // Optional: reset after delete too
        grid.dataSource.read();
    }
}
