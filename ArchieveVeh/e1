Msg 402, Level 16, State 1, Procedure GetMaterialCost, Line 39 [Batch Start Line 0]
The data types varchar and varchar are incompatible in the subtract operator.
Msg 264, Level 16, State 1, Procedure GetMaterialCost, Line 97 [Batch Start Line 0]
The column name 'TotalCost' is specified more than once in the SET clause or column list of an INSERT. A column cannot be assigned more than one value in the same clause. Modify the clause to make sure that a column is updated only once. If this statement updates or inserts columns into a view, column aliasing can conceal the duplication in your code.
Msg 8117, Level 16, State 1, Procedure GetMaterialCost, Line 103 [Batch Start Line 0]
Operand data type varchar is invalid for sum operator.

For yuor refernce :
USE [CES]
GO

/****** Object:  UserDefinedFunction [SBCES].[FinalCost]    Script Date: 4/24/2025 1:19:18 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object: Schema [SBCES] Script Date: 12/6/2024 5:27:23 PM ******/
--CREATE SCHEMA [SBCES]
--GO

--CREATE FUNCTION [SBCES].[DecimalMinutesToHhmm]
--    (@ViDecimalMinutes VARCHAR(20)) RETURNS VARCHAR(4000) AS
--BEGIN
--    DECLARE @VarResult VARCHAR(100);
--    DECLARE @VarHours INT;
--    DECLARE @VarMinutes INT;

--    SET @VarHours = FLOOR(CONVERT(DECIMAL(10), @ViDecimalMinutes)/60);
--    SET @VarMinutes = @ViDecimalMinutes - (@VarHours * 60.0);

--    IF (LEN(@VarMinutes) < 2) BEGIN
--        SET @VarResult = CAST(@VarHours AS VARCHAR(10)) + ':0' + ISNULL(CAST(@VarMinutes AS VARCHAR(10)), '');
--    END
--    ELSE BEGIN
--        SET @VarResult = CAST(@VarHours AS VARCHAR(10)) + ':' + CAST(@VarMinutes AS VARCHAR(10));
--    END 

--    RETURN @VarResult;
--END;
--GO

CREATE FUNCTION [SBCES].[FinalCost]
    (@ViPercent VARCHAR(20),
     @ViQuantity VARCHAR(20),
     @ViCost DECIMAL(10,2),
     @ViCoreCost DECIMAL(10,2))
RETURNS VARCHAR(4000) AS
BEGIN
    DECLARE @Total DECIMAL(38,4);
 
    SET @Total = (CAST(REPLACE(ISNULL(@ViPercent,'0'),',','.') AS DECIMAL(10,4))/ 100) * CAST(@ViQuantity AS DECIMAL(10,4)) * @ViCost;
    RETURN ROUND(@Total - @ViCoreCost, 2);
END;
GO


