You are ASP.NET v8 and Telerik ASP.NET Core expert.
I want to implement filterable dropDownEditor.
DropDownEditor must pass columnname and search text to the controller.
Dropdown will be used on several pages in several columns which uses Telerik grid.
Using InCell edit in the grid.
Pls assist in getting the working code.
CommonDropDrownEditor :
@model object

@{
    var fieldName = ViewData.TemplateInfo.GetFullHtmlFieldName("");
}

@(Html.Kendo().DropDownList() 
    .Name(fieldName)
    .DataTextField("Text")
    .DataValueField("Value")
    .Filter(FilterType.Contains) 
    .AutoBind(true) 
    .HtmlAttributes(new Dictionary<string, object>
    {
        { "data-role", "dropdownlist" },
        { "data-column", fieldName }
    })
    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Url(Url.Action("GetAutoCompleteData", "AutoComplete"))
                .Type(HttpVerbs.Get)
                .Data("getCommonDropDownListParams");
        })
        .ServerFiltering(true);
    })
)


Controller :
 public IActionResult GetAutoCompleteData(string columnName, string searchText)
Index.cshtml :
@(
Html.Kendo().Grid<BCES.Models.Admin.UserViewModel>()
                    .Name("userGrid")
                    .Columns(columns =>
                    {
                        columns.Bound(u => u.UserADId).Title("User ID");
                        columns.Bound(u => u.UserName).Title("User Name");
                        // columns.Bound(u => u.UserContactNo).Title("Phone Number");

                        columns.Bound(u => u.RoleName)
                            .Title("Role Name")
                           // .ClientTemplate("#: RoleName #")
                            .EditorTemplateName("CommonDropDownEditor");
...
.Model(model =>
{
    model.Id(u => u.UserID);
    model.Field(u => u.UserADId).Editable(true);
    model.Field(u => u.UserName).Editable(true);
    model.Field(u => u.RoleId).DefaultValue(0); 
   model.Field(u => u.RoleName);
                   
})
....
JS :
 function getCommonDropDownListParams() {
     var dropdown = $(".k-dropdown[data-column]").filter(function() {
         return $(this).find(".k-input").is(":focus");
     });
     return {
         columnName: dropdown.attr("data-column"),
         searchText: dropdown.find(".k-input").val() || ""
     };
 }
 $(document).on("keydown", ".k-dropdown .k-input", function(e) {
     if (e.keyCode === 13) { // Allow Enter key
         return true;
     }
     e.preventDefault();
     return false;
 });
model :
public int UserID { get; set; }

public string UserADId { get; set; }

public string UserName { get; set; }

public int  RoleId { get; set; }

public string RoleName { get; set; }
...
