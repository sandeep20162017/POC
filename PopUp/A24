.Editable(editable => 
{
    editable.Mode(GridEditMode.PopUp);
    editable.TemplateName("~/Views/Shared/EditorTemplates/CustomVehiclePopUpTemplate.cshtml");
    editable.Window(w => w.Title("Vehicle Estimate").Width(820));
})

================
@model VehicleViewModel
@using Kendo.Mvc.UI
@{
    // Determine mode (view vs edit)
    bool isReadOnly = ViewBag.ReadOnly ?? false;
    bool isNewRecord = Model.VehicleListId == 0;
    
    // Set title based on mode
    string windowTitle = isReadOnly 
        ? "Vehicle Estimate Details" 
        : (isNewRecord ? "Add New Vehicle" : "Edit Vehicle Estimate");
}

<div class="k-edit-form-container" style="width:100%;">
    @using (Html.BeginForm())
    {
        <fieldset class="form-horizontal" style="border: none; margin-bottom: 10px;">
            <!-- Row 1: Estimate # and Vehicle Series Code -->
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.VehicleListId, "Estimate #", new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @(Html.Kendo().TextBoxFor(model => model.VehicleListId)
                                .Value(Model.VehicleListId == 0 ? "(System Generated)" : Model.VehicleListId.ToString())
                                .HtmlAttributes(new { @readonly = "readonly" }))
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.VehSeriesCode, "Vehicle Series Code", new { @class = "control-label col-md-4 required-header" })
                        <div class="col-md-8">
                            @if (isReadOnly)
                            {
                                @(Html.Kendo().TextBoxFor(model => model.VehSeriesCode)
                                    .HtmlAttributes(new { @readonly = "readonly" }))
                            }
                            else
                            {
                                @Html.EditorFor(model => model.VehSeriesCode, "ComboBoxEditor", new { htmlAttributes = new { 
                                    @class = "required-cell", 
                                    required = "required",
                                    style = "width: 100%" 
                                }})
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Row 2: Number of Vehicles and Project Description -->
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NumOfVehicles, "Number of Vehicles", new { @class = "control-label col-md-4 required-header" })
                        <div class="col-md-8">
                            @if (isReadOnly)
                            {
                                @(Html.Kendo().TextBoxFor(model => model.NumOfVehicles)
                                    .HtmlAttributes(new { @readonly = "readonly" }))
                            }
                            else
                            {
                                @(Html.Kendo().IntegerTextBoxFor(model => model.NumOfVehicles)
                                    .Min(1)
                                    .Format("0")
                                    .HtmlAttributes(new { 
                                        @class = "required-cell",
                                        required = "required",
                                        style = "width: 100%" 
                                    }))
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjDesc, "Project Description", new { @class = "control-label col-md-4 required-header" })
                        <div class="col-md-8">
                            @if (isReadOnly)
                            {
                                @(Html.Kendo().TextBoxFor(model => model.ProjDesc)
                                    .HtmlAttributes(new { @readonly = "readonly" }))
                            }
                            else
                            {
                                @Html.EditorFor(model => model.ProjDesc, "VehDescriptionComboBox", new { htmlAttributes = new { 
                                    @class = "required-cell",
                                    required = "required",
                                    style = "width: 100%" 
                                }})
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Row 3: Make and Model -->
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Make, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @if (isReadOnly)
                            {
                                @(Html.Kendo().TextBoxFor(model => model.Make)
                                    .HtmlAttributes(new { @readonly = "readonly" }))
                            }
                            else
                            {
                                @Html.EditorFor(model => model.Make, "ComboBoxEditor", new { htmlAttributes = new { style = "width: 100%" }})
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.VehModel, "Model", new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @if (isReadOnly)
                            {
                                @(Html.Kendo().TextBoxFor(model => model.VehModel)
                                    .HtmlAttributes(new { @readonly = "readonly" }))
                            }
                            else
                            {
                                @Html.EditorFor(model => model.VehModel, "ComboBoxEditor", new { htmlAttributes = new { style = "width: 100%" }})
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Row 4: Year and Engine -->
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Year, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @if (isReadOnly)
                            {
                                @(Html.Kendo().TextBoxFor(model => model.Year)
                                    .HtmlAttributes(new { @readonly = "readonly" }))
                            }
                            else
                            {
                                @Html.EditorFor(model => model.Year, "ComboBoxEditor", new { htmlAttributes = new { style = "width: 100%" }})
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Engine, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @if (isReadOnly)
                            {
                                @(Html.Kendo().TextBoxFor(model => model.Engine)
                                    .HtmlAttributes(new { @readonly = "readonly" }))
                            }
                            else
                            {
                                @Html.EditorFor(model => model.Engine, "ComboBoxEditor", new { htmlAttributes = new { style = "width: 100%" }})
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Row 5: Transmission and Differential -->
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Transmission, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @if (isReadOnly)
                            {
                                @(Html.Kendo().TextBoxFor(model => model.Transmission)
                                    .HtmlAttributes(new { @readonly = "readonly" }))
                            }
                            else
                            {
                                @Html.EditorFor(model => model.Transmission, "ComboBoxEditor", new { htmlAttributes = new { style = "width: 100%" }})
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Differential, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @if (isReadOnly)
                            {
                                @(Html.Kendo().TextBoxFor(model => model.Differential)
                                    .HtmlAttributes(new { @readonly = "readonly" }))
                            }
                            else
                            {
                                @(Html.Kendo().TextBoxFor(model => model.Differential)
                                    .HtmlAttributes(new { style = "width: 100%" }))
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Row 6: SOP Number and Modified Info -->
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Sopnumber, "SOP Number", new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @if (isReadOnly)
                            {
                                @(Html.Kendo().TextBoxFor(model => model.Sopnumber)
                                    .HtmlAttributes(new { @readonly = "readonly" }))
                            }
                            else
                            {
                                @(Html.Kendo().TextBoxFor(model => model.Sopnumber)
                                    .HtmlAttributes(new { style = "width: 100%" }))
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.Label("Modified By", new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @(Html.Kendo().TextBox()
                                .Name("ModifiedLastBy")
                                .Value(Model.ModifiedLastBy == 0 ? "System Generated" : Model.ModifiedLastBy.ToString())
                                .HtmlAttributes(new { @readonly = "readonly" }))
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Modified Date", new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @(Html.Kendo().TextBox()
                                .Name("ModifiedLastDate")
                                .Value(ViewBag.FormattedDate ?? "System Generated")
                                .HtmlAttributes(new { @readonly = "readonly" }))
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>

        <!-- Form buttons -->
        <div class="k-edit-buttons k-actions-end" style="border-top: 1px solid #ddd; padding-top: 15px; text-align: right;">
            @if (!isReadOnly)
            {
                <button type="submit" class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-grid-update">
                    <span class="k-icon k-i-check"></span>@(isNewRecord ? "Create" : "Update")
                </button>
            }
            <button type="button" class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-grid-cancel">
                <span class="k-icon k-i-cancel"></span>@(isReadOnly ? "Close" : "Cancel")
            </button>
        </div>
    }
</div>

<style>
    .k-edit-form-container {
        padding: 15px;
    }
    .form-horizontal .control-label {
        padding-top: 7px;
        margin-bottom: 5px;
        text-align: left;
    }
    .k-edit-buttons {
        margin-top: 15px;
    }
    .required-header::after {
        content: " *";
        color: red;
    }
    .required-cell {
        font-weight: bold;
    }
    .k-edit-field {
        width: 100%;
    }
</style>

<script>
    // Initialize components after form loads
    $(document).ready(function() {
        // Set initial values for dirty tracking
        $("form :input").each(function() {
            $(this).attr("data-initial-value", $(this).val());
        });
        
        // Initialize all comboboxes
        $('[data-role="combobox"]').each(function() {
            $(this).data("kendoComboBox");
        });
    });
</script>
