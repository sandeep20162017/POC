html
@model BCES.Models.Vehicle.VehicleViewModel

<style>
    .custom-editor-container {
        width: 750px;
        padding: 15px;
    }
    
    .editor-row {
        display: flex;
        margin-bottom: 15px;
        gap: 15px;
    }
    
    .editor-group {
        flex: 1;
        min-width: 0;
    }
    
    .editor-label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }
    
    .required-field .editor-label::after {
        content: " *";
        color: #e32;
    }
    
    .editor-field {
        width: 100%;
    }
    
    .k-edit-form-container {
        padding: 15px;
    }
</style>

<div class="custom-editor-container">
    @Html.HiddenFor(model => model.VehicleListId)

    <!-- Row 1 -->
    <div class="editor-row">
        <div class="editor-group">
            <span class="editor-label">Estimate #</span>
            <div class="editor-field">
                @(Html.Kendo().TextBoxFor(model => model.VehicleListId)
                    .HtmlAttributes(new { @readonly = "readonly" })
                )
            </div>
        </div>
        
        <div class="editor-group required-field">
            <span class="editor-label">Vehicle Series</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.VehSeriesCode, "ComboBoxEditor", new { required = "required" })
            </div>
        </div>
        
        <div class="editor-group required-field">
            <span class="editor-label"># of Vehicles</span>
            <div class="editor-field">
                @(Html.Kendo().IntegerTextBoxFor(model => model.NumOfVehicles)
                    .Min(1)
                    .HtmlAttributes(new { required = "required", style = "width:100%" })
                )
            </div>
        </div>
    </div>

    <!-- Row 2 -->
    <div class="editor-row">
        <div class="editor-group">
            <span class="editor-label">Make</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Make, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">Model</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.VehModel, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">Year</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Year, "ComboBoxEditor")
            </div>
        </div>
    </div>

    <!-- Row 3 -->
    <div class="editor-row">
        <div class="editor-group">
            <span class="editor-label">Engine</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Engine, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">Transmission</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Transmission, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">SOP Number</span>
            <div class="editor-field">
                @(Html.Kendo().TextBoxFor(model => model.Sopnumber)
                    .HtmlAttributes(new { style = "width:100%" })
                )
            </div>
        </div>
    </div>

    <!-- Project Description (full width) -->
    <div class="editor-row">
        <div class="editor-group required-field" style="flex: 0 0 100%">
            <span class="editor-label">Project Description</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.ProjDesc, "VehDescriptionComboBox", new { required = "required" })
            </div>
        </div>
    </div>
</div>
Key Features:

Structured Layout:

Three rows with consistent spacing using CSS flexbox

Each row contains 3 evenly spaced columns

Project description spans full width below

Editor Components:

Maintains all original ComboBox editors (ComboBoxEditor and VehDescriptionComboBox)

Uses Kendo IntegerTextBox for numeric fields

Read-only field for Estimate #

Required fields marked with asterisks (*)

CSS Styling:

Consistent spacing with gap: 15px

Responsive design with flexbox

Required field indicators

Proper alignment of labels and inputs

Adequate width for the popup (750px)

Validation:

Maintains required field validation

Integer validation for vehicle count

HTML5 validation attributes

To use this template:

Save this as CustomVehicleEditorTemplate.cshtml in your ~/Views/Shared/EditorTemplates/ directory

Modify your Grid configuration in index.cshtml:

csharp
.Editable(editable => editable
    .Mode(GridEditMode.PopUp)
    .TemplateName("CustomVehicleEditorTemplate")
    .Window(w => w
        .Title("Vehicle Details")
        .Width(800)
    )
)
Add this to your Grid columns configuration:

csharp
columns.Bound(c => c.VehicleListId).Title("Estimate #").EditorTemplateName(null);
columns.Bound(c => c.VehSeriesCode).EditorTemplateName("ComboBoxEditor");
// Repeat for other columns that need custom editors
Notes:
