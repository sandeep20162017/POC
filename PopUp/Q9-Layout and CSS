You are Telerik ASP.NET core and UI/UX expert.
Application uses following Layout and css file. I want :
1. Reduce the beight of menu items (commnet in css where to adjust)
2. No Gap between Header and Menu
3. Font size should be 10 (all labels, controlls)
4. Use the colour scheme like : https://demos.telerik.com/aspnet-core/grid?autoRun=true&theme=default-ocean-blue
5. Commnet well in the css for changes
6. Use your experise to adjust colours. No Gudy bringt colors.
7. Give me full Layout and css file. Line by line (even if any line is not  changed)
Layout :
<!DOCTYPE html>
@{
    string version = "";
    string filePath = "_Version.cshtml";
    Console.WriteLine(filePath);
    if (File.Exists(filePath))
    {
        string readText = File.ReadAllText(filePath);
        version = readText.Substring(47, 16);
        if (version.Contains("0.0.0.0"))
        {
            version = "By Label";
        }
    } else
    {
        version = "0.0.0.1";
    }
}
<html>
   
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] Cost Estimation System</title>
    @using System.IO
    @using Microsoft.AspNetCore.Hosting
    @inject IWebHostEnvironment HostEnvironment

   
    <environment names="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
       @*  <link rel="stylesheet" href="~/css/site.css" /> *@
    </environment>

    <environment names="Staging,Production">
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
              asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" crossorigin="anonymous" />
    @*     <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" /> *@
    </environment>
    <link href="https://kendo.cdn.telerik.com/2021.2.511/styles/kendo.bootstrap-v4.min.css" rel="stylesheet" type="text/css" crossorigin="anonymous" />
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="https://kendo.cdn.telerik.com/2021.2.511/js/jszip.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2021.2.511/js/kendo.all.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2021.2.511/js/kendo.aspnetmvc.min.js"></script>
    <!-- Kendo UI CSS -->
    <link href="https://kendo.cdn.telerik.com/2021.2.511/styles/kendo.common.min.css" rel="stylesheet" crossorigin="anonymous" />
    <link href="https://kendo.cdn.telerik.com/2021.2.511/styles/kendo.default-v2.min.css" rel="stylesheet" crossorigin="anonymous" />
    <link href="https://kendo.cdn.telerik.com/2021.2.511/styles/kendo.bootstrap-v4.min.css" rel="stylesheet" crossorigin="anonymous" />
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
   @*  <script src="https://kendo.cdn.telerik.com/2024.4.1112/mjs/kendo.all.js" type="module"></script> *@
    <script src="@Url.Content("~/js/site.js")"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    
    
    <link rel="stylesheet" href="~/css/header-footer.css" />
    <link rel="stylesheet" href="~/css/telerik-min.css" />
    <link rel="stylesheet" href="~/css/site.min.css" />
   @* <link rel="stylesheet" href="~/css/globalsite.css" /> *@
        

</head>
<body>
    @* <nav class="navbar navbar-dark bg-dark">
    <div class="container-fluid d-flex justify-content-between p-0">
    <a class="navbar-brand d-flex align-items-center" asp-controller="Home" asp-action="Index">Your .NET Core Application</a>
    <button id="configure" class="k-rpanel-toggle k-button k-primary btn-toggle">
    <span class="k-icon k-i-menu"></span>
    </button>
    </div>
    </nav> *@
    <header>
        <div class="header_container-new">
            <div class="logo">
                <img src="~/images/ttc-main-logo.png" alt="Logo" />
            </div>
            <div class="app-name">
                <h4>Cost Estimate System</h4>
            </div>
            <div class="user-info-new">
                <img src="~/images/user.jpg" alt="User" class="user-image" />
                <span class="user-name"> | User : </span>
                <span class="user-name">@ViewBag.UserName | </span>
                <span class="user-name">Role: </span>
                <span class="user-name">@ViewBag.RoleName</span>
               
            </div>
        </div>
        
    </header>
    <div id="responsive-panel" class="navbar navbar-dark bg-light mb-4">
        <kendo-responsivepanel name="responsive-panel" auto-close="false" breakpoint="768" orientation="top">
            @* <div>
            UserName : @ViewBag.UserName;
            RoleId : @ViewBag.RoleId;
            RoleName : @ViewBag.RoleName;
            </div> *@
            @(
                Html.Kendo().Menu()
                        .Name("Menu")
                        .Items(items =>
                        {
                            items.Add().Text("Home").Action("Index", "Home", new { area = "" }).ImageUrl(Url.Content("~/images/home.png"));
                            items.Add().Text("Material Parts")                         
                           .ImageUrl(Url.Content("~/images/part.png"))
               

                            .Items(children =>
                            {
                                children.Add().Text("Stock Coded Parts")
                            .Action("Index", "StockCodedParts", new { area = "" })
                                .ImageUrl(Url.Content("~/images/part.png"));


                            children.Add().Text(" Non Stock Coded Parts")
                              .Action("NscPartsUsedIndex", "NscPartsUsed")
                            .ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text(" Rebuilt Parts")
                .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));
                @* .Action("RebuiltPartsIndex", "RebuiltParts", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));  *@
                                });

                                items.Add().Text("Vehicle Estimate").Action("VehiclesIndex", "Vehicles", new { area = "" }).ImageUrl(Url.Content("~/images/vehicle.png"));
                       @*  .Items(children =>
                        {
                            children.Add().Text("Vehicles")
                            .Action("VehiclesIndex", "Vehicles", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));
                           
                         }); *@
                    items.Add().Text("Buy Or Make")
                   @*   .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
                .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/buy.png"));
                    @* .Action("MakeVsBuyIndex", "MakeVsBuy", new { area = "" }).ImageUrl(Url.Content("~/images/buy.png")); *@
                    items.Add().Text("Reports").Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/home.png"));
                   @*  if(@ViewBag.RoleId == 1) *@ 
                    {
                       @*  items.Add().Text("Administration").Action("Index", "UserManagementGrid", new { area = "" }).ImageUrl(Url.Content("~/images/admin.png")) *@
                        items.Add().Text("Administration").ImageUrl(Url.Content("~/images/part.png"))
                       .Items(children =>
                        {
                            children.Add().Text("User Management")
                    .Action("Index", "UserManagementGrid", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                        @*     children.Add().Text("Role Management")
                    .Action("Index", "Role", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
@* 
                            children.Add().Text("Site Management")
                    .Action("Index", "Site", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@

                     children.Add().Text("Labour Task Management")
                    @* .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
                    .Action("Index", "Task", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text("Differential Management")
                            @* .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
                    .Action("DifferentialIndex", "Differential", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text("Engine Management")
                           @*  .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
                    .Action("EngineIndex", "Engine", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text("Make Model Year Management")
                            @* .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
                    .Action("MakeModelYearIndex", "MakeModelYear", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text("Transmission Management")
                           @*  .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
                    .Action("TransmissionIndex", "Transmission", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text("Employee Salary Management")
                           @*  .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
                    .Action("EmpSalaryIndex", "EmpSalary", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text("Labour Type Management")
                            @* .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
                    .Action("LabourTypeIndex", "LabourType", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text(" List Of Vehicles")
                           @*  .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
                    .Action("Index", "Bus").ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text("Change Settings")
                    @* .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
                    .Action("SettingIndex", "Setting", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));

                            children.Add().Text("Announcement Settings")
                    @* .Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png")); *@
                    .Action("Index", "Content", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));
                        });
                    }

                    items.Add().Text("Help").Action("Index", "Common", new { area = "" }).ImageUrl(Url.Content("~/images/part.png"));
                })
                .HighlightPath(true)
                .Orientation(MenuOrientation.Horizontal)

                .HtmlAttributes(new { @class = "rounded-menu" })
                )
        </kendo-responsivepanel>
    </div>

    <main>
        <div class="container-fluid">
            @RenderBody()
        </div>



    </main>

    <footer class="border-top footer text-muted">
        <div class="footer-container">
            <div class="footer-left">
                &copy; TTC 2025 - Cost Estimate System | System No.: 0105
            </div>
            <div class="footer-right">              
                Build Version:@version | Build Date: June 25, 2025
            </div>
        </div>
    </footer>

    <environment names="Development">
        <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
       
    </environment>
    <environment names="Staging,Production">
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"
                asp-fallback-src="~/lib/bootstrap/dist/js/bootstrap.min.js"
                asp-fallback-test="window.jQuery && window.jQuery.fn && window.jQuery.fn.modal"></script>
    </environment>

    @RenderSection("scripts", required: false)
    <script>
        $(document).ready(function () {
            console.log("layout.cshtml docready called");
            //Remove double arrow in the menu
            setTimeout(function () {
                    // Find and remove the extra expand arrow
                    $(".k-menu .k-menu-expand-arrow.k-icon.k-i-arrow-60-down").remove();

                }, 100);
            //session
            startSessionTimer();

            // Reset timer on Telerik Grid interactions
            $(document).on("click", ".k-grid", resetSession);
            $(document).on("keydown", ".k-grid", resetSession);

      });
    </script>
    <div id="timeoutDialog" style="display: none;">
        <div style="padding: 20px;">
            <h4>Session Expiration Warning</h4>
            <p>Your session will expire in <span id="countdown">2:00</span>.</p>
            <p>Any unsaved changes will be lost.</p>
            <button class="k-button" id="continueSession">Continue Working</button>
        </div>
    </div>

    <script>
        let idleTimer;
        let countdownTimer;
        const timeoutMinutes = @ViewBag.SessionTimeoutMinutes;
        const warningMinutes = @ViewBag.SessionTimeoutWarningMinutes;
        let warningActive = false;

        function startSessionTimer() {
            clearTimeout(idleTimer);
            idleTimer = setTimeout(showTimeoutWarning, (timeoutMinutes - warningMinutes) * 60 * 1000);
        }

        function showTimeoutWarning() {
            warningActive = true;
            const dialog = $("#timeoutDialog").data("kendoDialog") ||
                $("#timeoutDialog").kendoDialog({
                    width: "400px",
                    title: "This session will be closed due to inactivity. All the unsaved changes will be lost.",
                    closable: false,
                    modal: true,
                    actions: []
                }).data("kendoDialog");

            let seconds = warningMinutes * 60;

            function updateCountdown() {
                const minutes = Math.floor(seconds / 60);
                const remainingSeconds = seconds % 60;
                $("#countdown").text(`${minutes}:${remainingSeconds.toString().padStart(2, '0')}`);

                if (seconds <= 0) {
                    clearInterval(countdownTimer);
                    dialog.close();
                    window.location.href = '/Home/SessionExpired';
                }
                seconds--;
            }

            countdownTimer = setInterval(updateCountdown, 1000);
            updateCountdown();
            dialog.open();

            // Handle continue button
            $("#continueSession").off("click").on("click", function () {
                resetSession();
                dialog.close();
            });

            // Reset on any user activity
            $(document).one("mousemove keydown click", function () {
                resetSession();
                dialog.close();
            });
        }

        function resetSession() {
            warningActive = false;
            clearTimeout(idleTimer);
            clearInterval(countdownTimer);

            // Add proper POST headers
            fetch('/Account/KeepAlive', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                credentials: 'same-origin'
            })
                .then(response => {
                    if (!response.ok) throw new Error('Keep-alive failed');
                    startSessionTimer();
                })
                .catch(() => window.location.reload());
        }

        // // Initial setup
        // $(document).ready(function () {
        //     startSessionTimer();

        //     // Reset timer on Telerik Grid interactions
        //     $(document).on("click", ".k-grid", resetSession);
        //     $(document).on("keydown", ".k-grid", resetSession);
        // });
    </script>
</body>
</html>
css :
.k-invalid {
    border-color: #ff0000 !important;
    background-color: #ffeeee !important;
    transition: all 0.3s ease;
}
.k-dialog {
    border-radius: 8px !important;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15) !important;
}

.k-dialog-titlebar {
    background-color: #dc3545 !important; 
    color: white !important;
    font-weight: bold;
    padding: 12px !important;
}

.k-dialog-content {
    font-size: 16px !important;
    padding: 20px !important;
}

.k-dialog-buttongroup {
    padding: 10px 20px !important;
    gap: 10px !important;
}

    .k-dialog-buttongroup .k-button {
        border-radius: 5px !important;
        padding: 8px 20px !important;
    }

/* Style "Yes" button */
.k-dialog-buttongroup .k-button:first-child {
    background-color: #28a745 !important;
    border-color: #28a745 !important;
}

/* Style "No" button */
.k-dialog-buttongroup .k-button:last-child {
    background-color: #6c757d !important;
    border-color: #6c757d !important;
}
.k-edit-cell .non-editable {
    background-color: #f5f5f5;
    pointer-events: none;
}
/* pop up confirmation*/
#deleteConfirmationDialog {
    padding: 20px;
    background: #fff;
    border-radius: 5px;
}

.confirmation-message {
    font-size: 16px;
    color: #333;
    margin-bottom: 20px;
    display: flex;
    align-items: center;
    gap: 15px;
}

.confirmation-icon {
    color: #dc3545;
    font-size: 24px;
}

.confirmation-buttons {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
}

.k-button.confirm-btn {
    background-color: #d9534f;
    border-color: #d43f3a;
    color: white;
    padding: 8px 20px;
}

    .k-button.confirm-btn:hover {
        background-color: #c9302c;
        border-color: #ac2925;
    }

.k-button.cancel-btn {
    background-color: #5bc0de;
    border-color: #46b8da;
    color: white;
    padding: 8px 20px;
}

    .k-button.cancel-btn:hover {
        background-color: #31b0d5;
        border-color: #269abc;
    }

/* Grid delete button styling */
.k-grid .k-invalid {
    border: 1px solid #ff0000 !important;
    background: #ffe0e0 !important;
}

.invalid-cell {
    background-color: #ffe0e0 !important;
    box-shadow: inset 0 0 0 2px #ff0000;
}


.k-grid .invalid-cell input {
    background-color: #ffe0e0;
}
..invalid-cell {
    background-color: #ffe0e0 !important;
    position: relative;
    box-shadow: inset 0 0 0 2px red;
}

.invalid-cell::after {
    content: "!";
    color: red;
    position: absolute;
    right: 5px;
    top: 50%;
    transform: translateY(-50%);
    font-weight: bold;
}
/* Highlight the row being edited */
.k-grid-edit-row {
    background-color: #f9f9f9;
}

/* Highlight invalid fields */
.k-invalid {
    border-color: red !important;
    background-color: #ffe6e6 !important;
}

.k-invalid-msg {
    color: red;
    font-size: 12px;
    display: block;
    margin-top: 2px;
}
.k-readonly .k-input {
    background-color: #f5f5f5;
    cursor: not-allowed;
}
/* Ensure the extra expand arrow is hidden */
.k-menu .k-menu-expand-arrow.k-icon.k-i-arrow-60-down {
    display: none !important;
    visibility: hidden !important;
    width: 0 !important;
    height: 0 !important;
    overflow: hidden !important;
}
/* Style for rows with unsaved changes */
.k-grid table > tbody > tr.unsaved-row,
.k-grid table > tbody > tr.unsaved-row.k-alt {
    background-color: gold !important; /* Red background with transparency */
    border-left: 3px solid #ff0000 !important; /* Solid red border */
}

    /* Modified cells */
    .k-grid table > tbody > tr.unsaved-row td.unsaved-cell {
        background-color: goldenrod !important; /* Lighter red for cells */
        box-shadow: inset 0 0 0 1px #ff000040 !important; /* Red inner glow */
    }

    /* Badge styling */
    .k-grid table > tbody > tr.unsaved-row .unsaved-badge {
        background: #ff0000 !important; /* Pure red badge */
        color: white !important;
        font-size: 0.7em;
        padding: 1px 4px;
        border-radius: 2px;
        position: absolute;
        right: 2px;
        top: 50%;
        transform: translateY(-50%);
        z-index: 1000;
    }
/* TabStrip Selected Tab Styling */
/* ============================== */
.k-tabstrip-items .k-item.k-state-active {
    background-color: lightcyan !important; /* Light background */
    border-color: #dc3545 #dee2e6 #fff #dee2e6 !important; /* Red top border */
}

    .k-tabstrip-items .k-item.k-state-active .k-link {
        color: black !important; /* Red text */
        font-weight: bold;
    }

/* Hover effects */
.k-tabstrip-items .k-item:not(.k-state-active):hover {
    background-color: lightskyblue !important; /* Very light red */
}

.k-tabstrip-items .k-item:not(.k-state-active) .k-link:hover {
    color: #a71d2a !important; /* Darker red on hover */
}

/* Focus state */
.k-tabstrip-items .k-item.k-state-focused {
    box-shadow: inset 0 0 0 2px #dc354540 !important; /* Subtle red glow */
}
/*parent row highlight*/
/* Target both row and cells with !important */
.k-grid tr.k-master-row.selected-row,
.k-grid tr.k-master-row.selected-row > td {
    background-color: gold !important;
    background-image: none !important; /* Disable gradients */
    color: #000 !important; /* Text color */
}

    /* Maintain highlight on hover */
    .k-grid tr.k-master-row.selected-row:hover,
    .k-grid tr.k-master-row.selected-row:hover > td {
        background-color: blanchedalmond !important;
    }

/* Force highlight precedence */
.k-grid .k-grid-content tr.k-master-row.selected-row {
    z-index: 2;
    position: relative;
}
/* New row in master grid*/
/* For new rows being added */
.k-grid tr.k-grid-edit-row,
.k-grid tr.k-grid-edit-row > td {
    background-color: palegoldenrod !important;
    background-image: none !important;
}

/* For persisted new rows (after saving) */
.k-grid tr.newly-added-row,
.k-grid tr.newly-added-row > td {
    background-color: lightgreen !important; /* Light green background */
    border-bottom: 2px solid #43a047 !important; /* Dark green border */
}

/* start new menu*/
/* --- Menu Styling Enhancements --- */

/* Base styling for menu items */
.k-menu .k-link {
    padding: 10px 14px;
    font-size: 11px;
    color: #212529;
    font-weight: 500;
    transition: background-color 0.3s ease, color 0.3s ease;
}

/* Selected (active) menu item */
.k-menu .k-item.k-state-active > .k-link {
    background-color: #007bff !important; /* Bootstrap primary */
    color: #fff !important;
    font-weight: bold;
    border-radius: 4px;
}

/* Hover effects for unselected menu items */
.k-menu .k-item:not(.k-state-active):hover > .k-link {
    background-color: #e2e6ea !important;
    color: #0056b3 !important;
    font-weight: bold;
    border-radius: 4px;
}

/* Optional submenu hover effects */
.k-menu .k-item.k-menu-item:hover > .k-link {
    background-color: #f8f9fa !important;
    color: #343a40 !important;
}

/* Keep font bold for selected sub-items too */
.k-menu .k-item.k-state-selected > .k-link,
.k-menu .k-item.k-state-highlight > .k-link {
    font-weight: bold !important;
    color: #fff !important;
    background-color: #007bff !important;
    border-radius: 4px;
}

/* Rounded corners for horizontal menu */
.rounded-menu .k-menu-group {
    border-radius: 6px;
    overflow: hidden;
}

/* Optional: submenu styling */
.k-menu .k-menu-group .k-item .k-link {
    background-color: #ffffff;
    color: #333333;
}

.k-menu .k-menu-group .k-item.k-state-active > .k-link {
    background-color: hotpink !important; /*#007bff*/
    color: white !important;
    font-weight: bold;
}
/* Normal disabled Save button */
.k-button-disabled {
    background-color: #cccccc !important; /* Medium-light gray background */
    color: #666666 !important; /* Darker gray text */
    border-color: #bbbbbb !important; /* Softer border */
    cursor: not-allowed !important; /* Show 'no' cursor */
    pointer-events: none; /* Block clicks */
    opacity: 1; /* Full solid (no transparency) */
}

    /* Disable hover and active (click) styles for disabled button */
    .k-button-disabled:hover,
    .k-button-disabled:focus,
    .k-button-disabled:active {
        background-color: #cccccc !important; /* Keep the same color on hover */
        color: #666666 !important; /* Keep the same text color */
        border-color: #bbbbbb !important; /* Keep border soft */
        cursor: not-allowed !important;
        box-shadow: none !important; /* Remove any focus ring or shadow */
        text-decoration: none !important; /* No underline, no hover tricks */
    }
/* Disabled Kendo ComboBox */
.field-disabled {
    background-color: #eeeeee !important; /* Light gray background */
    color: #555555 !important; /* Slightly faded text */
    border: 1px solid #cccccc !important; /* Soft border */
    pointer-events: none; /* Block mouse interactions */
    opacity: 0.7; /* Make it look dimmer */
}

    /* Also remove hover, focus, click styles */
    .field-disabled:hover,
    .field-disabled:focus,
    .field-disabled:active {
        background-color: #eeeeee !important;
        border-color: #cccccc !important;
        box-shadow: none !important;
    }
    /*Reb border for duplicate*/
.invalid-combobox {
    border: 2px solid #f44336 !important; /* Red border */
    background-color: #ffe6e6 !important; /* Light pink background */
}

.k-grid-save-changes.k-state-disabled {
    background: #cccccc !important;
    color: #666666 !important;
    cursor: not-allowed !important;
    pointer-events: none !important;
}
/*start -  Global changes*/
/* Row highlight for Editing (existing row) */
.k-grid .editing-row {
    border: 2px solid #388e3c !important; /* Nice dark green */
    background-color: #e8f5e9 !important; /* Light green background */
}

/* Row highlight for Adding (new row) */
.k-grid .adding-row {
    border: 2px solid #1976d2 !important; /* Dark blue */
    background-color: #e3f2fd !important; /* Light blue background */
}

/* Required field indicator */
.k-grid td.required-cell {
    background-color: #fff0f0 !important; /* Light pink background */
    position: relative;
}

    .k-grid td.required-cell::after {
        content: "*";
        color: lightpink;
        font-size: 16px;
        font-weight: bold;
        position: absolute;
        top: 4px;
        right: 8px;
    }

/* Save button when enabled */
.k-grid-save-changes {
    background-color: #2196f3 !important; /* Light blue */
    color: white !important;
    border: 1px solid #1976d2 !important;
}

    /* Save button when disabled */
    .k-grid-save-changes.k-state-disabled {
        background: #e0e0e0 !important; /* Light grey */
        color: #757575 !important;
        border: 1px solid #bdbdbd !important;
        cursor: not-allowed !important;
        pointer-events: none !important;
    }

/* Cancel button when enabled */
.k-grid-cancel-changes {
    background-color: #f44336 !important; /* Red for cancel */
    color: white !important;
    border: 1px solid #d32f2f !important;
}

    /* Cancel button when disabled */
    .k-grid-cancel-changes.k-state-disabled {
        background: #e0e0e0 !important;
        color: #757575 !important;
        border: 1px solid #bdbdbd !important;
        cursor: not-allowed !important;
        pointer-events: none !important;
    }

/* Soft transitions for button color changes */
.k-grid-save-changes, .k-grid-cancel-changes {
    transition: background 0.3s, color 0.3s;
}

    /* (Optional) Save button glow when enabled */
    .k-grid-save-changes:not(.k-state-disabled) {
        box-shadow: 0 0 8px #2196f3;
    }
/*End Global changes*/
/* Disabled state for grid toolbar buttons */
/* Grid Toolbar and Button States */
. /* Grid Visibility Fixes */
.k-grid,
.k-tabstrip-content .k-grid {
    visibility: visible !important;
    opacity: 1 !important;
    height: auto !important;
}

/* Tabstrip Content Fix */
.k-tabstrip-content {
    display: block !important;
    overflow: visible !important;
    height: auto !important;
    padding: 10px;
}

/* Grid Header Fix */
.k-grid-header {
    visibility: visible !important;
}

/* Add Button Fix */
.k-grid .k-grid-add {
    visibility: visible !important;
    display: inline-block !important;
    /* Ensure grid visibility */
    .k-tabstrip-content .k-grid {
    visibility: visible !important;
}

/* Add button spacing */
.k-grid-toolbar .k-grid-add {
    margin-right: 5px;
}
/* Disabled Save button styling */
.k-grid-toolbar .k-grid-save-changes:disabled,
.k-grid-toolbar .k-grid-save-changes.k-state-disabled {
    opacity: 0.6 !important;
    cursor: not-allowed !important;
    background-color: #f0f0f0 !important;
    border-color: #d0d0d0 !important;
    color: #a0a0a0 !important;
    background-image: none !important;
    box-shadow: none !important;
}

/* Disabled Add button styling */
.k-grid-toolbar .k-grid-add:disabled,
.k-grid-toolbar .k-grid-add.k-state-disabled {
    opacity: 0.6 !important;
    cursor: not-allowed !important;
    background-color: #f0f0f0 !important;
    border-color: #d0d0d0 !important;
    color: #a0a0a0 !important;
    background-image: none !important;
    box-shadow: none !important;
}

/* Pointer events fix for anchor-based buttons */
.k-grid-toolbar a.k-grid-save-changes:disabled,
.k-grid-toolbar a.k-grid-add:disabled {
    pointer-events: none !important;
}
/* UNSAVED*/
.unsaved-badge {
    position: absolute;
    background-color: #dc3545 !important;
    color: white !important;
    padding: 3px 8px !important;
    font-size: 0.75rem !important;
    font-weight: 700 !important;
    border-radius: 4px !important;
    z-index: 1000;
    transition: left 0.1s ease-in-out;
    pointer-events: none;
    white-space: nowrap;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

/* Row highlighting with subtle animations */
.k-grid tr.unsaved-new {
    background-color: #f3faf7 !important;
    border-left: 3px solid #28a745 !important;
    transition: background-color 0.3s ease;
}

.k-grid tr.unsaved-edited {
    background-color: #fffcf5 !important;
    border-left: 3px solid #ffc107 !important;
    transition: background-color 0.3s ease;
}

/* Hover states */
.k-grid tr.unsaved-new:hover {
    background-color: #e0f3ec !important;
}

.k-grid tr.unsaved-edited:hover {
    background-color: #fff9e6 !important;
}

/* Badge hover enhancement */
.unsaved-badge:hover {
    transform: translateY(-1px);
    box-shadow: 0 3px 6px rgba(0,0,0,0.15);
}
/* Grid UNSAVED */
/*.k-grid {
    --unsaved-accent-new: #28a745;
    --unsaved-accent-edited: #ffc107;
    --unsaved-bg-new: #f3faf7;
    --unsaved-bg-edited: #fffcf5;
    transition: background-color 0.3s ease;
}*/
