For above error :
Severity	Code	Description	Project	File	Line	Suppression State
Error (active)	CS1061	'IEnumerable<VehicleViewModel>' does not contain a definition for 'NumOfVehicles' and no accessible extension method 'NumOfVehicles' accepting a first argument of type 'IEnumerable<VehicleViewModel>' could be found (are you missing a using directive or an assembly reference?)	CES	C:\ttc2020\0105-Cost Estimate System\Dev\CES\Views\Vehicles\Index.cshtml	249	
Severity	Code	Description	Project	File	Line	Suppression State
Error (active)	CS1061	'IEnumerable<VehicleViewModel>' does not contain a definition for 'Sopnumber' and no accessible extension method 'Sopnumber' accepting a first argument of type 'IEnumerable<VehicleViewModel>' could be found (are you missing a using directive or an assembly reference?)	CES	C:\ttc2020\0105-Cost Estimate System\Dev\CES\Views\Vehicles\Index.cshtml	379	
Model :
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Configuration;

namespace BCES.Models.Vehicle
{
   // [Table("VehicleList", Schema = "SBCES")]
    public class VehicleViewModel
    {
       // [Key]
       
       // [Display(Name = "Vehicle List ID")]
        public int VehicleListId { get; set; }

        public int ArchVehicleListId { get; set; }

        public int OldId { get; set; }

        [Required(ErrorMessage = "Vehicle Series Code is required")]
        [StringLength(50)]
      //  [Display(Name = "Vehicle Series Code")]
        public string VehSeriesCode { get; set; }

       [Required(ErrorMessage = "Field is required")]
      //  [IntegerValidator]
      //  [Display(Name = "Number of Vehicles")]
        public int NumOfVehicles { get; set; }

        [Required(ErrorMessage = "Description is required")]
        [StringLength(200)]
      //  [Display(Name = "Project Description")]
        public string ProjDesc { get; set; }

      //  [Required]
      //  [Display(Name = "Date Entered")]
        public DateTime DateEntered { get; set; } = DateTime.Now;

      //  [Required(ErrorMessage = "Entered By is required")]
        [StringLength(25)]
       // [Display(Name = "Entered By")]
        public string EnteredBy { get; set; }

       // [Required(ErrorMessage = "Last Modified By is required")]
        [StringLength(25)]
       // [Display(Name = "Last Modified By")]
        public string ModifiedLastBy { get; set; }

       // [Required]
       // [Display(Name = "Last Modified Date")]
        public DateTime ModifiedLastDate { get; set; }

        [StringLength(25)]
        //[Required(ErrorMessage = "Field is required")]
        public string? Make { get; set; }

        [StringLength(25)]
        
        public string? VehModel { get; set; }

        [StringLength(4)]
        [RegularExpression(@"^\d{4}$", ErrorMessage = "Year must be 4 digits")]
       // [Required(ErrorMessage = "Field is required")]
        public string? Year { get; set; }

        [StringLength(25)]
       // [Required(ErrorMessage = "Field is required")]
        public string? Engine { get; set; }

        [StringLength(25)]
        //[Required(ErrorMessage = "Field is required")]
        public string? Transmission { get; set; }

        [StringLength(25)]
       // [Required(ErrorMessage = "Field is required")]
        public string? Differential { get; set; }

        [StringLength(30)]
      //  [Display(Name = "SOP Number")]
        public string? Sopnumber { get; set; }

        public decimal? LabourCost { get; set; }

        public decimal? LabourOverheadAmount { get; set; }
        public decimal? LabourTotal { get; set; }
        public decimal? MaterialsTotal { get; set; }
       public decimal? TotalBusEstimateCost { get; set; }

    }
}
