I already have CustomVehiclePopup.cshtml in shared/editor template. Can we use this instead of window?
This pop up is usedby the grid, as it is set to PopUp.
CustomVehiclePopUp.cshtml  :
@model BCES.Models.Vehicle.VehicleViewModel

<div class="custom-editor-container">
    <!-- Hidden field for VehicleListId -->
    @Html.HiddenFor(model => model.VehicleListId)

    <!-- Row 1: Estimate #, Vehicle Series, # of Vehicles -->
    <div class="editor-row">
       @*  <div class="editor-group">
            <span class="editor-label">Estimate #</span>
            <div class="editor-field">
                @{
                    var estimateValue = Model.VehicleListId == 0 ? "System Generated" : Model.VehicleListId.ToString();
                    var estimateClass = Model.VehicleListId == 0 ? "system-generated" : "";
                }
                @(Html.Kendo().TextBox()
                    .Name("VehicleListIdDisplay")
                    .Value(estimateValue)
                    .HtmlAttributes(new { 
                        @class = estimateClass,
                        @readonly = "readonly", 
                        style = "background-color: #f0f0f0; width: 100%;" 
                    })
                )
            </div>
        </div> *@
        
        <div class="editor-group required-field">
            <span class="editor-label">Vehicle Series</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.VehSeriesCode, "ComboBoxEditor", new { required = "required" })
            </div>
        </div>
        
        <div class="editor-group required-field">
            <span class="editor-label"># of Vehicles</span>
            <div class="editor-field">
                @(Html.Kendo().IntegerTextBoxFor(model => model.NumOfVehicles)
                    .Min(1)
                    .HtmlAttributes(new { required = "required", style = "width:100%" })
                )
            </div>
        </div>
    </div>

    <!-- Row 2: Make, Model, Year -->
    <div class="editor-row">
        <div class="editor-group">
            <span class="editor-label">Make</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Make, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">Model</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.VehModel, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">Year</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Year, "ComboBoxEditor")
            </div>
        </div>
    </div>

    <!-- Row 3: Engine, Transmission, SOP Number -->
    <div class="editor-row">
        <div class="editor-group">
            <span class="editor-label">Engine</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Engine, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">Transmission</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Transmission, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">SOP Number</span>
            <div class="editor-field">
                @(Html.Kendo().TextBoxFor(model => model.Sopnumber)
                    .HtmlAttributes(new { style = "width:100%" })
                )
            </div>
        </div>
    </div>

    <!-- Full-width row for Project Description -->
    <div class="editor-row">
        <div class="editor-group required-field" style="flex: 0 0 100%">
            <span class="editor-label">Project Description</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.ProjDesc, "VehDescriptionComboBox", new { required = "required" })
            </div>
        </div>
    </div>

   @*  <!-- Form buttons (Update, Cancel) -->
    <div class="k-edit-buttons k-button-group">
        <button type="button" class="k-button k-grid-cancel">Cancel</button>
        <button type="submit" class="k-button k-primary k-grid-update">Update</button>
    </div> *@
</div>
