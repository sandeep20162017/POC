@model BCES.Models.Vehicle.VehicleViewModel

<style>
    /* Base container styling */
    .custom-editor-container {
        width: 800px;
        padding: 15px 20px 10px; /* Reduced top padding */
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f8f9fa;
        border-radius: 6px;
    }
    
    /* Title styling */
    .k-window-titlebar {
        padding: 12px 15px; /* Tighter title padding */
        background-color: #3f51b5;
        color: white;
        font-weight: 600;
        font-size: 16px;
    }
    
    /* Row styling - controls vertical spacing between rows */
    .editor-row {
        display: flex;
        margin-bottom: 15px; /* Reduced vertical spacing */
        gap: 15px; /* Reduced horizontal spacing */
    }
    
    /* Column styling - ensures consistent column widths */
    .editor-group {
        flex: 1;
        min-width: 0; /* Prevents overflow */
    }
    
    /* Label styling */
    .editor-label {
        display: block;
        margin-bottom: 5px; /* Reduced space between label and input */
        font-size: 12px; /* Smaller label font size */
        font-weight: 600;
        color: #3a3a3a;
        white-space: nowrap; /* Prevent label wrapping */
    }
    
    /* Required field indicator */
    .required-field .editor-label::after {
        content: " *";
        color: #e32;
    }
    
    /* Input field styling */
    .editor-field {
        width: 100%;
    }
    
    /* Kendo control styling */
    .k-textbox, 
    .k-combobox, 
    .k-numerictextbox,
    .k-dropdown {
        width: 100%;
        height: 30px; /* Slightly smaller control height */
        font-size: 13px; /* Smaller input font size */
    }
    
    /* Button container styling */
    .k-edit-buttons {
        display: flex;
        justify-content: flex-end;
        padding: 10px 0 5px;
        margin-top: 5px;
        border-top: 1px solid #e0e0e0;
    }
    
    /* Button styling */
    .k-grid-update,
    .k-grid-cancel {
        min-width: 80px; /* Smaller buttons */
        font-size: 12px; /* Smaller button text */
        margin-left: 6px;
        padding: 4px 8px;
    }
    
    /* Required field styling */
    .required-field .k-widget {
        border-left: 2px solid #e32; /* Thinner border */
        padding-left: 3px;
    }
    
    /* System generated styling */
    .system-generated {
        color: #666;
        font-style: italic;
        background-color: #f5f5f5;
    }
    
    /* Responsive adjustments */
    @media (max-width: 850px) {
        .custom-editor-container {
            width: 95%;
            padding: 10px 15px 5px;
        }
        
        .editor-row {
            flex-direction: column;
            gap: 10px;
            margin-bottom: 10px;
        }
    }
</style>

<div class="custom-editor-container">
    <!-- Hidden field for VehicleListId -->
    @Html.HiddenFor(model => model.VehicleListId)

    <!-- Row 1: Estimate #, Vehicle Series, # of Vehicles -->
    <div class="editor-row">
        <div class="editor-group">
            <span class="editor-label">Estimate #</span>
            <div class="editor-field">
                @{
                    var estimateValue = Model.VehicleListId == 0 ? "System Generated" : Model.VehicleListId.ToString();
                    var estimateClass = Model.VehicleListId == 0 ? "system-generated" : "";
                }
                @(Html.Kendo().TextBox()
                    .Name("VehicleListIdDisplay")
                    .Value(estimateValue)
                    .HtmlAttributes(new { 
                        @class = estimateClass,
                        @readonly = "readonly", 
                        style = "background-color: #f0f0f0; width: 100%;" 
                    })
                )
            </div>
        </div>
        
        <div class="editor-group required-field">
            <span class="editor-label">Vehicle Series</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.VehSeriesCode, "ComboBoxEditor", new { required = "required" })
            </div>
        </div>
        
        <div class="editor-group required-field">
            <span class="editor-label"># of Vehicles</span>
            <div class="editor-field">
                @(Html.Kendo().IntegerTextBoxFor(model => model.NumOfVehicles)
                    .Min(1)
                    .HtmlAttributes(new { required = "required", style = "width:100%" })
                )
            </div>
        </div>
    </div>

    <!-- Row 2: Make, Model, Year -->
    <div class="editor-row">
        <div class="editor-group">
            <span class="editor-label">Make</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Make, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">Model</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.VehModel, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">Year</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Year, "ComboBoxEditor")
            </div>
        </div>
    </div>

    <!-- Row 3: Engine, Transmission, SOP Number -->
    <div class="editor-row">
        <div class="editor-group">
            <span class="editor-label">Engine</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Engine, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">Transmission</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Transmission, "ComboBoxEditor")
            </div>
        </div>
        
        <div class="editor-group">
            <span class="editor-label">SOP Number</span>
            <div class="editor-field">
                @(Html.Kendo().TextBoxFor(model => model.Sopnumber)
                    .HtmlAttributes(new { style = "width:100%" })
                )
            </div>
        </div>
    </div>

    <!-- Full-width row for Project Description -->
    <div class="editor-row">
        <div class="editor-group required-field" style="flex: 0 0 100%">
            <span class="editor-label">Project Description</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.ProjDesc, "VehDescriptionComboBox", new { required = "required" })
            </div>
        </div>
    </div>

    <!-- Form buttons (Update, Cancel) -->
    <div class="k-edit-buttons k-button-group">
        <button type="button" class="k-button k-grid-cancel">Cancel</button>
        <button type="submit" class="k-button k-primary k-grid-update">Update</button>
    </div>
</div>
