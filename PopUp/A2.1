Custom Vehicle Editor Template
I'll create a complete solution with the popup editor layout you requested, fixing the label wrapping issue and adding proper styling for all elements.

html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Custom Vehicle Editor Template</title>
    <!-- Kendo UI CSS -->
    <link href="https://kendo.cdn.telerik.com/themes/6.0.0/default/default-main.css" rel="stylesheet">
    <style>
        /* Base styling for the editor */
        .custom-editor-container {
            width: 800px;
            padding: 20px;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            border-radius: 6px;
        }
        
        /* Row styling - controls vertical spacing between rows */
        .editor-row {
            display: flex;
            margin-bottom: 20px; /* Vertical spacing between rows */
            gap: 20px; /* Horizontal spacing between columns */
        }
        
        /* Column styling - ensures consistent column widths */
        .editor-group {
            flex: 1;
            min-width: 0; /* Prevents overflow */
        }
        
        /* Label styling */
        .editor-label {
            display: block;
            margin-bottom: 8px; /* Space between label and input */
            font-size: 13px; /* Label font size */
            font-weight: 600;
            color: #3a3a3a;
        }
        
        /* Required field indicator */
        .required-field .editor-label::after {
            content: " *";
            color: #e32;
        }
        
        /* Input field styling */
        .editor-field {
            width: 100%;
        }
        
        /* Kendo control styling */
        .k-textbox, 
        .k-combobox, 
        .k-numerictextbox,
        .k-dropdown {
            width: 100%;
            height: 32px; /* Control height */
            font-size: 14px; /* Input font size */
        }
        
        /* Button container styling */
        .k-edit-buttons {
            display: flex;
            justify-content: flex-end;
            padding: 15px 0 0;
            margin-top: 10px;
            border-top: 1px solid #e0e0e0;
        }
        
        /* Button styling */
        .k-grid-update,
        .k-grid-cancel {
            min-width: 90px;
            font-size: 13px;
            margin-left: 8px;
        }
        
        /* Required field styling */
        .required-field .k-widget {
            border-left: 3px solid #e32;
            padding-left: 5px;
        }
        
        /* Responsive adjustments */
        @media (max-width: 850px) {
            .custom-editor-container {
                width: 95%;
                padding: 15px;
            }
            
            .editor-row {
                flex-direction: column;
                gap: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="custom-editor-container">
        <!-- Hidden field for VehicleListId -->
        @Html.HiddenFor(model => model.VehicleListId)

        <!-- Row 1: Estimate #, Vehicle Series, # of Vehicles -->
        <div class="editor-row">
            <div class="editor-group">
                <span class="editor-label">Estimate #</span>
                <div class="editor-field">
                    @(Html.Kendo().TextBoxFor(model => model.VehicleListId)
                        .HtmlAttributes(new { @readonly = "readonly", style = "background-color: #f0f0f0;" })
                    )
                </div>
            </div>
            
            <div class="editor-group required-field">
                <span class="editor-label">Vehicle Series</span>
                <div class="editor-field">
                    @Html.EditorFor(model => model.VehSeriesCode, "ComboBoxEditor", new { required = "required" })
                </div>
            </div>
            
            <div class="editor-group required-field">
                <span class="editor-label"># of Vehicles</span>
                <div class="editor-field">
                    @(Html.Kendo().IntegerTextBoxFor(model => model.NumOfVehicles)
                        .Min(1)
                        .HtmlAttributes(new { required = "required", style = "width:100%" })
                    )
                </div>
            </div>
        </div>

        <!-- Row 2: Make, Model, Year -->
        <div class="editor-row">
            <div class="editor-group">
                <span class="editor-label">Make</span>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Make, "ComboBoxEditor")
                </div>
            </div>
            
            <div class="editor-group">
                <span class="editor-label">Model</span>
                <div class="editor-field">
                    @Html.EditorFor(model => model.VehModel, "ComboBoxEditor")
                </div>
            </div>
            
            <div class="editor-group">
                <span class="editor-label">Year</span>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Year, "ComboBoxEditor")
                </div>
            </div>
        </div>

        <!-- Row 3: Engine, Transmission, SOP Number -->
        <div class="editor-row">
            <div class="editor-group">
                <span class="editor-label">Engine</span>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Engine, "ComboBoxEditor")
                </div>
            </div>
            
            <div class="editor-group">
                <span class="editor-label">Transmission</span>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Transmission, "ComboBoxEditor")
                </div>
            </div>
            
            <div class="editor-group">
                <span class="editor-label">SOP Number</span>
                <div class="editor-field">
                    @(Html.Kendo().TextBoxFor(model => model.Sopnumber)
                        .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
            </div>
        </div>

        <!-- Full-width row for Project Description -->
        <div class="editor-row">
            <div class="editor-group required-field" style="flex: 0 0 100%">
                <span class="editor-label">Project Description</span>
                <div class="editor-field">
                    @Html.EditorFor(model => model.ProjDesc, "VehDescriptionComboBox", new { required = "required" })
                </div>
            </div>
        </div>

        <!-- Form buttons (Update, Cancel) -->
        <div class="k-edit-buttons k-button-group">
            <button type="button" class="k-button k-grid-cancel">Cancel</button>
            <button type="submit" class="k-button k-primary k-grid-update">Update</button>
        </div>
    </div>

    <!-- Kendo UI Scripts -->
    <script src="https://kendo.cdn.telerik.com/2023.2.829/js/jquery.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2023.2.829/js/kendo.all.min.js"></script>
</body>
</html>
Key Features and Improvements:
Layout and Spacing:
Rows: Each row has margin-bottom: 20px for vertical spacing

Columns: Each column group has gap: 20px for horizontal spacing

Responsive Design: Columns stack vertically on smaller screens

Font and Control Sizing:
Labels: 13px font size with 600 weight for clarity

Inputs: 14px font size for better readability

Controls: Consistent 32px height for all input fields

Buttons: 13px font size with 90px minimum width

Required Field Styling:
Red asterisk (*) after required field labels

Left border highlight for required fields

Consistent styling with your in-cell mode

Button Implementation:
Added "Update" and "Cancel" buttons at bottom right

Primary styling for the Update button

Proper spacing between buttons

Buttons positioned with a top border separator

Other Improvements:
Read-only styling for Estimate # field

Required field validation attributes maintained

Consistent ComboBoxEditor usage as in in-cell mode

Clean, professional styling that matches Telerik's design language

CSS Comments Explained:
css
/* Row styling - controls vertical spacing between rows */
.editor-row {
    margin-bottom: 20px; /* Vertical spacing between rows */
    gap: 20px; /* Horizontal spacing between columns */
}

/* Label styling - font size and spacing */
.editor-label {
    font-size: 13px; /* Label font size */
    margin-bottom: 8px; /* Space between label and input */
}

/* Input control styling */
.k-textbox, 
.k-combobox, 
.k-numerictextbox,
.k-dropdown {
    height: 32px; /* Control height */
    font-size: 14px; /* Input font size */
}
