Yu are ASP.NET core expert. ASp.NET core version 8.0. Yu have good experience of Telerik UI ASP.NET Core controls.
Based on  the following details, I need to call include contents of _LabourDetaialRebuiltParts.cshtml in Kendo  ExpansionPanel.
I have included all the relevant files scripts beow for yu to make changes.
Kendo Expansion panel eample :
@(Html.Kendo().ExpansionPanel()
            .Name("brazil")
            .Title("Brazil")
            .SubTitle("South America")
            .Expanded(true)
            .Content( //Call _LabourDetaialRebuiltParts.cshtml view here )
)

Kendo
_LabourDetaialRebuiltParts.cshtml :
@model IEnumerable<CES.Models.Parts.LabourDetailsRebuiltPartsViewModel>

@{
    ViewData["Title"] = "Labour Details Rebuilt Parts";
}

<h6>Labour Details Rebuilt Parts</h6>

@(Html.Kendo().Grid<CES.Models.Parts.LabourDetailsRebuiltPartsViewModel>()
    .Name("LabourRebuiltPartGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.LabourType).Title("Labour Type");
        columns.Bound(c => c.CC).Title("CC");
        columns.Bound(c => c.Task).Title("Task");
        columns.Bound(c => c.Usage).Title("Usage");
        columns.Bound(c => c.Time).Title("Time").Format("{0:N2}");
        columns.Bound(c => c.WrenchTime).Title("Wrench Time").Format("{0:N2}");
        columns.Bound(c => c.DateRevised).Title("Date Revised");
        columns.Command(command => command.Edit()).Title("Actions");
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            model.Id(c => c.LabourType); // Assuming LabourType is a unique identifier
            model.Field(c => c.LabourType);
        })
        

        .Read(read => read.Url(Url.Action("GetLabourDetails", "LabourDetails")).Type(HttpVerbs.Get))
        .Create(create => create.Url(Url.Action("CreateLabourDetail", "LabourDetails")).Type(HttpVerbs.Post))
        .Update(update => update.Url(Url.Action("UpdateLabourDetail", "LabourDetails")).Type(HttpVerbs.Post))
        .Destroy(delete => delete.Url(Url.Action("DeleteLabourDetail", "LabourDetails")).Type(HttpVerbs.Post))
    )
)
Index.cshtml, script which calls controller actio to render above partial view :
 <script>
     $(document).ready(function () {
         console.log('inside doc ready');
         var grid = $("#RebuiltPartsGrid").data("kendoGrid");

         grid.bind("detailInit", function (e) {
             // Get the container for the detail template
             var container = e.detailCell.find("#detail-template-" + e.data.RebuiltStockNum);
             console.log('e.data.RebuiltStockNum : ');
             console.log(e.data.RebuiltStockNum);

             // Load PartialTest1
             $.get('@Url.Action("LabourDetailsPartial", "RebuiltParts")', function (data) {
                 console.log(data);
                 
                 container.append(data); // Append the content of PartialTest1
                 console.log(container);
             });
         });
     });
 </script> 
RebuiltPartsController.cs :
 public IActionResult LabourDetailsPartial()
 {
     var model = new List<LabourDetailsRebuiltPartsViewModel> { };
     
        
         return PartialView("_LabourDetailsRebuiltParts", model);
 }


