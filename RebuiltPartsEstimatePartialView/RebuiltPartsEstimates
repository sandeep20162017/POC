905 783 6785 - Ivan
$60 1.5
Rogers
==============
SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0)) AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B2 ) AND REBUILT_PART = 'N' AND LINK_TYPE =UPPER(:B1 ) UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED, NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(:B2 ) AND NSC_PARTS_USED.LINK_TYPE = UPPER(:B1 ) AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME

SELECT UPPER(SC_PARTS_USED.MMS_REBUILT_CODE) AS "REBUILT NUMBER", NVL(A.RB_UNIT_COST,0) AS "UNIT COST", UPPER(SC_PARTS_USED.COST_CENTRE) AS "CC", UPPER(SC_PARTS_USED.QTY_REQD) AS "QTY", REPLACE(SC_PARTS_USED.PERCENT_USAGE,',','.') AS "%", SC_PARTS_USED.CORECOST AS "CORE COST", NVL(A.RB_COST,0) AS "TOTAL COST", UPPER(RB_MASTERLIST.DETAILED_DESC) AS "DESCRIPTION", UPPER(RB_MASTERLIST.KEYWORD) AS "KEYWORD", SC_PARTS_USED.ROWID FROM SC_PARTS_USED, RB_MASTERLIST, (SELECT ROUND(SUM(TOTAL_COST),2) AS RB_COST, ROUND(SUM(TOTAL_UNIT_COST),2) AS RB_UNIT_COST , RB_REFERENCE FROM TEMP_MATERIALS_LIST GROUP BY RB_REFERENCE) A WHERE SC_PARTS_USED.LINK_CODE = :B2 AND SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = :B1 AND RB_MASTERLIST.REBUILT_STOCK_NUM(+)= SC_PARTS_USED.MMS_REBUILT_CODE AND RB_REFERENCE (+)= SC_PARTS_USED.MMS_REBUILT_CODE ORDER BY SC_PARTS_USED.MMS_REBUILT_CODE

SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0)) AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B2 ) AND REBUILT_PART = 'N' AND LINK_TYPE =UPPER(:B1 ) UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED, NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(:B2 ) AND NSC_PARTS_USED.LINK_TYPE = UPPER(:B1 ) AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME

SELECT UPPER(SC_PARTS_USED.MMS_REBUILT_CODE) AS "REBUILT NUMBER", NVL(A.RB_UNIT_COST,0) AS "UNIT COST", UPPER(SC_PARTS_USED.COST_CENTRE) AS "CC", UPPER(SC_PARTS_USED.QTY_REQD) AS "QTY", REPLACE(SC_PARTS_USED.PERCENT_USAGE,',','.') AS "%", SC_PARTS_USED.CORECOST AS "CORE COST", NVL(A.RB_COST,0) AS "TOTAL COST", UPPER(RB_MASTERLIST.DETAILED_DESC) AS "DESCRIPTION", UPPER(RB_MASTERLIST.KEYWORD) AS "KEYWORD", SC_PARTS_USED.ROWID FROM SC_PARTS_USED, RB_MASTERLIST, (SELECT ROUND(SUM(TOTAL_COST),2) AS RB_COST, ROUND(SUM(TOTAL_UNIT_COST),2) AS RB_UNIT_COST , RB_REFERENCE FROM TEMP_MATERIALS_LIST GROUP BY RB_REFERENCE) A WHERE SC_PARTS_USED.LINK_CODE = :B2 AND SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = :B1 AND RB_MASTERLIST.REBUILT_STOCK_NUM(+)= SC_PARTS_USED.MMS_REBUILT_CODE AND RB_REFERENCE (+)= SC_PARTS_USED.MMS_REBUILT_CODE ORDER BY SC_PARTS_USED.MMS_REBUILT_CODE

SELECT UPPER(REBUILT_STOCK_NUM) AS "rebuilt_stock_num", MMS_STOCK_CODE, KEYWORD, DETAILED_DESC, NVL(SOP_NUMBER,' ') AS "sop_number", NVL(JOB_NUMBER,' ') AS "job_number", CORE_PART_NUM, CORE_CHARGE, ESTIMATED_COST, DATE_MODIFIED, ACTIVE, ROWID FROM RB_MASTERLIST

--CES_INQUIRY.RETRIEVE_RB

SELECT DISTINCT UPPER(SC_PARTS_USED.LINK_CODE) AS "link_code", SC_PARTS_USED.QTY_REQD AS "QTY", SC_PARTS_USED.PERCENT_USAGE AS "%", SC_PARTS_USED.MMS_REBUILT_CODE AS "Rebuilt Code" FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = :B2 AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER(:B1 )

--CES_INQUIRY.RETRIEVE_ALL_LABOUR

SELECT EMPLOYEE_LABOUR.LABOUR_DEFN AS "LABOUR TYPE", EMPLOYEE_LABOUR.COSTCENTRE AS "CC", EMPLOYEE_LABOUR.TASK AS "TASK", REPLACE(EMPLOYEE_LABOUR.USAGE,',','.') AS "USAGE", EMPLOYEE_LABOUR.HRS_REQD AS "TIME", EMPLOYEE_SALARIES.RATE_PER_HOUR AS "RATE PER HOUR", EMPLOYEE_LABOUR.TIME_ADDITION AS "TIME ADDITION", HHMM_TO_DECIMAL(EMPLOYEE_LABOUR.ADJ_HRS) AS "WRENCH TIME" FROM EMPLOYEE_LABOUR, EMPLOYEE_SALARIES, EMPL_CLASS WHERE EMPLOYEE_LABOUR.LABOUR_DEFN = UPPER(EMPL_CLASS.LABOUR_DEFN) AND EMPLOYEE_SALARIES.WAGE_GROUP = EMPL_CLASS.WAGE_GROUP AND EMPLOYEE_LABOUR.LINK_NUMBER = :B2 AND EMPLOYEE_LABOUR.TYPEID = :B1 

SELECT EMPLOYEE_LABOUR.LABOUR_DEFN AS "LABOUR TYPE", EMPLOYEE_LABOUR.COSTCENTRE AS "CC", EMPLOYEE_LABOUR.TASK AS "TASK", REPLACE(EMPLOYEE_LABOUR.USAGE,',','.') AS "USAGE", EMPLOYEE_LABOUR.HRS_REQD AS "TIME", EMPLOYEE_SALARIES.RATE_PER_HOUR AS "RATE PER HOUR", EMPLOYEE_LABOUR.TIME_ADDITION AS "TIME ADDITION", HHMM_TO_DECIMAL(EMPLOYEE_LABOUR.ADJ_HRS) AS "WRENCH TIME" FROM EMPLOYEE_LABOUR, EMPLOYEE_SALARIES, EMPL_CLASS WHERE EMPLOYEE_LABOUR.LABOUR_DEFN = UPPER(EMPL_CLASS.LABOUR_DEFN) AND EMPLOYEE_SALARIES.WAGE_GROUP = EMPL_CLASS.WAGE_GROUP AND EMPLOYEE_LABOUR.LINK_NUMBER = :B1 AND EMPLOYEE_LABOUR.TYPEID = 'RB'

INSERT INTO TEMP_LABOUR_LIST VALUES (:B8 ,:B7 ,:B6 ,:B2 ,HHMM_TO_MINUTES(:B4 ),:B5 , :B5 * HHMM_TO_MINUTES(:B4 ) * :B2 / 6000, ROUND((:B2 / 100) * HHMM_TO_MINUTES(:B4 )) ,'RB',UPPER(:B3 ), ROUND((:B2 / 100) * HHMM_TO_MINUTES(:B1 )))

SELECT CC AS "COST CENTRE", DECIMAL_MINUTES_TO_HHMM(SUM(EXTENDED_TIME)) AS "LABOUR HRS", SUM(TOTAL_COST) AS "TOTAL COST" FROM TEMP_LABOUR_LIST GROUP BY CC ORDER BY CC ASC

--CES_INQUIRY.RETRIEVE_MB_LABOUR
SELECT EMPLOYEE_LABOUR.LABOUR_DEFN AS "LABOUR TYPE", EMPLOYEE_LABOUR.COSTCENTRE AS "CC", EMPLOYEE_LABOUR.TASK AS "TASK", REPLACE(EMPLOYEE_LABOUR.USAGE,',','.') AS "USAGE", EMPLOYEE_LABOUR.HRS_REQD AS "TIME", EMPLOYEE_LABOUR.ADJ_HRS AS "WRENCH TIME", EMPLOYEE_LABOUR.DATE_REVISED AS "DATE REVISED", EMPLOYEE_LABOUR.TIME_ADDITION AS "TIME ADDITION", CES_SETTINGS.VALUE AS "VALUE", EMPLOYEE_LABOUR.ROWID FROM EMPLOYEE_LABOUR, (SELECT CES_SETTINGS.VALUE FROM CES_SETTINGS WHERE CES_SETTINGS.PARAMETER = 'NON_PRODUCTIVE_ADJUSTMENT') CES_SETTINGS WHERE EMPLOYEE_LABOUR.LINK_NUMBER = :B2 AND EMPLOYEE_LABOUR.TYPEID = :B1 ORDER BY EMPLOYEE_LABOUR.COSTCENTRE

INSERT INTO TEMP_LABOUR_LIST VALUES (:B9 ,:B8 ,:B7 ,:B3 ,ROUND((HHMM_TO_MINUTES(:B5 ) * :B1 ),0),:B6 , (:B6 / 60) * ROUND(HHMM_TO_MINUTES(:B5 ) * :B1 ) * (:B3 /100) , ROUND((:B3 / 100) * HHMM_TO_MINUTES(:B5 ) * :B1 ) ,'RB',UPPER(:B4 ), ROUND((:B3 / 100) * ROUND(HHMM_TO_MINUTES(:B2 ) * :B1 )))

SELECT ROUND(SUM(TOTAL_COST),2) AS LABOUR_COST FROM TEMP_LABOUR_LIST

SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0)) AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B2 ) AND REBUILT_PART = 'N' AND LINK_TYPE =UPPER(:B1 ) UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED, NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(:B2 ) AND NSC_PARTS_USED.LINK_TYPE = UPPER(:B1 ) AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME

===========
SELECT  
 S.MODULE,
 S.SQL_FULLTEXT, 
 S.SQL_PROFILE,
 S.EXECUTIONS,
 S.LAST_LOAD_TIME,
 S.PARSING_USER_ID,
 S.SERVICE                                                                       
FROM
 SYS.V_$SQL S, 
 SYS.ALL_USERS U
WHERE
 S.PARSING_USER_ID=U.USER_ID 
 AND S.SERVICE ='ces_prd_svc'   
 And S.MODULE = 'CES2.exe'
ORDER BY TO_DATE(S.LAST_LOAD_TIME, 'YYYY-MM-DD/HH24:MI:SS') desc;	






