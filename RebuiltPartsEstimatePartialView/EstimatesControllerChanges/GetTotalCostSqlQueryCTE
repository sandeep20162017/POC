BEGIN TRY
    -- Declare variables
    DECLARE @RebuiltPartNumber VARCHAR(30) = '035434';
    DECLARE @LinkCode VARCHAR(30) = NULL;
    DECLARE @LinkType VARCHAR(5) = NULL;

    PRINT 'Retrieving LinkCode and LinkType...';

    -- Retrieve LinkCode and LinkType from ScPartsUsed and NScPartsUsed
    SELECT TOP 1 @LinkCode = LinkCode, @LinkType = LinkType
    FROM SBCES.ScPartsUsed
    WHERE LinkCode = @RebuiltPartNumber;

    IF @LinkCode IS NULL
    BEGIN
        SELECT TOP 1 @LinkCode = LinkCode, @LinkType = LinkType
        FROM SBCES.NScPartsUsed
        WHERE LinkCode = @RebuiltPartNumber;
    END

    PRINT 'LinkCode: ' + ISNULL(@LinkCode, 'Not Found');
    PRINT 'LinkType: ' + ISNULL(@LinkType, 'Not Found');

    -- Check if LinkCode and LinkType were found
    IF @LinkCode IS NULL OR @LinkType IS NULL
    BEGIN
        PRINT 'Error: LinkCode or LinkType not found for RebuiltPartNumber: ' + @RebuiltPartNumber;
        RETURN;
    END

    -- Labour costs calculation
    WITH LabourData AS (
        SELECT 
            EL.LabourDefn AS LabourType,
            EL.CostCentre AS CC,
            EL.Task,
            CAST(REPLACE(EL.Usage, ',', '.') AS DECIMAL(18, 2)) AS Usage,
            CASE 
                WHEN CHARINDEX(':', EL.HrsReqd) = 0 THEN TRY_CAST(EL.HrsReqd AS DECIMAL(10, 2))
                ELSE TRY_CAST(LEFT(EL.HrsReqd, CHARINDEX(':', EL.HrsReqd) - 1) AS INT) +
                     TRY_CAST(SUBSTRING(EL.HrsReqd, CHARINDEX(':', EL.HrsReqd) + 1, LEN(EL.HrsReqd)) AS INT) / 60.0
            END AS Time,
            CAST(ES.RatePerHour AS DECIMAL(18, 2)) AS RatePerHour,
            CAST(REPLACE(EL.Usage, ',', '.') AS DECIMAL(18, 2)) * CAST(ES.RatePerHour AS DECIMAL(18, 2)) AS TotalCost,
            EL.TypeId AS EstimateType,
            EL.LinkNumber AS EstimateNumber
        FROM 
            SBCES.EmployeeLabour EL
        JOIN SBCES.EmplClass EC ON EL.LabourDefn = UPPER(EC.LabourDefn)
        JOIN SBCES.EmployeeSalaries ES ON EC.WageGroup = ES.WageGroup
        WHERE EL.LinkNumber = @LinkCode
    )

    -- Material costs calculation
    , MaterialData AS (
        SELECT 
            ISNULL(C.Name, 'NONE') AS AssemblyArea,
            ISNULL(A.CostCentre, '0') AS CostCentre,
            SUM(CAST(A.Cost AS DECIMAL(18, 2))) AS TotalCost,
            SUM(CAST(A.TaxCost AS DECIMAL(18, 2))) AS TaxableCost,
            @LinkCode AS RbReference,
            SUM(CAST(A.TotalUnitCost AS DECIMAL(18, 2))) AS TotalUnitCost
        FROM (
            -- Stock-coded parts
            SELECT 
                CostCentre,
                CAST(SBCES.FinalCost(PercentUsage, QtyReqd, MmsCost, 0) AS DECIMAL(18, 2)) AS Cost,
                CAST(SBCES.FinalCost(PercentUsage, QtyReqd, MmsCost, 0) AS DECIMAL(18, 2)) AS TaxCost,
                CAST(SBCES.FinalCost(PercentUsage, QtyReqd, MmsCost, 0) AS DECIMAL(18, 2)) AS TotalUnitCost
            FROM SBCES.ScPartsUsed
            WHERE LinkCode = @LinkCode AND RebuiltPart = 'N' AND LinkType = @LinkType

            UNION ALL

            -- Non-stock-coded parts
            SELECT 
                NSCPartsUsed.CostCentre,
                CAST(SBCES.FinalCost(NSCPartsUsed.PercentUsage, NSCPartsUsed.QtyReqd, NonStockCodedParts.OemPartCost, 0) AS DECIMAL(18, 2)) AS Cost,
                CAST(SBCES.FinalCost(NSCPartsUsed.PercentUsage, NSCPartsUsed.QtyReqd, NonStockCodedParts.OemPartCost, 0) AS DECIMAL(18, 2)) AS TaxCost,
                CAST(SBCES.FinalCost(NSCPartsUsed.PercentUsage, NSCPartsUsed.QtyReqd, NonStockCodedParts.OemPartCost, 0) AS DECIMAL(18, 2)) AS TotalUnitCost
            FROM SBCES.NSCPartsUsed
            JOIN SBCES.NonStockCodedParts ON NSCPartsUsed.Id = NonStockCodedParts.Id
            WHERE NSCPartsUsed.LinkCode = @LinkCode AND NSCPartsUsed.LinkType = @LinkType
        ) A
        JOIN SBCES.CostCentres C ON A.CostCentre = C.CostCentre
        GROUP BY A.CostCentre, C.Name
    )

    -- Final costs summary
    SELECT 
        SUM(CoreCost) AS CoreCostExclTax,
        Material.TotalCost AS MaterialCost,
        Labour.TotalCost AS LabourCost,
        Labour.TotalCost * 0.01 AS LabourOverheadTotal, -- Example overhead rate
        Labour.TotalCost + (Labour.TotalCost * 0.01) AS LabourTotal,
        SUM(Material.TaxableCost) AS TaxTotal,
        Material.TotalCost + Labour.TotalCost + (Labour.TotalCost * 0.01) + SUM(Material.TaxableCost) AS TotalCostWithTax
    FROM 
        SBCES.ScPartsUsed CoreCost
    LEFT JOIN LabourData Labour ON Labour.EstimateNumber = @LinkCode
    LEFT JOIN MaterialData Material ON Material.RbReference = @LinkCode
    WHERE CoreCost.LinkCode = @LinkCode AND CoreCost.LinkType = @LinkType;

    PRINT 'Process completed successfully.';
END TRY
BEGIN CATCH
    PRINT 'An error occurred: ' + ERROR_MESSAGE();
END CATCH;
