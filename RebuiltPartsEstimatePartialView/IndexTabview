@using BCES.Models.Parts
@using BCES.Models.Common
@model IEnumerable<BCES.Models.Parts.RebuiltPartsViewModel>

@{
    ViewData["Title"] = "Rebuilt Parts";
}

<h4>Rebuilt Parts</h4>

@(Html.Kendo().Grid<RebuiltPartsViewModel>()
    .Name("RebuiltPartsGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.RebuiltStockNum).Title("Rebuilt Stock Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.MmsStockCode).Title("MMS Stock Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.DetailedDesc).Title("Description").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.Keyword).Title("Keyword").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.JobNumber).Title("Job Number").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.CorePartNum).Title("Core Code").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(c => c.CoreCharge).Title("Core Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
        columns.Bound(c => c.BuyNewCost).Title("Buy Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
        columns.Bound(c => c.RemanCost).Title("Remanufactured Cost").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte"))).Format("{0:C2}").EditorTemplateName("Currency");
        columns.Command(command =>
        {
            command.Edit();
        }).Title("Actions");
    })
    .ToolBar(toolbar => { toolbar.Create(); })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .ClientDetailTemplateId("template")
    .Resizable(r => r.Columns(true))
    .Groupable(g => g.ShowFooter(false))
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            model.Id(c => c.RbMasterlistId);
            model.Field(c => c.RbMasterlistId);
            model.Field(c => c.RebuiltStockNum).Editable(true);
            model.Field(c => c.MmsStockCode).Editable(true);
            model.Field(c => c.VehicleSeries).DefaultValue(new List<BCES.Models.Common.ListOfBusesModel>()).Editable(true);
        })
        .Read(read => read.Url(Url.Action("GetRebuiltPartsView", "RebuiltParts")).Type(HttpVerbs.Get))
        .Create(create => create.Url(Url.Action("AddRebuiltPartsView", "RebuiltParts")).Type(HttpVerbs.Post))
        .Update(update => update.Url(Url.Action("UpdateRebuiltPartsView", "RebuiltParts")).Type(HttpVerbs.Post))
    )
)

<div id="estimates-container"></div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var grid = $("#RebuiltPartsGrid").data("kendoGrid");

            // Initialize Kendo Notification for displaying messages
            var notification = $("#notification").kendoNotification({
                position: {
                    pinned: true,
                    top: 50,
                    right: 50
                },
                autoHideAfter: 5000, // Hide after 5 seconds
                stacking: "down"
            }).data("kendoNotification");

            grid.bind("detailInit", function (e) {
                // Get the container for the detail template
                var container = e.detailCell.find("#detail-template-" + e.data.RebuiltStockNum);

                // Load the TabStrip structure
                container.html(`
                    <div id="tabstrip-container-${e.data.RebuiltStockNum}">
                        <ul>
                            <li class="k-state-active">Labour Details</li>
                            <li>CC Details</li>
                            <li>Parts Details</li>
                        </ul>
                        <div></div>
                        <div></div>
                        <div></div>
                    </div>
                    <div class="action-buttons">
                        <button class="k-button k-button-primary" id="save-button">Save</button>
                        <button class="k-button k-button-secondary" id="archive-button">Archive</button>
                        <button class="k-button k-button-secondary" id="cancel-button">Cancel</button>
                    </div>
                `);

                // Initialize the Kendo TabStrip
                var tabStrip = $("#tabstrip-container-" + e.data.RebuiltStockNum).kendoTabStrip({
                    animation: { open: { effects: "fadeIn" } },
                    select: function (e) {
                        var tabIndex = $(e.item).index(); // Get the index of the selected tab
                        var tabUrl = "";

                        // Determine the URL based on the selected tab
                        switch (tabIndex) {
                            case 0:
                                tabUrl = '@Url.Action("LabourDetailsPartial", "RebuiltParts")';
                                break;
                            case 1:
                                tabUrl = '@Url.Action("CCDetailsPartial", "RebuiltParts")';
                                break;
                            case 2:
                                tabUrl = '@Url.Action("MaterialDetailsPartial", "RebuiltParts")';
                                break;
                        }

                        // Load the partial view content for the selected tab
                        $.get(tabUrl)
                            .done(function (data) {
                                // Wrap the contentElement in a jQuery object
                                $(e.contentElement).html(data);

                                // Reinitialize Kendo widgets inside the tab content
                                kendo.init($(e.contentElement));

                                // Reinitialize the Kendo Grid specifically
                                var grid = $(e.contentElement).find("#LabourRebuiltPartGrid").data("kendoGrid");
                                if (grid) {
                                    console.log("Grid found and reinitialized.");
                                    grid.dataSource.read(); // Refresh the grid data source
                                } else {
                                    console.error("Grid not found or not initialized.");
                                }
                            })
                            .fail(function (xhr, status, error) {
                                console.error("Error loading tab content: ", error);
                                notification.show("An error occurred while loading the tab content. Please try again.", "error");
                            });
                    }
                }).data("kendoTabStrip");

                // Load the first tab's content
                $.get('@Url.Action("LabourDetailsPartial", "RebuiltParts")')
                    .done(function (data) {
                        // Wrap the contentElement in a jQuery object
                        $(tabStrip.contentElement(0)).html(data);

                        // Reinitialize Kendo widgets inside the tab content
                        kendo.init($(tabStrip.contentElement(0)));

                        // Reinitialize the Kendo Grid specifically
                        var grid = $(tabStrip.contentElement(0)).find("#LabourRebuiltPartGrid").data("kendoGrid");
                        if (grid) {
                            console.log("Grid found and reinitialized.");
                            grid.dataSource.read(); // Refresh the grid data source
                        } else {
                            console.error("Grid not found or not initialized.");
                        }
                    })
                    .fail(function (xhr, status, error) {
                        console.error("Error loading initial tab content: ", error);
                        notification.show("An error occurred while loading the initial tab content. Please try again.", "error");
                    });

                // Handle button click events
                container.on("click", "#save-button", function () {
                    // Call the Save action in the controller
                    $.post('@Url.Action("SaveDetails", "RebuiltParts")')
                        .done(function (data) {
                            notification.show("Changes saved successfully!", "success");
                        })
                        .fail(function (xhr, status, error) {
                            console.error("Error saving changes: ", error);
                            notification.show("An error occurred while saving changes. Please try again.", "error");
                        });
                });

                container.on("click", "#archive-button", function () {
                    // Call the Archive action in the controller
                    $.post('@Url.Action("ArchiveDetails", "RebuiltParts")')
                        .done(function (data) {
                            notification.show("Record archived successfully!", "success");
                        })
                        .fail(function (xhr, status, error) {
                            console.error("Error archiving record: ", error);
                            notification.show("An error occurred while archiving the record. Please try again.", "error");
                        });
                });

                container.on("click", "#cancel-button", function () {
                    // Call the Cancel action in the controller
                    $.post('@Url.Action("CancelDetails", "RebuiltParts")')
                        .done(function (data) {
                            notification.show("Changes discarded!", "info");
                        })
                        .fail(function (xhr, status, error) {
                            console.error("Error discarding changes: ", error);
                            notification.show("An error occurred while discarding changes. Please try again.", "error");
                        });
                });
            });
        });
    </script>

    <script id="template" type="text/x-kendo-template">
        <div id="detail-template-#=RebuiltStockNum#"></div>
    </script>

    <script>
        function dataBound() {
            this.expandRow(this.tbody.find("tr.k-master-row").first());
        }
    </script>

    <script>
        // Warn user if they try to navigate away with unsaved changes
        $(document).on("change", ".k-grid input, .k-grid select", function () {
            var grid = $(this).closest(".k-grid").data("kendoGrid");
            if (grid && grid.dataSource.hasChanges()) {
                window.onbeforeunload = function () {
                    return "You have unsaved changes. Are you sure you want to leave?";
                };
            } else {
                window.onbeforeunload = null;
            }
        });
    </script>
}
