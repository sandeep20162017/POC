SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0))AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B1 ) AND REBUILT_PART = 'N' AND LINK_TYPE = 'RB' UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED,NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(:B1 ) AND NSC_PARTS_USED.LINK_TYPE = 'RB' AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME
SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0)) AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B2 ) AND REBUILT_PART = 'N' AND LINK_TYPE =UPPER(:B1 ) UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED, NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(:B2 ) AND NSC_PARTS_USED.LINK_TYPE = UPPER(:B1 ) AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME
begin :V00001 := CES_UPDATE.AUDIT_INSERT_MODIFY_HISTORY(:V00002,:V00003,:V00004,:V00005,:V00006,:V00007,:V00008,:V00009,:V00010,:V00011,:V00012,:V00013,:V00014,:V00015,:V00016,:V00017,:V00018,:V00019,:V00020,:V00021,:V00022,:V00023,:V00024,:V00025,:V00026,:V00027,:V00028,:V00029,:V00030,:V00031,:V00032,:V00033,:V00034,:V00035,:V00036,:V00037,:V00038,:V00039,:V00040,:V00041,:V00042,:V00043,:V00044); end;
SELECT UPPER(SC_PARTS_USED.LINK_CODE) AS "link_code", UPPER(SC_PARTS_USED.LINK_TYPE) AS "link_type" FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.MMS_REBUILT_CODE = :B1 
begin CES_INQUIRY.RETRIEVE_EST_TO_PROPAGATE_RB(VI_IDNUM=>:V00001, VO_CURSOR=>:R000C000); end;
SELECT MAX(ID) FROM AUDIT_MODIFY_HISTORY
INSERT INTO AUDIT_MODIFY_HISTORY ( ID, USER_NAME, DATE_CHANGED, ACTION, ESTIMATE_NUMBER, ESTIMATE_TYPE, REF_1, REF_2, REF_3, REF_4, REF_5, REF_6, REF_7, REF_8, REF_9, REF_10, REF_11, REF_12, REF_13, REF_14, REF_15, REF_16, REF_17, REF_18, REF_19, REF_20, REF_21, REF_22, REF_23, REF_24, REF_25, REF_26, REF_27, REF_28, REF_29, REF_30, REF_31, REF_32, REF_33, REF_34, REF_35, REF_36, REF_37, REF_38 ) VALUES ( :B43 , :B42 , SYSDATE, :B41 , :B40 , :B39 , :B38 , :B37 , :B36 , :B35 , :B34 , :B33 , :B32 , :B31 , :B30 , :B29 , :B28 , :B27 , :B26 , :B25 , :B24 , :B23 , :B22 , :B21 , :B20 , :B19 , :B18 , :B17 , :B16 , :B15 , :B14 , :B13 , :B12 , :B11 , :B10 , :B9 , :B8 , :B7 , :B6 , :B5 , :B4 , :B3 , :B2 , :B1 )
INSERT INTO AUDIT_MODIFY_HISTORY ( ID, USER_NAME, DATE_CHANGED, ACTION, ESTIMATE_NUMBER, ESTIMATE_TYPE, REF_1, REF_2, REF_3, REF_4, REF_5, REF_6, REF_7, REF_8, REF_9, REF_10, REF_11, REF_12, REF_13, REF_14, REF_15, REF_16, REF_17, REF_18, REF_19, REF_20, REF_21, REF_22, REF_23, REF_24, REF_25, REF_26, REF_27, REF_28, REF_29, REF_30, REF_31, REF_32, REF_33, REF_34, REF_35, REF_36, REF_37, REF_38 ) VALUES ( :B43 , :B42 , SYSDATE, :B41 , :B40 , :B39 , :B38 , :B37 , :B36 , :B35 , :B34 , :B33 , :B32 , :B31 , :B30 , :B29 , :B28 , :B27 , :B26 , :B25 , :B24 , :B23 , :B22 , :B21 , :B20 , :B19 , :B18 , :B17 , :B16 , :B15 , :B14 , :B13 , :B12 , :B11 , :B10 , :B9 , :B8 , :B7 , :B6 , :B5 , :B4 , :B3 , :B2 , :B1 )
SELECT COUNT(*) FROM AUDIT_MODIFY_HISTORY
begin :V00001 := CES_UPDATE.AUDIT_INSERT_MODIFY_HISTORY(:V00002,:V00003,:V00004,:V00005,:V00006,:V00007,:V00008,:V00009,:V00010,:V00011,:V00012,:V00013,:V00014,:V00015,:V00016,:V00017,:V00018,:V00019,:V00020,:V00021,:V00022,:V00023,:V00024,:V00025,:V00026,:V00027,:V00028,:V00029,:V00030,:V00031,:V00032,:V00033,:V00034,:V00035,:V00036,:V00037,:V00038,:V00039,:V00040,:V00041,:V00042,:V00043,:V00044); end;
begin :V00001 := CES_UPDATE.UPDATE_LABOUR_TASKS(:V00002,:V00003,:V00004,:V00005,:V00006,:V00007,:V00008,:V00009,:V00010,:V00011,:V00012,:V00013,:V00014); end;
UPDATE EMPLOYEE_LABOUR SET LABOUR_DEFN = UPPER(NVL(:B12 , ' ')), LINK_NUMBER = UPPER(NVL(:B11 , ' ')), TYPEID = UPPER(NVL(:B10 , ' ')), COSTCENTRE = UPPER(NVL(:B9 , ' ')), EMPLOYEE_LABOUR.TASK = UPPER(NVL(:B8 , ' ')), LABOUR_TYPE = UPPER(NVL(:B7 , ' ')), USAGE = UPPER(NVL(:B6 , ' ')), HRS_REQD = NVL(:B5 , 0), ADJ_HRS = NVL(:B4 , 0), DATE_REVISED = SYSDATE, TIME_ADDITION = :B3 , LAST_MODIFIED_BY = :B2 WHERE ROWID = :B1 
SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0))AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B1 ) AND REBUILT_PART = 'N' AND LINK_TYPE = 'RB' UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED,NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(:B1 ) AND NSC_PARTS_USED.LINK_TYPE = 'RB' AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME
INSERT INTO TEMP_LABOUR_LIST VALUES (:B9 ,:B8 ,:B7 ,:B3 ,ROUND((HHMM_TO_MINUTES(:B5 ) * :B1 ),0),:B6 , (:B6 / 60) * ROUND(HHMM_TO_MINUTES(:B5 ) * :B1 ) * (:B3 /100) , ROUND((:B3 / 100) * HHMM_TO_MINUTES(:B5 ) * :B1 ) ,'RB',UPPER(:B4 ), ROUND((:B3 / 100) * ROUND(HHMM_TO_MINUTES(:B2 ) * :B1 )))
begin CES_INQUIRY.RETRIEVE_CES_SETTI(VI_PARAMETER=>:V00001, VO_CURSOR=>:R000C000); end;
SELECT RB_LIST_OF_BUSES.LIST_ID, LIST_OF_BUSES.DESCRIPTION FROM RB_LIST_OF_BUSES, LIST_OF_BUSES WHERE RB_LIST_OF_BUSES.REBUILT_STOCK_NUM = :B1 AND RB_LIST_OF_BUSES.LIST_ID = LIST_OF_BUSES.LIST_ID
SELECT CC AS "COST CENTRE", DECIMAL_MINUTES_TO_HHMM(SUM(EXTENDED_TIME)) AS "LABOUR HRS", SUM(TOTAL_COST) AS "TOTAL COST" FROM TEMP_LABOUR_LIST GROUP BY CC ORDER BY CC ASC
INSERT INTO TEMP_MATERIALS_LIST VALUES (:B7 ,:B6 ,ROUND(:B1 * :B4 ,2) ,:B5 * :B4 ,:B3 , :B2 * :B1 )
SELECT COST_CENTRE AS "CC", SUM(TOTAL_COST) AS "TOTAL COST", SUM(TAXABLE_COST)AS "TAXABLE COST" FROM TEMP_MATERIALS_LIST GROUP BY COST_CENTRE ORDER BY COST_CENTRE ASC
"BEGIN
  aw_trunc_proc(ora_dict_obj_type, ora_dict_obj_name, ora_dict_obj_owner);
END;"
INSERT INTO TEMP_LABOUR_LIST VALUES (:B8 ,:B7 ,:B6 ,:B2 ,HHMM_TO_MINUTES(:B4 ),:B5 , :B5 * HHMM_TO_MINUTES(:B4 ) * :B2 / 6000, ROUND((:B2 / 100) * HHMM_TO_MINUTES(:B4 )) ,'RB',UPPER(:B3 ), ROUND((:B2 / 100) * HHMM_TO_MINUTES(:B1 )))
SELECT EMPLOYEE_LABOUR.LABOUR_DEFN AS "LABOUR TYPE", EMPLOYEE_LABOUR.COSTCENTRE AS "CC", EMPLOYEE_LABOUR.TASK AS "TASK", REPLACE(EMPLOYEE_LABOUR.USAGE,',','.') AS "USAGE", EMPLOYEE_LABOUR.HRS_REQD AS "TIME", EMPLOYEE_SALARIES.RATE_PER_HOUR AS "RATE PER HOUR", EMPLOYEE_LABOUR.TIME_ADDITION AS "TIME ADDITION", HHMM_TO_DECIMAL(EMPLOYEE_LABOUR.ADJ_HRS) AS "WRENCH TIME" FROM EMPLOYEE_LABOUR, EMPLOYEE_SALARIES, EMPL_CLASS WHERE EMPLOYEE_LABOUR.LABOUR_DEFN = UPPER(EMPL_CLASS.LABOUR_DEFN) AND EMPLOYEE_SALARIES.WAGE_GROUP = EMPL_CLASS.WAGE_GROUP AND EMPLOYEE_LABOUR.LINK_NUMBER = :B1 AND EMPLOYEE_LABOUR.TYPEID = 'RB'
SELECT COUNT(*) FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = 'RB' AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER(:B1 )
begin CES_INQUIRY.RETRIEVE_RBP_TOTAL_COST2(VI_IDNUM=>:V00001, VI_TYPE=>:V00002, VO_CURSOR=>:R000C000); end;
INSERT INTO TEMP_MATERIALS_LIST VALUES (:B5 ,:B4 ,:B1 ,:B3 ,:B2 ,:B1 )
SELECT COUNT(*) FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = UPPER(:B2 ) AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER(:B1 )
SELECT DISTINCT UPPER(SC_PARTS_USED.LINK_CODE) AS "link_code", SC_PARTS_USED.QTY_REQD AS "QTY", SC_PARTS_USED.PERCENT_USAGE AS "%", SC_PARTS_USED.MMS_REBUILT_CODE AS "Rebuilt Code" FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = UPPER(:B2 ) AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER(:B1 )
begin CES_INQUIRY.RB_LIST_BUSES(VI_REBUILT_STOCK_NUM=>:V00001, VO_CURSOR=>:R000C000); end;
SELECT EMPLOYEE_LABOUR.LABOUR_DEFN AS "LABOUR TYPE", EMPLOYEE_LABOUR.COSTCENTRE AS "CC", EMPLOYEE_LABOUR.TASK AS "TASK", REPLACE(EMPLOYEE_LABOUR.USAGE,',','.') AS "USAGE", EMPLOYEE_LABOUR.HRS_REQD AS "TIME", EMPLOYEE_SALARIES.RATE_PER_HOUR AS "RATE PER HOUR", EMPLOYEE_LABOUR.TIME_ADDITION AS "TIME ADDITION", HHMM_TO_DECIMAL(EMPLOYEE_LABOUR.ADJ_HRS) AS "WRENCH TIME" FROM EMPLOYEE_LABOUR, EMPLOYEE_SALARIES, EMPL_CLASS WHERE EMPLOYEE_LABOUR.LABOUR_DEFN = UPPER(EMPL_CLASS.LABOUR_DEFN) AND EMPLOYEE_SALARIES.WAGE_GROUP = EMPL_CLASS.WAGE_GROUP AND EMPLOYEE_LABOUR.LINK_NUMBER = :B2 AND EMPLOYEE_LABOUR.TYPEID = :B1 
SELECT COUNT(*) FROM OEM_KITS_TOTAL2 WHERE OEM_KITS_TOTAL2.LINK = :B1 
SELECT CES_SETTINGS_ID, VALUE FROM CES_SETTINGS WHERE PARAMETER = :B1 
SELECT ROUND(SUM(NVL(TOTAL_COST,0)),2) AS RB_COST FROM TEMP_MATERIALS_LIST
SELECT DISTINCT UPPER(SC_PARTS_USED.LINK_CODE) AS "link_code", SC_PARTS_USED.QTY_REQD AS "QTY", SC_PARTS_USED.PERCENT_USAGE AS "%", SC_PARTS_USED.MMS_REBUILT_CODE AS "Rebuilt Code" FROM SC_PARTS_USED WHERE SC_PARTS_USED.REBUILT_PART = 'Y' AND SC_PARTS_USED.LINK_TYPE = :B2 AND UPPER(SC_PARTS_USED.LINK_CODE) = UPPER(:B1 )
SELECT ROUND(SUM(TOTAL_COST),2) AS LABOUR_COST FROM TEMP_LABOUR_LIST
SELECT NVL(C.NAME,'NONE') AS "ASSEMBLY AREA", NVL(A.COST_CENTRE, '0') AS "CC", NVL(SUM(A.COST), '0') AS "TOTAL COST", NVL(SUM(A.TAXCOST), '0')AS "TAXABLE COST" FROM (SELECT COST_CENTRE, (FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) - FINAL_COST(PERCENT_USAGE, QTY_REQD, CORECOST, 0)) AS COST, FINAL_COST(PERCENT_USAGE, QTY_REQD, MMS_COST, 0) AS TAXCOST FROM SC_PARTS_USED WHERE LINK_CODE = UPPER(:B2 ) AND REBUILT_PART = 'N' AND LINK_TYPE =UPPER(:B1 ) UNION ALL SELECT NSC_PARTS_USED.COST_CENTRE, (FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) - FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NSC_PARTS_USED.CORECOST, 0)) AS COST, FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0) AS TAXCOST FROM NSC_PARTS_USED NSC_PARTS_USED, NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = UPPER(:B2 ) AND NSC_PARTS_USED.LINK_TYPE = UPPER(:B1 ) AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID) A, COST_CENTRES C WHERE C.COST_CENTRE = A.COST_CENTRE GROUP BY A.COST_CENTRE, C.NAME
begin CES_INQUIRY.RETRIEVE_ALL_LABOUR(VI_IDNUM=>:V00001, VI_TYPE=>:V00002, VO_CURSOR=>:R000C000); end;
SELECT EMPLOYEE_LABOUR.LABOUR_DEFN AS "LABOUR TYPE", EMPLOYEE_LABOUR.COSTCENTRE AS "CC", EMPLOYEE_LABOUR.TASK AS "TASK", REPLACE(EMPLOYEE_LABOUR.USAGE,',','.') AS "USAGE", EMPLOYEE_LABOUR.HRS_REQD AS "TIME", EMPLOYEE_LABOUR.ADJ_HRS AS "WRENCH TIME", EMPLOYEE_LABOUR.DATE_REVISED AS "DATE REVISED", EMPLOYEE_LABOUR.TIME_ADDITION AS "TIME ADDITION", CES_SETTINGS.VALUE AS "VALUE", EMPLOYEE_LABOUR.ROWID FROM EMPLOYEE_LABOUR, (SELECT CES_SETTINGS.VALUE FROM CES_SETTINGS WHERE CES_SETTINGS.PARAMETER = 'NON_PRODUCTIVE_ADJUSTMENT') CES_SETTINGS WHERE EMPLOYEE_LABOUR.LINK_NUMBER = :B2 AND EMPLOYEE_LABOUR.TYPEID = :B1 ORDER BY EMPLOYEE_LABOUR.COSTCENTRE
begin CES_INQUIRY.RETRIEVE_MB_LABOUR(VI_IDNUM=>:V00001, VI_TYPE=>:V00002, VO_CURSOR=>:R000C000); end;
begin CES_INQUIRY.RETRIEVE_SC_ORIG_SUPPLIER_NUM(VI_OSN=>:V00001, VO_CURSOR=>:R000C000); end;
begin CES_INQUIRY.RETRIEVE_SCP_USED(VI_LINK_CODE=>:V00001, VI_REBUILT_PART_CHOICE=>:V00002, VI_LINK_TYPE=>:V00003, VO_CURSOR=>:R000C000); end;
SELECT UPPER(SC_PARTS_USED.MMS_STOCK_CODE) AS "STOCK CODE", NVL(SC_PARTS_USED.MMS_COST,0) AS "UNIT COST", UPPER(SC_PARTS_USED.QTY_REQD) AS "QTY", REPLACE(SC_PARTS_USED.PERCENT_USAGE,',','.') AS "%", REPLACE(FINAL_COST(SC_PARTS_USED.PERCENT_USAGE, SC_PARTS_USED.QTY_REQD,SC_PARTS_USED.CORECOST,0),',','.') AS "CORE COST", REPLACE(FINAL_COST(SC_PARTS_USED.PERCENT_USAGE, SC_PARTS_USED.QTY_REQD, SC_PARTS_USED.MMS_COST, 0),',','.') AS "TOTAL COST", UPPER(SC_PARTS_USED.COST_CENTRE) AS "CC", NVL(UPPER(STOCK_CODED_PARTS.DETAILED_DESC),'') AS "DESCRIPTION", NVL(UPPER(STOCK_CODED_PARTS.PART_TYPE),'') AS "KEYWORD", SC_PARTS_USED.OEM_COST AS "OEM COST", SC_PARTS_USED.MMS_REBUILT_CODE AS "MMS REBUILT CODE", SC_PARTS_USED.REB_PART_COST AS "REBUILT PART COST", UPPER(SC_PARTS_USED.REBUILT_PART) AS "REBUILT PART", SC_PARTS_USED.ROWID FROM SC_PARTS_USED, STOCK_CODED_PARTS WHERE SC_PARTS_USED.LINK_CODE = :B3 AND SC_PARTS_USED.REBUILT_PART = :B2 AND SC_PARTS_USED.LINK_TYPE = :B1 AND STOCK_CODED_PARTS.MMS_STOCK_CODE (+)= SC_PARTS_USED.MMS_STOCK_CODE ORDER BY SC_PARTS_USED.MMS_STOCK_CODE
begin CES_INQUIRY.RETRIEVE_SC_ORIG_SUPPLIER_NUM(VI_OSN=>:V00001, VO_CURSOR=>:R000C000); end;
SELECT UPPER(MMS_STOCK_CODE) AS MMS_STOCK_CODE, REPLACE(UPPER(MMS_NEW_COST), ',','.') AS MMS_NEW_COST FROM STOCK_CODED_PARTS WHERE RTRIM(ORIG_SUPPLIER_NUM) = RTRIM(:B1 )
begin CES_INQUIRY.RETRIEVE_SC_ORIG_SUPPLIER_NUM(VI_OSN=>:V00001, VO_CURSOR=>:R000C000); end;
SELECT UPPER(NON_STOCK_CODED_PARTS.ORIG_SUPPLIER_NUM) AS "SUPPLIER NUMBER", UPPER(NON_STOCK_CODED_PARTS.ORIG_SUPPLIER_NAME) AS "SUPPLIER NAME", NON_STOCK_CODED_PARTS.OEM_PART_COST AS "UNIT COST", UPPER(NSC_PARTS_USED.QTY_REQD) AS "QTY", REPLACE(NSC_PARTS_USED.PERCENT_USAGE,',','.') AS "%", REPLACE(FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD,NSC_PARTS_USED.CORECOST,0),',','.') AS "CORE COST", REPLACE(FINAL_COST(NSC_PARTS_USED.PERCENT_USAGE, NSC_PARTS_USED.QTY_REQD, NON_STOCK_CODED_PARTS.OEM_PART_COST, 0),',','.') AS "TOTAL COST", UPPER(NSC_PARTS_USED.COST_CENTRE) AS "CC", NVL(UPPER(NON_STOCK_CODED_PARTS.DETAILED_DESC),'') AS "DESCRIPTION", NVL(UPPER(NON_STOCK_CODED_PARTS.KEYWORD), '' ) AS "KEYWORD", UPPER(NSC_PARTS_USED.ID) AS "ID", UPPER(NSC_PARTS_USED.LAST_MODIFIED_DATE) AS "LAST MODIFIED DATE", NSC_PARTS_USED.ROWID FROM NSC_PARTS_USED NSC_PARTS_USED, NON_STOCK_CODED_PARTS NON_STOCK_CODED_PARTS WHERE NSC_PARTS_USED.LINK_CODE = :B2 AND NSC_PARTS_USED.LINK_TYPE = :B1 AND NON_STOCK_CODED_PARTS.ID (+)= NSC_PARTS_USED.ID ORDER BY NON_STOCK_CODED_PARTS.ORIG_SUPPLIER_NUM
SELECT UPPER(REBUILT_STOCK_NUM) AS "rebuilt_stock_num", MMS_STOCK_CODE, KEYWORD, DETAILED_DESC, NVL(SOP_NUMBER,' ') AS "sop_number", NVL(JOB_NUMBER,' ') AS "job_number", CORE_PART_NUM, CORE_CHARGE, ESTIMATED_COST, DATE_MODIFIED, ACTIVE, ROWID FROM RB_MASTERLIST
begin CES_INQUIRY.RETRIEVE_RB(VO_CURSOR=>:R000C000); end;
begin CES_INQUIRY.RETRIEVE_NSCP_USED(VI_IDNUM=>:V00001, VI_LINK_TYPE=>:V00002, VO_CURSOR=>:R000C000); end;
BEGIN SYS.DBMS_DESCRIBE.DESCRIBE_PROCEDURE(:object_name,:res1,:res2,:overload,:position,:level,:argument,:datatype,:default,:in_out,:length,:precision,:scale,:radix,:spare); END;
SELECT VALUE FROM NLS_DATABASE_PARAMETERS WHERE PARAMETER = 'NLS_NCHAR_CHARACTERSET' 
SELECT ARGUMENT, OVERLOAD#, POSITION# POSITION, TYPE# TYPE, NVL(CHARSETID,0) CHARSETID, NVL(CHARSETFORM,0) CHARSETFORM, NVL(DEFAULT#,0) DEFAULT#, NVL(IN_OUT,0) IN_OUT, NVL(LEVEL#,0) LEVEL#, NVL(LENGTH,0) LENGTH, NVL(PRECISION#,0) PRECISION, DECODE(TYPE#,1,0,96,0,NVL(SCALE,0)) SCALE, NVL(RADIX,0) RADIX, DECODE(TYPE#,1,NVL(SCALE,0),96,NVL(SCALE,0),0) CHARLENGTH FROM ARGUMENT$ WHERE OBJ# = :B2 AND PROCEDURE$ = :B1 ORDER BY OBJ#,PROCEDURE$,OVERLOAD#,SEQUENCE#
begin CES_INQUIRY.RETRIEVE_MB_ALL_LABOUR(VO_CURSOR=>:R000C000, VI_ROWID=>:V00001); end;
SELECT UPPER(COST_CENTRE) AS COST_CENTRE FROM COST_CENTRES ORDER BY COST_CENTRE
begin CES_INQUIRY.RETRIEVE_LABOUR_POSITION(VO_CURSOR=>:R000C000); end;
SELECT TASK_ID, UPPER(TASK_DESCRIPTION) AS "TASK DESCRIPTION" FROM LABOUR_TASK_DESCRIPTIONS ORDER BY TASK_DESCRIPTION ASC
begin CES_INQUIRY.RETRIEVE_COST_CENTRES(VO_CURSOR=>:R000C000); end;
SELECT UPPER(LABOUR_DEFN) AS LABOUR_DEFN FROM EMPL_CLASS ORDER BY LABOUR_DEFN
SELECT STATUS FROM OBJ$ WHERE OBJ#=:B1 
SELECT UPPER(HRS_REQD) AS HRS_REQD, UPPER(USAGE) AS USAGE, UPPER(TASK) AS TASK, UPPER(COSTCENTRE) AS COSTCENTRE, UPPER(LABOUR_DEFN) AS LABOUR_DEFN, ROWID FROM EMPLOYEE_LABOUR WHERE ROWID = :B1 ORDER BY COSTCENTRE
begin CES_INQUIRY.RETRIEVE_TASK_DESCRIPTION(VO_CURSOR=>:R000C000); end;
