For the following code, LabourDetailsPartial, partial view is rendered.
But  Whn I click on CCDetauls and parts details tab, controller did get called but grid is not rendered.
Ideally it should render the same grid for all the tabs. Example when CCDetails or MaterailDetails Tabs are clicked I only see <h6>Labour Details Rebuilt Parts</h6>.
LabourRebuiltPartGrid is not rendered. 
But for LabourDetails LabourRebuiltPartGrid is rendered. No Javascript errors
This is for testing purpose only.

public IActionResult LabourDetailsPartial()
{
    var model = new List<LabourDetailsRebuiltPartsViewModel> { };
    
       
        return PartialView("_LabourDetailsRebuiltParts", model);
}

public IActionResult CCDetailsPartial()
{
    var model = new List<LabourDetailsRebuiltPartsViewModel> { };

    return PartialView("_LabourDetailsRebuiltParts", model);
    //return PartialView("_CCDeatilsPartialRebuiltParts", model);
}

public IActionResult MaterialDetailsPartial()
{
    var model = new List<LabourDetailsRebuiltPartsViewModel> { };
    return PartialView("_LabourDetailsRebuiltParts", model);

   // return PartialView("_MaterialDeatilsPartial", model);
}
_LabourDetailsRebuiltParts.cshtml :
@model IEnumerable<CES.Models.Parts.LabourDetailsRebuiltPartsViewModel>

@{
    ViewData["Title"] = "Labour Details Rebuilt Parts";
}

<h6>Labour Details Rebuilt Parts</h6>

@(Html.Kendo().Grid<CES.Models.Parts.LabourDetailsRebuiltPartsViewModel>()
    .Name("LabourRebuiltPartGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.LabourType).Title("Labour Type");
        columns.Bound(c => c.CC).Title("CC");
        columns.Bound(c => c.Task).Title("Task");
        columns.Bound(c => c.Usage).Title("Usage");
        columns.Bound(c => c.Time).Title("Time").Format("{0:N2}");
        columns.Bound(c => c.WrenchTime).Title("Wrench Time").Format("{0:N2}");
        columns.Bound(c => c.DateRevised).Title("Date Revised");
        columns.Command(command => command.Edit()).Title("Actions");
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            model.Id(c => c.LabourType); // Assuming LabourType is a unique identifier
            model.Field(c => c.LabourType);
        })
        

        .Read(read => read.Url(Url.Action("GetLabourDetails", "LabourDetails")).Type(HttpVerbs.Get))
        .Create(create => create.Url(Url.Action("CreateLabourDetail", "LabourDetails")).Type(HttpVerbs.Post))
        .Update(update => update.Url(Url.Action("UpdateLabourDetail", "LabourDetails")).Type(HttpVerbs.Post))
        .Destroy(delete => delete.Url(Url.Action("DeleteLabourDetail", "LabourDetails")).Type(HttpVerbs.Post))
    )
)
