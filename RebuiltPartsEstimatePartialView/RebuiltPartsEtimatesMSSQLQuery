USE [CES]
GO

DECLARE @RebuiltPartNumber VARCHAR(30) = '035434'; -- Input RebuiltPartNumber

-- Declare variables for LinkCode and LinkType
DECLARE @LinkCode VARCHAR(30);
DECLARE @LinkType VARCHAR(5);

PRINT @LinkCode
PRINT @LinkType
-- Retrieve LinkCode and LinkType
PRINT 'Retrieving LinkCode and LinkType...';
SELECT DISTINCT 
    @LinkCode = LinkCode,
    @LinkType = LinkType
FROM 
    [SBCES].[ScPartsUsed]
WHERE 
    LinkCode = @RebuiltPartNumber;

-- If not found in ScPartsUsed, check NScPartsUsed
IF @LinkCode IS NULL
BEGIN
    SELECT DISTINCT 
        @LinkCode = LinkCode,
        @LinkType = LinkType
    FROM 
        [SBCES].[NScPartsUsed]
    WHERE 
        LinkCode = @RebuiltPartNumber;
END

PRINT 'LinkCode: ' + ISNULL(@LinkCode, 'Not Found');
PRINT 'LinkType: ' + ISNULL(@LinkType, 'Not Found');

-- Check if LinkCode and LinkType were found
IF @LinkCode IS NULL OR @LinkType IS NULL
BEGIN
    PRINT 'Error: LinkCode or LinkType not found for RebuiltPartNumber: ' + @RebuiltPartNumber;
    RETURN;
END

-- Section 1: Labour Details
PRINT 'Fetching Labour Details...';
SELECT 
    EL.LabourDefn AS [LABOUR TYPE],
    EL.CostCentre AS [CC],
    EL.Task AS [TASK],
    REPLACE(EL.Usage, ',', '.') AS [USAGE],
    EL.HrsReqd AS [TIME],
    ES.RatePerHour AS [RATE PER HOUR],
    EL.TimeAddition AS [TIME ADDITION]
FROM 
    SBCES.EmployeeLabour EL
    JOIN SBCES.EmplClass EC ON EL.LabourDefn = UPPER(EC.LabourDefn)
    JOIN SBCES.EmployeeSalaries ES ON EC.WageGroup = ES.WageGroup
WHERE 
    EL.LinkNumber = @LinkCode
    AND EL.TypeId = @LinkType;

PRINT 'Labour Details fetched successfully.';

-- Section 2: Labour Hour Summary
PRINT 'Fetching Labour Hour Summary...';
PRINT 'Fetching Labour Hour Summary...';
PRINT 'Fetching Labour Hour Summary...';
PRINT 'Fetching Labour Hour Summary...';
SELECT 
    CostCentre,
    -- Sum of HrsReqd (converted to minutes) and then to HH:MM format
    SBCES.DecimalMinutesToHhmm(
        SUM(
            CASE 
                -- Handle decimal values (e.g., "2.00", "4.00")
                WHEN CHARINDEX(':', HrsReqd) = 0 THEN 
                    TRY_CAST(HrsReqd AS DECIMAL(10, 2)) * 60 -- Convert hours to minutes

                -- Handle HH:MM format (e.g., "10:35")
                ELSE 
                    TRY_CAST(LEFT(HrsReqd, CHARINDEX(':', HrsReqd) - 1) AS INT) * 60 + -- Hours to minutes
                    TRY_CAST(SUBSTRING(HrsReqd, CHARINDEX(':', HrsReqd) + 1, LEN(HrsReqd)) AS INT) -- Add minutes
            END
        )
    ) AS TotalHrsReqdInHhmm
FROM 
    SBCES.EmployeeLabour
WHERE 
    LinkNumber = @LinkCode
    AND TypeId = @LinkType
GROUP BY 
    CostCentre;
PRINT 'Labour Hour Summary fetched successfully.';

-- Section 3: Material Cost Summary
PRINT 'Fetching Material Cost Summary...';
SELECT 
    ISNULL(C.Name, 'NONE') AS AssemblyArea,
    ISNULL(A.CostCentre, '0') AS CostCentre,
    SUM(CAST(A.Cost AS DECIMAL(18, 2))) AS TotalCost,
    SUM(CAST(A.TaxCost AS DECIMAL(18, 2))) AS TaxableCost
FROM (
    -- Stock-coded parts
   SELECT CostCentre, 
          (CAST(SBCES.FinalCost(PercentUsage, QtyReqd, MmsCost, 0) AS DECIMAL (18,2)) - CAST(SBCES.FinalCost(PercentUsage, QtyReqd, Corecost, 0) AS DECIMAL(18,2)))  AS Cost, 
           CAST(SBCES.FinalCost(PercentUsage, QtyReqd, MmsCost, 0) AS DECIMAL(18, 2)) AS Taxcost 
    FROM SBCES.ScPartsUsed 
    WHERE 
        LinkCode = @LinkCode
        AND RebuiltPart = 'N'
        AND LinkType = @LinkType

    UNION ALL

    -- Non-stock-coded parts
	SELECT NSCPartsUsed.CostCentre, 
          (CAST(SBCES.FinalCost(NSCPartsUsed.PercentUsage, NSCPartsUsed.QtyReqd, NSCPartsUsed.Cost, 0) AS DECIMAL (18,2)) - CAST(SBCES.FinalCost(NSCPartsUsed.PercentUsage, NSCPartsUsed.QtyReqd, NSCPartsUsed.Corecost, 0) AS DECIMAL(18,2)))  AS Cost, 
           CAST(SBCES.FinalCost(NSCPartsUsed.PercentUsage, NSCPartsUsed.QtyReqd, NSCPartsUsed.Cost, 0) AS DECIMAL(18, 2)) AS Taxcost 
    FROM SBCES.NSCPartsUsed 
    
        JOIN SBCES.NonStockCodedParts ON NSCPartsUsed.Id = NonStockCodedParts.Id
    WHERE 
        NSCPartsUsed.LinkCode = @LinkCode
        AND NSCPartsUsed.LinkType = @LinkType
) A
JOIN SBCES.CostCentres C ON A.CostCentre = C.CostCentre
GROUP BY 
    A.CostCentre, C.Name;

PRINT 'Material Cost Summary fetched successfully.';
----------------------------------------------------------------------------------
INSERT INTO SBCES.TempLabourList (
    LabourType,
    CC,
    Task,
    Usage,
    Time,
    RatePerHour,
    TotalCost,
    ExtendedTime,
    EstimateType,
    EstimateNumber,
    WrenchTime
)

SELECT 
    EL.LabourDefn AS LabourType,
    EL.CostCentre AS CC,
    EL.Task,
    CAST(REPLACE(EL.Usage, ',', '.') AS DECIMAL(18,2)) AS Usage,
   -- CAST(EL.HrsReqd AS DECIMAL(18,2)) AS Time,
	(CASE 
                -- Handle decimal values (e.g., "2.00", "4.00")
                WHEN CHARINDEX(':', EL.HrsReqd) = 0 THEN 
                    TRY_CAST(EL.HrsReqd AS DECIMAL(10, 2))  -- Convert hours to minutes

                -- Handle HH:MM format (e.g., "10:35")
                ELSE 
                    TRY_CAST(LEFT(EL.HrsReqd, CHARINDEX(':', EL.HrsReqd) - 1) AS INT) + -- Hours to minutes
                    TRY_CAST(SUBSTRING(EL.HrsReqd, CHARINDEX(':', EL.HrsReqd) + 1, LEN(EL.HrsReqd)) AS INT) -- Add minutes
            END) AS TIME,
    CAST(ES.RatePerHour AS DECIMAL(18,2)) AS RatePerHour,
	(REPLACE(EL.Usage, ',', '.'))  AS TotalCost,
    CAST(ES.RatePerHour *
	(CASE 
                -- Handle decimal values (e.g., "2.00", "4.00")
                WHEN CHARINDEX(':', EL.HrsReqd) = 0 THEN 
                    TRY_CAST(EL.HrsReqd AS DECIMAL(10, 2))  -- Convert hours to minutes

                -- Handle HH:MM format (e.g., "10:35")
                ELSE 
                    TRY_CAST(LEFT(EL.HrsReqd, CHARINDEX(':', EL.HrsReqd) - 1) AS INT)  + -- Hours to minutes
                    TRY_CAST(SUBSTRING(EL.HrsReqd, CHARINDEX(':', EL.HrsReqd) + 1, LEN(EL.HrsReqd))/100 AS INT) -- Add minutes
            END) *
	----* CAST(SBCES.DecimalMinutesToHhmm(EL.HrsReqd) AS DECIMAL(10, 2)) * 
	--CAST(REPLACE(EL.Usage, ',', '.') AS DECIMAL(10, 2)) / 100 AS DECIMAL(18,2)) AS TotalCost,
    --SBCES.DecimalMinutesToHhmm(EL.AdjHrs) AS ExtendedTime,
	--------
	(CASE 
                -- Handle decimal values (e.g., "2.00", "4.00")
                WHEN CHARINDEX(':', EL.AdjHrs) = 0 THEN 
                    TRY_CAST(HrsReqd AS DECIMAL(10, 2))  -- Convert hours to minutes

                -- Handle HH:MM format (e.g., "10:35")
                ELSE 
                    TRY_CAST(LEFT(EL.AdjHrs, CHARINDEX(':', EL.AdjHrs) - 1) AS INT)  + -- Hours to minutes
                    TRY_CAST(SUBSTRING(EL.AdjHrs, CHARINDEX(':', EL.AdjHrs) + 1, LEN(EL.AdjHrs)) AS INT) -- Add minutes
            END)/100 AS DECIMAL (18,2)) AS ExtendedTime,
	-----
    EL.TypeId AS EstimateType,
    EL.LinkNumber AS EstimateNumber,
    EL.AdjHrs AS WrenchTime
FROM 
    SBCES.EmployeeLabour EL
    JOIN SBCES.EmplClass EC ON EL.LabourDefn = UPPER(EC.LabourDefn)
    JOIN SBCES.EmployeeSalaries ES ON EC.WageGroup = ES.WageGroup
	where EL.LinkNumber = @LinkCode

----------------------------------------------------------------------------------
-- Section 4: Total Costs Summary
PRINT 'Fetching Total Costs Summary...';

-- Core cost excl Tax
DECLARE @CoreCostExclTax DECIMAL(18, 2);
SELECT @CoreCostExclTax = SUM(CoreCost)
FROM SBCES.ScPartsUsed
WHERE LinkCode = @LinkCode AND LinkType = @LinkType;

-- Material cost
DECLARE @MaterialCost DECIMAL(18, 2);
SELECT @MaterialCost = SUM(CAST(TotalCost AS DECIMAL(18,2)))
FROM SBCES.TempMaterialsList 
WHERE [RbReference] = @LinkCode;

-- Labour cost
DECLARE @LabourCost DECIMAL(18, 2);
SELECT @LabourCost = SUM(CAST(TotalCost AS DECIMAL(18,2)))
FROM SBCES.TempLabourList
WHERE EstimateNumber = @LinkCode;

-- Labour overhead total
DECLARE @LabourOverheadTotal DECIMAL(18, 2);
SELECT @LabourOverheadTotal = SUM(CAST(TotalCost AS DECIMAL(18,2)) * CAST(101 AS DECIMAL(18,2))) --ToDo OverHeadCost
FROM SBCES.TempLabourList
WHERE EstimateNumber = @LinkCode;

-- Labour Total
DECLARE @LabourTotal DECIMAL(18, 2);
SET @LabourTotal = @LabourCost + @LabourOverheadTotal;

-- Total rebuilt cost
DECLARE @TotalRebuiltCost DECIMAL(18, 2);
SELECT @TotalRebuiltCost = SUM(EstimatedCost)
FROM SBCES.RbMasterlist
WHERE RebuiltStockNum = @RebuiltPartNumber;

-- Tax Total
DECLARE @TaxTotal DECIMAL(18, 2);
SELECT @TaxTotal = SUM( CAST (TaxableCost AS DECIMAL(18,2)))
FROM SBCES.TempMaterialsList
WHERE RbReference = @LinkCode;

-- Total cost with tax
DECLARE @TotalCostWithTax DECIMAL(18, 2);
SET @TotalCostWithTax = @MaterialCost + @LabourTotal + @TaxTotal;

-- Output the results
SELECT 
    @CoreCostExclTax AS [Core cost excl Tax],
    @MaterialCost AS [Material cost],
    @LabourCost AS [Labour cost],
    @LabourOverheadTotal AS [Labour overhead total],
    @LabourTotal AS [Labour Total],
    @TotalRebuiltCost AS [Total rebuilt cost],
    @TaxTotal AS [Tax Total],
    @TotalCostWithTax AS [Total cost with tax];

PRINT 'Total Costs Summary fetched successfully.';

-- Truncate temporary tables after use
PRINT 'Truncating temporary tables...';
--TRUNCATE TABLE SBCES.TempLabourList;
--TRUNCATE TABLE SBCES.TempMaterialsList;

PRINT 'Temporary tables truncated successfully.';


---
