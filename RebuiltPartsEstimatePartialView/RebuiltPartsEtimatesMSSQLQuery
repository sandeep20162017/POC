USE [CES];
GO

-- Start a transaction
BEGIN TRANSACTION;

BEGIN TRY
    -- Validate that all LabourType values in [CES].[EMPLOYEE_LABOUR] exist in [SBCES].[EmplClass]
    IF NOT EXISTS (
        SELECT 1
        FROM [CES].[EMPLOYEE_LABOUR] AS EL
        LEFT JOIN [SBCES].[EmplClass] AS EC ON CAST(EL.[LABOUR_TYPE] AS INT) = EC.[LabourType]
        WHERE EC.[LabourType] IS NULL
    )
    BEGIN
        -- Insert data from [CES].[EMPLOYEE_LABOUR] to [SBCES].[EmployeeLabour]
        INSERT INTO [SBCES].[EmployeeLabour] (
            [LabourDefn],
            [DateEntered],
            [LinkNumber],
            [TypeId],
            [CostCentre],
            [Task],
            [LabourType],
            [Usage],
            [HrsReqd],
            [AdjHrs],
            [DateRevised],
            [TimeAddition],
            [RebuiltPartNum],
            [LastModifiedBy]
        )
        SELECT
            CAST([LABOUR_DEFN] AS VARCHAR(50)) AS [LabourDefn], -- Convert NVARCHAR to VARCHAR
            [DATE_ENTERED],
            CAST([LINK_NUMBER] AS VARCHAR(25)) AS [LinkNumber], -- Convert NVARCHAR to VARCHAR
            CAST([TYPEID] AS VARCHAR(5)) AS [TypeId],           -- Convert NVARCHAR to VARCHAR
            CAST([COSTCENTRE] AS VARCHAR(5)) AS [CostCentre],   -- Convert NVARCHAR to VARCHAR
            CAST([TASK] AS VARCHAR(50)) AS [Task],              -- Convert NVARCHAR to VARCHAR
            CAST([LABOUR_TYPE] AS INT) AS [LabourType],         -- Convert NVARCHAR to INT
            CAST([USAGE] AS VARCHAR(25)) AS [Usage],            -- Convert NVARCHAR to VARCHAR
            CAST([HRS_REQD] AS VARCHAR(25)) AS [HrsReqd],       -- Convert NVARCHAR to VARCHAR
            CAST([ADJ_HRS] AS VARCHAR(25)) AS [AdjHrs],         -- Convert NVARCHAR to VARCHAR
            [DATE_REVISED],
            [TIME_ADDITION],
            CAST([REBUILT_PART_NUM] AS VARCHAR(30)) AS [RebuiltPartNum], -- Convert NVARCHAR to VARCHAR
            CAST([LAST_MODIFIED_BY] AS VARCHAR(25)) AS [LastModifiedBy]   -- Convert NVARCHAR to VARCHAR
        FROM [CES].[EMPLOYEE_LABOUR];

        -- Commit the transaction if everything is successful
        COMMIT TRANSACTION;
        PRINT 'Data migration completed successfully.';
    END
    ELSE
    BEGIN
        -- Log invalid LabourType values
        SELECT 
            EL.[ID],
            EL.[LABOUR_TYPE] AS [InvalidLabourType]
        FROM [CES].[EMPLOYEE_LABOUR] AS EL
        LEFT JOIN [SBCES].[EmplClass] AS EC ON CAST(EL.[LABOUR_TYPE] AS INT) = EC.[LabourType]
        WHERE EC.[LabourType] IS NULL;

        -- Rollback the transaction
        ROLLBACK TRANSACTION;
        PRINT 'Data migration failed due to invalid LabourType values. Check the log for details.';
    END
END TRY
BEGIN CATCH
    -- Rollback the transaction if an error occurs
    ROLLBACK TRANSACTION;
    PRINT 'Error occurred during data migration: ' + ERROR_MESSAGE();
END CATCH;
GO
