Pls use your above suggetion and give me full file based on the comments in the below code.
  Pls give me css as well

   @(Html.Kendo().Grid<RebuiltPartsViewModel>()
     .Name("RebuiltPartsGrid")
     .Columns(columns =>
     {
       //keep this column as is
         columns.Bound(c => c.RebuiltStockNum).Title("Rebuilt Stock Code")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .EditorTemplateName("ComboBoxEditor")
             .Width(130).Hidden(false).Lockable(false);
       //add grouping for the following 3 columns (MmsStockCodem, Keyword, Description) name group as "MMSStock Info"
         columns.Bound(c => c.MmsStockCode).Title("MMS Stock Code")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .EditorTemplateName("ComboBoxEditor")
             .Width(130);

         columns.Bound(c => c.KeyWord).Title("Keyword")
             .ClientTemplate("#: truncateText(data.KeyWord) #")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .EditorTemplateName("ComboBoxEditor")
             .Width(120).Hidden(false).MinScreenWidth(768);

         columns.Bound(c => c.DetailedDesc).Title("Description")
             .ClientTemplate("#: truncateText(data.DetailedDesc) #")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .EditorTemplateName("ComboBoxEditor")
             .Width(250).Hidden(false).MinScreenWidth(768);

         
        //keep this column same
         columns.Bound(c => c.JobNumber).Title("Job Number")
             .ClientTemplate("#: truncateText(data.JobNumber) #")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .Width(100).Hidden(false).MinScreenWidth(768);
 
        //add grouping for the following 2 columns (CorePartNum, CoreCharge) name group as "Core Part Info"
         columns.Bound(c => c.CorePartNum).Title("Core Code")
             .ClientTemplate("#: truncateText(data.CorePartNum) #")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
             .Width(100).Hidden(false).MinScreenWidth(768);
          

         columns.Bound(c => c.CoreCharge).Title("Core Cost")
             .ClientTemplate("#: truncateText(data.CoreCharge) #")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("gte")))
             .Format("{0:C}").EditorTemplateName("Currency")
             .Width(80).Hidden(false).MinScreenWidth(768);

         
        //keep this column as is
         columns.Bound(c => c.BuyNewCost).Title("Buy New Cost")                                
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("gte")))
             .Format("{0:C}").EditorTemplateName("Currency")
             .Width(80).Hidden(false).MinScreenWidth(768);
        //keep this column as is
         columns.Bound(c => c.RemanCost).Title("Remanufactured Cost")
             .Filterable(ftb => ftb.Cell(cell => cell.Operator("gte")))
             .EditorTemplateName("Currency")
             .ClientTemplate("#:kendo.toString(RemanCost, 'c2')#")
             .Width(80);
        //Group following two columns (CostSavingPerUnitDummy, PercentageSavingPerUnitDummy) call it "Variance info"
         columns.Bound(p => p.CostSavingPerUnitDummy)
             .Title("Cost Saving Per Unit")
             .ClientTemplate("#= calculateCostSaving(BuyNewCost, RemanCost) #")
             .Width(70);

         columns.Bound(p => p.PercentageSavingPerUnitDummy)
             .Title("Percentage Saving Per Unit")
             .ClientTemplate("#= calculatePercentageSaving(data) #")
             .Width(50);
        //keep this column
         columns.Bound(u => u.BusId).Title("Vehicle Series") 
             // .ClientTemplate("# if (typeof Buses != 'undefined'  && Buses && Buses.length > 0) { # #= Buses.map(bus => bus.BusName).join(', ') # # } else { # Select Vehicle # } #")
             .ClientTemplate("# if (typeof Buses != 'undefined' && Buses && Buses.length) { # #= Buses.map(bus => truncateWords(bus.BusName, 10)).join(', ') # # } else { # Select Vehicle # } #")
             .EditorTemplateName("VehicleSeriesEditor")
             .Width(130);
