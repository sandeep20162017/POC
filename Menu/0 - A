<h4>Rebuilt Parts</h4>

@(Html.Kendo().TabStrip()
    .Name("rebuildPartsTabStrip")
    .Animation(animation => animation.Open(effect => effect.Fade(FadeDirection.In)))
    .Items(tabstrip =>
    {
        tabstrip.Add().Text("Rebuilt Parts")
            .Selected(true)
            .Content(@<text>
                @try
                {
                    @(Html.Kendo().Grid<RebuiltPartsViewModel>()
                        .Name("RebuiltPartsGrid")
                        .Columns(columns =>
                        {
                            // Group 1: "Stock Info"
                            columns.Group(group => group.Title("Stock Info").Columns(subColumns =>
                            {
                                subColumns.Bound(c => c.RebuiltStockNum).Title("Rebuilt Stock Code")
                                    .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
                                    .EditorTemplateName("ComboBoxEditor")
                                    .Width(130).Hidden(false).Lockable(false);

                                subColumns.Bound(c => c.MmsStockCode).Title("MMS Stock Code")
                                    .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
                                    .EditorTemplateName("ComboBoxEditor")
                                    .Width(130);
                            }));

                            // Group 2: "Part Details"
                            columns.Group(group => group.Title("Part Details").Columns(subColumns =>
                            {
                                subColumns.Bound(c => c.KeyWord).Title("Keyword")
                                    .ClientTemplate("#: truncateText(data.KeyWord) #")
                                    .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
                                    .EditorTemplateName("ComboBoxEditor")
                                    .Width(120).Hidden(false).MinScreenWidth(768);

                                subColumns.Bound(c => c.DetailedDesc).Title("Description")
                                    .ClientTemplate("#: truncateText(data.DetailedDesc) #")
                                    .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
                                    .EditorTemplateName("ComboBoxEditor")
                                    .Width(250).Hidden(false).MinScreenWidth(768);
                            }));

                            // Standalone column
                            columns.Bound(c => c.JobNumber).Title("Job Number")
                                .ClientTemplate("#: truncateText(data.JobNumber) #")
                                .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
                                .Width(100).Hidden(false).MinScreenWidth(768);

                            // Group 3: "Core Part Info"
                            columns.Group(group => group.Title("Core Part Info").Columns(subColumns =>
                            {
                                subColumns.Bound(c => c.CorePartNum).Title("Core Code")
                                    .ClientTemplate("#: truncateText(data.CorePartNum) #")
                                    .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)))
                                    .Width(100).Hidden(false).MinScreenWidth(768);

                                subColumns.Bound(c => c.CoreCharge).Title("Core Cost")
                                    .ClientTemplate("#: truncateText(data.CoreCharge) #")
                                    .Filterable(ftb => ftb.Cell(cell => cell.Operator("gte")))
                                    .Format("{0:C}").EditorTemplateName("Currency")
                                    .Width(80).Hidden(false).MinScreenWidth(768);
                            }));

                            // Group 4: "Cost Info"
                            columns.Group(group => group.Title("Cost Info").Columns(subColumns =>
                            {
                                subColumns.Bound(c => c.BuyNewCost).Title("Buy New Cost")                                
                                    .Filterable(ftb => ftb.Cell(cell => cell.Operator("gte")))
                                    .Format("{0:C}").EditorTemplateName("Currency")
                                    .Width(80).Hidden(false).MinScreenWidth(768);

                                subColumns.Bound(c => c.RemanCost).Title("Remanufactured Cost")
                                    .Filterable(ftb => ftb.Cell(cell => ftb.Operator("gte")))
                                    .EditorTemplateName("Currency")
                                    .ClientTemplate("#:kendo.toString(RemanCost, 'c2')#")
                                    .Width(80);
                            }));

                            // Group 5: "Variance Info"
                            columns.Group(group => group.Title("Variance Info").Columns(subColumns =>
                            {
                                subColumns.Bound(p => p.CostSavingPerUnitDummy)
                                    .Title("Cost Saving Per Unit")
                                    .ClientTemplate("#= calculateCostSaving(BuyNewCost, RemanCost) #")
                                    .Width(70);

                                subColumns.Bound(p => p.PercentageSavingPerUnitDummy)
                                    .Title("Percentage Saving Per Unit")
                                    .ClientTemplate("#= calculatePercentageSaving(data) #")
                                    .Width(50);
                            }));

                            // Standalone column
                            columns.Bound(u => u.BusId).Title("Vehicle Series") 
                                .ClientTemplate("# if (typeof Buses != 'undefined' && Buses && Buses.length) { # #= Buses.map(bus => truncateWords(bus.BusName, 10)).join(', ') # # } else { # Select Vehicle # } #")
                                .EditorTemplateName("VehicleSeriesEditor")
                                .Width(130);

                            // Actions Column
                            columns.Command(command =>
                            {
                                command.Custom("Archive").Text(" ").IconClass("k-icon k-i-folder").Click("onArchiveClick").HtmlAttributes(new { title = "Archive" });
                                command.Custom("Save to Excel").Text(" ").IconClass("k-icon k-i-file-excel").Click("onSaveToExcelClick").HtmlAttributes(new { title = "Save to Excel" });
                                command.Custom("Email Estimate").Text(" ").IconClass("k-icon k-i-email").Click("onEmailEstimateClick").HtmlAttributes(new { title = "Email Estimate" });
                            }).Title("Actions").Width(220).HtmlAttributes(new { @class = "action-buttons" });
                        })
                        .Pageable()
                        .Sortable()
                        .Filterable()
                        .Scrollable(s => s.Height("auto"))
                    )
                }
                catch (Exception ex)
                {
                    <div class="alert alert-danger">Error loading rebuilt parts: @ex.Message</div>
                }
            </text>);

        tabstrip.Add().Text("Archived Parts")
            .Content(@<text>
                @try
                {
                    @Html.Partial("_ArchivedIndex")
                }
                catch (Exception ex)
                {
                    <div class="alert alert-danger">Error loading archived parts: @ex.Message</div>
                }
            </text>);
    })
)
