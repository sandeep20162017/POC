You are Oracle and MS SQL expert.
I have migrated following Oracle SQL stored proc to MS SQL stored proc. It is faling. I suspect it has to do with lineNo. Pls assist fixing it.
Oracle stored proc :
PROCEDURE MatchSoloNHA(p_result_key          IN    NUMBER,       
                       p_car_no              IN    VARCHAR2,                                       
                       p_error_msg           OUT   VARCHAR2) 
IS     
    temp_sno          number;
    lineno_           number;
    cur_level_        number;
    lflrv_level_      number;
    sernha_a_         varchar2(50); 
    sernha_b_         varchar2(50); 
    sernha_c_         varchar2(50); 
    sernha_d_         varchar2(50); 
    sernha_e_         varchar2(50); 
    sernha_           varchar2(50); 
    assetfamily_      varchar2(50); 
    parentfamily_     varchar2(50); 
    prefix_           varchar2(50); 
    parentasset_      varchar2(50); 
    description_      varchar2(100); 
    error_msg_        varchar2(1000); 
    position_         varchar2(10); 
    cposition_        varchar2(10);
    type array_nha is varray(10) of varchar2(500);
    nhaarray array_nha := array_nha('', '', '','','','','','','','');
    parentarray array_nha := array_nha('', '', '','','','','','','','');
    cursor update_family is 
     select  lineno
     ,c1 --Slevel
     ,c2   --"Supplier code"
     ,c3   --"Part No"
     ,c5   --"Serial Number"
     ,c10  -- "Description"
     ,c15   --"Position" 
     from TTC_MAX_FILE_LINE where result_key=p_result_key and ce is null order by lineno;
     duplicated_      VARCHAR2(1) := 'N'; 
     cursor maxline is select max(lineno)
        from TTC_MAX_FILE_LINE where result_key=p_result_key;
     maxline_    NUMBER;
      CURSOR getconfig(partnumber_ varchar2,
                       assetfamily_ varchar2) IS
        SELECT distinct assetfamily,parentfamily,prefix ,description,position
        FROM strcarconfig
        WHERE partnumber = partnumber_ and vehicletype='LFLRV' and assetfamily <> assetfamily_;     
   
BEGIN

    temp_sno :=   DMSERIAL.nextval; 
    sernha_a_ := to_char(temp_sno);
    temp_sno :=   DMSERIAL.nextval; 
    sernha_b_ := to_char(temp_sno);
    temp_sno :=   DMSERIAL.nextval; 
    sernha_c_ := to_char(temp_sno);
    temp_sno :=   DMSERIAL.nextval; 
    sernha_d_ := to_char(temp_sno);
    temp_sno :=   DMSERIAL.nextval; 
    sernha_e_ := to_char(temp_sno);

    --c10  -- "Description"
    --c15   --"Position" 
    delete from TTC_MAX_FILE_LINE where result_key=p_result_key and ce = 'S';
    commit;
    --Insert level 0 
    lineno_ := 1;

    
    Insert into ttc_max_file_line(result_key, lineno,       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(p_result_key, lineno_   ,  p_car_no,'',         p_car_no,'LFLRV', 'Low Floor Light Rail Vehicle','','S');       
    --Insert Level 1
    lineno_ := lineno_ + 1;                       
    Insert into ttc_max_file_line(result_key, lineno,       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(p_result_key, lineno_   , 'MOD-A-'||sernha_a_ ,p_car_no, sernha_a_     ,'MODULELF', 'Module-A LF','A','S');  
    lineno_ := lineno_ + 1;                       
    Insert into ttc_max_file_line(result_key, lineno,       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(p_result_key, lineno_   , 'MOD-B-'||sernha_b_ ,p_car_no, sernha_b_     ,'MODULELF', 'Module-B LF','B','S');   
    lineno_ := lineno_ + 1;                       
    Insert into ttc_max_file_line(result_key, lineno,       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(p_result_key, lineno_   , 'MOD-C-'||sernha_c_ ,p_car_no, sernha_c_     ,'MODULELF', 'Module-C LF','C','S');  
    lineno_ := lineno_ + 1;                       
    Insert into ttc_max_file_line(result_key, lineno,       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(p_result_key, lineno_   , 'MOD-D-'||sernha_d_ ,p_car_no, sernha_d_     ,'MODULELF', 'Module-D LF','D','S');    
    lineno_ := lineno_ + 1;                       
    Insert into ttc_max_file_line(result_key, lineno,       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(p_result_key, lineno_   , 'MOD-E-'||sernha_e_ ,p_car_no, sernha_e_     ,'MODULELF', 'Module-E LF','E','S');   
    commit;    
    open maxline;
    fetch maxline into maxline_;
    close maxline;                     
    FoR update_family_ IN update_family LOOP  
        assetfamily_ := null;
        parentfamily_ := null; 
        prefix_       := null;   
        description_    := null;  
        sernha_         := null;  
        cur_level_      := 0;  
        parentasset_    := null;    
        --dbms_output.put_line(' begin nhaarray(cur_level_ ) = '||rtrim(ltrim(update_family_.c3)));                                                                                                        
        RetrieveConfig(rtrim(ltrim(update_family_.c3)),assetfamily_,parentfamily_,prefix_,description_,cposition_,error_msg_);    
      
        IF rtrim(ltrim(update_family_.c3)) in ('9918950','9952179') THEN
            duplicated_ := 'Y';
        ELSE
            duplicated_ := 'N';
        END IF;
        
        
        cur_level_ := to_number(rtrim(ltrim(update_family_.c1)));  
        
        IF assetfamily_ is null THEN        
             nhaarray(cur_level_ ) :=null;
             parentarray(cur_level_) := null;       
        END IF;
         
        IF assetfamily_ is not null THEN                    
            IF parentfamily_ = 'LFLRV' THEN  --Level LFLRV
                IF rtrim(ltrim(update_family_.c15)) is null THEN
                    IF cposition_ is not null THEN
                        position_ := cposition_;  
                    ELSE
                        position_ := 'A';
                    END IF;  
                ELSE
                    position_ :=    rtrim(ltrim(update_family_.c15)) ;          
                END IF;
                --dbms_output.put_line('position_= '||position_);
                position_ := GET_MOUDLE(position_) ;
                IF  position_ = 'A' THEN
                    sernha_ := sernha_a_;
                    parentasset_ := 'MOD-A-'||sernha_a_;
                ELSIF position_ = 'B' THEN
                    sernha_ := sernha_b_;
                    parentasset_ := 'MOD-B-'||sernha_b_;   
                ELSIF position_ = 'C' THEN
                    sernha_ := sernha_c_;
                    parentasset_ := 'MOD-C-'||sernha_c_;                    
                ELSIF position_ = 'D' THEN
                    sernha_ := sernha_d_;
                    parentasset_ := 'MOD-D-'||sernha_d_;                    
                ELSIF position_ = 'E' THEN
                    sernha_ := sernha_e_;
                    parentasset_ := 'MOD-E-'||sernha_e_;  
                END IF;                       
                lflrv_level_ :=  cur_level_;
                --nhaarray(cur_level_ ) :=sernha_;
                --parentarray(cur_level_) := parentasset_;    
            ELSE   --Level Below LFLRV  
                             
                sernha_ := nhaarray(cur_level_ - 1);
                parentasset_ := parentarray(cur_level_ - 1);
                  
            END IF; 
             nhaarray(cur_level_ ) :=substr(rtrim(ltrim(update_family_.c5)),1,10);
             parentarray(cur_level_) := prefix_||substr(rtrim(ltrim(update_family_.c5)),1,10);   
                          --dbms_output.put_line('nhaarray(cur_level_ ) = '||nhaarray(cur_level_ )); 
                          --dbms_output.put_line('parentarray(cur_level_)  = '||parentarray(cur_level_) ); 
                          --dbms_output.put_line('cur_level_ = '||to_char(cur_level_)); 
             --dbms_output.put_line('update_family_.lineno = '||to_char(update_family_.lineno));
             
             UpdateSoloLine(p_result_key,update_family_.lineno,assetfamily_,parentfamily_,sernha_,substr(rtrim(ltrim(update_family_.c5)),1,10),prefix_||substr(rtrim(ltrim(update_family_.c5)),1,10),parentasset_,description_,error_msg_);                
             --Process duplicated records
             IF duplicated_ = 'Y' THEN
                --INsert another records
                FOR getconfig_ IN getconfig(rtrim(ltrim(update_family_.c3)),assetfamily_ )  LOOP
                       
                    --dbms_output.put_line('maxline_ = '||to_char(maxline_));
                    --dbms_output.put_line('assetfamily_ = '||assetfamily_);
                    --dbms_output.put_line('getconfig_.assetfamily = '||getconfig_.assetfamily);
                    
                    maxline_ := maxline_ + 1;
                    
                    Insert into ttc_max_file_line(result_key, lineno,       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(p_result_key, 
                                  maxline_   , 
                                  getconfig_.prefix||substr(rtrim(ltrim(update_family_.c5)),1,10) ,
                                  parentasset_, 
                                  substr(rtrim(ltrim(update_family_.c5)),1,10)     ,getconfig_.assetfamily, getconfig_.description,getconfig_.position,'S');  
                   /* insert into ttc_max_dm_asset(resultkey,assetnum,
                                parent,serialnum,location,eq23,
                                description,siteid,equip,pos, seq)
                        values(p_result_key,   getconfig_.prefix||substr(rtrim(ltrim(update_family_.c5)),1,10) ,
                               parentasset_,   substr(rtrim(ltrim(update_family_.c5)),1,10),   p_car_no, getconfig_.assetfamily,
                               getconfig_.description, 'STRCAR'  ,'#'||getconfig_.position,getconfig_.position, maxline_ );  */ 
                                  
                END LOOP;            
             END IF;
        END IF;
    END LOOP;    
    EXCEPTION
        WHEN OTHERS THEN        
        p_error_msg := 'Error: ' || SUBSTR(SQLCODE || ' - ' || SQLERRM, 1 , 990);     
END MatchSoloNHA;
SQL StoredProc :
USE [MAXEXT]
GO
/****** Object:  StoredProcedure [dbo].[TTC_MAX_SOLOCHAIN$MATCHSOLONHA]    Script Date: 6/6/2025 4:13:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER   PROCEDURE [dbo].[TTC_MAX_SOLOCHAIN$MATCHSOLONHA]
    @P_RESULT_KEY INT,
    @P_CAR_NO NVARCHAR(50),
    @P_ERROR_MSG NVARCHAR(1000) OUTPUT
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        DECLARE 
            @temp_sno INT,
            @lineno INT = 1,
            @cur_level INT,
            @lflrv_level INT,
            @sernha_a NVARCHAR(50),
            @sernha_b NVARCHAR(50),
            @sernha_c NVARCHAR(50),
            @sernha_d NVARCHAR(50),
            @sernha_e NVARCHAR(50),
            @sernha NVARCHAR(50),
            @assetfamily NVARCHAR(50),
            @parentfamily NVARCHAR(50),
            @prefix NVARCHAR(50),
            @parentasset NVARCHAR(50),
            @description NVARCHAR(100),
            @position NVARCHAR(10),
            @duplicated CHAR(1) = 'N',
            @maxline INT,
            @current_linenum INT;

        -- Simulate VARRAYs with table variables
        DECLARE @nhaarray TABLE (level INT PRIMARY KEY, sernha NVARCHAR(500));
        DECLARE @parentarray TABLE (level INT PRIMARY KEY, parentsernha NVARCHAR(500));

        -- Cursors
        DECLARE update_family CURSOR FOR
            SELECT [lineno], c1 --AS slevel
			, c2, c3, c5, c10, c15, c18, ce
            FROM TTC_MAX_FILE_LINE
            WHERE result_key = @p_result_key
              AND ce IS NULL
            ORDER BY [lineno];

        DECLARE @update_lineno INT, @update_slevel NVARCHAR(10), @update_c2 NVARCHAR(50), @update_c3 NVARCHAR(50),
                @update_c5 NVARCHAR(50), @update_c10 NVARCHAR(50), @update_c15 NVARCHAR(50), @update_c18 NVARCHAR(100), @update_ce NVARCHAR(10);

        -- Simulate serials (assuming you have a table or sequence to generate them)
        SELECT @temp_sno = NEXT VALUE FOR DMSERIAL;
        SET @sernha_a = CAST(@temp_sno AS NVARCHAR(50));

        SELECT @temp_sno = NEXT VALUE FOR DMSERIAL;
        SET @sernha_b = CAST(@temp_sno AS NVARCHAR(50));

        SELECT @temp_sno = NEXT VALUE FOR DMSERIAL;
        SET @sernha_c = CAST(@temp_sno AS NVARCHAR(50));

        SELECT @temp_sno = NEXT VALUE FOR DMSERIAL;
        SET @sernha_d = CAST(@temp_sno AS NVARCHAR(50));

        SELECT @temp_sno = NEXT VALUE FOR DMSERIAL;
        SET @sernha_e = CAST(@temp_sno AS NVARCHAR(50));

        -- Clean up
        DELETE FROM TTC_MAX_FILE_LINE
        WHERE result_key = @p_result_key
          AND ce ='S';

		set @lineno=1
        
		Insert into ttc_max_file_line(result_key, [lineno],       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(@p_result_key, @lineno   ,  @P_CAR_NO,'',         @P_CAR_NO,'LFLRV', 'Low Floor Light Rail Vehicle','','S');       
    --Insert Level 1
    SET @lineno += 1;                      
    Insert into ttc_max_file_line(result_key, [lineno],       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(@p_result_key, @lineno   , CONCAT('MOD-A-', @sernha_a) ,@P_CAR_NO, @sernha_a     ,'MODULELF', 'Module-A LF','A','S');  
    SET @lineno += 1;                       
    Insert into ttc_max_file_line(result_key, [lineno],       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(@p_result_key, @lineno   , CONCAT('MOD-B-', @sernha_b) ,@P_CAR_NO, @sernha_b     ,'MODULELF', 'Module-B LF','B','S');   
    SET @lineno += 1;                       
    Insert into ttc_max_file_line(result_key, [lineno],       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(@p_result_key, @lineno   , CONCAT('MOD-C-', @sernha_c),@P_CAR_NO, @sernha_c     ,'MODULELF', 'Module-C LF','C','S');  
    SET @lineno += 1;                       
    Insert into ttc_max_file_line(result_key, [lineno],       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(@p_result_key, @lineno   , CONCAT('MOD-D-', @sernha_d),@P_CAR_NO, @sernha_d     ,'MODULELF', 'Module-D LF','D','S');    
    SET @lineno += 1;                       
    Insert into ttc_max_file_line(result_key, [lineno],       assetnum, parentasset,ser,      assetfamily,c10,c15,ce)
                           values(@p_result_key, @lineno   , CONCAT('MOD-E-', @sernha_e) ,@P_CAR_NO, @sernha_e     ,'MODULELF', 'Module-E LF','E','S'); 
       

        -- Get max line
        SELECT @maxline = ISNULL(MAX([lineno]), 0)
        FROM TTC_MAX_FILE_LINE
        WHERE result_key = @p_result_key;

        -- Open the cursor
        OPEN update_family;
        FETCH NEXT FROM update_family INTO @update_lineno, @update_slevel, @update_c2, @update_c3, @update_c5, @update_c10, @update_c15, @update_c18, @update_ce;

        WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @cur_level = TRY_CAST(@update_slevel AS INT);

            IF @update_c3 IN ('9918958', '9952179') 
                SET @duplicated = 'Y';
            ELSE
                SET @duplicated = 'N';
				
            -- Get the config
            SELECT TOP 1
                @assetfamily = assetfamily,
                @parentfamily = parentfamily,
                @prefix = prefix,
                @description = description,
                @position = position
            FROM STRCARCONFIG
            WHERE partnumber = LTRIM(RTRIM(@update_c3))
              AND vehicletype = 'LFLRV'
              AND assetfamily <> @assetfamily;

            IF @assetfamily IS NOT NULL
            BEGIN
                IF @position IS NULL
                    SET @position = 'A';

                -- Assign parent serials based on position
                IF @position = 'A'
                BEGIN
                    SET @sernha = @sernha_a;
                    SET @parentasset = CONCAT('MOD-A-', @sernha_a);
                END
                ELSE IF @position = 'B'
                BEGIN
                    SET @sernha = @sernha_b;
                    SET @parentasset = CONCAT('MOD-B-', @sernha_b);
                END
                ELSE IF @position = 'C'
                BEGIN
                    SET @sernha = @sernha_c;
                    SET @parentasset = CONCAT('MOD-C-', @sernha_c);
                END
                ELSE IF @position = 'D'
                BEGIN
                    SET @sernha = @sernha_d;
                    SET @parentasset = CONCAT('MOD-D-', @sernha_d);
                END
                ELSE IF @position = 'E'
                BEGIN
                    SET @sernha = @sernha_e;
                    SET @parentasset = CONCAT('MOD-E-', @sernha_e);
                END

                -- Update arrays
                INSERT INTO @nhaarray (level, sernha) VALUES (@cur_level, @sernha);
                INSERT INTO @parentarray (level, parentsernha) VALUES (@cur_level, @parentasset);
            END
            ELSE
            BEGIN
                -- Not LFLRV family: fallback
                SELECT @sernha = sernha FROM @nhaarray WHERE level = @cur_level - 1;
                SELECT @parentasset = parentsernha FROM @parentarray WHERE level = @cur_level - 1;

                INSERT INTO @nhaarray (level, sernha) VALUES (@cur_level, LEFT(LTRIM(RTRIM(@update_c5)), 18));
                INSERT INTO @parentarray (level, parentsernha) VALUES (@cur_level, CONCAT(@prefix, LEFT(LTRIM(RTRIM(@update_c5)), 10)));
            END
			declare @ser varchar(max)= LEFT(LTRIM(RTRIM(@update_c5)), 18)
			declare @p_assetnum varchar(max)= CONCAT(@prefix, LEFT(LTRIM(RTRIM(@update_c5)), 10))
            -- Update the TTC_MAX_FILE_LINE using a procedure (assumed)
            EXEC TTC_MAX_SOLOCHAIN$UPDATESOLOLINE
                @p_result_key,
                @update_lineno,
                @assetfamily,
                @parentfamily,
                @sernha,
				@ser,
				@p_assetnum,
               -- LEFT(LTRIM(RTRIM(@update_c5)), 18),
               -- CONCAT(@prefix, LEFT(LTRIM(RTRIM(@update_c5)), 10)),
                @parentasset,
                @description,
                @p_error_msg;

            -- Handle duplicated records
            IF @duplicated = 'Y'
            BEGIN
                DECLARE getconfig CURSOR FOR
                    SELECT DISTINCT assetfamily, parentfamily, prefix, description, position
                    FROM STRCARCONFIG
                    WHERE partnumber = LTRIM(RTRIM(@update_c3))
                      AND vehicletype = 'LFLRV'
                      AND assetfamily <> @assetfamily;

                DECLARE @gc_assetfamily NVARCHAR(50), @gc_parentfamily NVARCHAR(50), @gc_prefix NVARCHAR(50),
                        @gc_description NVARCHAR(100), @gc_position NVARCHAR(10);

                OPEN getconfig;
                FETCH NEXT FROM getconfig INTO @gc_assetfamily, @gc_parentfamily, @gc_prefix, @gc_description, @gc_position;

                WHILE @@FETCH_STATUS = 0
                BEGIN
                    SET @maxline += 1;

                    INSERT INTO TTC_MAX_FILE_LINE (result_key, [lineno], assetnum, parentasset, ser, assetfamily, c18, c15, ce)
                    VALUES (
                        @p_result_key,
                        @maxline,
                        CONCAT(@gc_prefix, LEFT(LTRIM(RTRIM(@update_c5)), 10)),
                        @parentasset,
                        LEFT(LTRIM(RTRIM(@update_c5)), 18),
                        @gc_assetfamily,
                        @gc_description,
                        @gc_position,
                        NULL
                    );

                    FETCH NEXT FROM getconfig INTO @gc_assetfamily, @gc_parentfamily, @gc_prefix, @gc_description, @gc_position;
                END

                CLOSE getconfig;
                DEALLOCATE getconfig;
            END

            FETCH NEXT FROM update_family INTO @update_lineno, @update_slevel, @update_c2, @update_c3, @update_c5, @update_c10, @update_c15, @update_c18, @update_ce;
        END

        CLOSE update_family;
        DEALLOCATE update_family;
    END TRY
    BEGIN CATCH
        SET @p_error_msg = CONCAT('Error: ', ERROR_MESSAGE());
    END CATCH
END
Executing MS SQL stored proc :
USE [MAXEXT]
GO

DECLARE	@return_value int,
		@P_ERROR_MSG nvarchar(1000)

EXEC	@return_value = [dbo].[TTC_MAX_SOLOCHAIN$MATCHSOLONHA]
		@P_RESULT_KEY = 2243,
		@P_CAR_NO = NULL,
		@P_ERROR_MSG = @P_ERROR_MSG OUTPUT

SELECT	@P_ERROR_MSG as N'@P_ERROR_MSG'

SELECT	'Return Value' = @return_value

GO
Error :
Error: Violation of PRIMARY KEY constraint 'TTCMAXFILELINEPK'. Cannot insert duplicate key in object 'dbo.TTC_MAX_FILE_LINE'. The duplicate key value is (2243, 1).
