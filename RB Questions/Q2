You are ASP.NET coe v 8.0 and Telerik ASP.NET core expert.
In the following code, controller action (CreateRbPartsUsedInRbtParts) gets called, but models is 0. Pls assist fixing

controller :
[HttpPost]
[AllowAnonymous]
public async Task<IActionResult> CreateRbPartsUsedInRbtParts(
   [DataSourceRequest] DataSourceRequest request,
   IEnumerable<RebuiltPartsViewModel> models,
   [FromQuery] string rebuiltPartNum,
   [FromQuery] string gridType)
{
    if (!ModelState.IsValid)
    {
        return Json(models.ToDataSourceResult(request, ModelState));
    }
...
View:
<h6>Rebuilt Parts Used</h6>

@(Html.Kendo().Grid<BCES.Models.Parts.RebuiltPartsViewModel>()
   
    .Name($"RbPartsMaterialDetailsRebuiltPartsGrid")
    .Columns(columns =>
    {
        //columns.Bound(c => c.RebuiltStockNum).Title("Rebuilt Number").Width(60);
        columns.Bound(c => c.RebuiltStockNum).Title("Rebuilt Number").EditorTemplateName("ComboBoxEditor").Width(70);
        columns.Command(command =>
       {
            @* command.Custom(""Populate Details").Click("refreshRbPartDetails").IconClass("k-i-reload").HtmlAttributes(new { @class = "k-button k-button-icontext" }) *@;
           command.Custom("Populate Details").Click("refreshRbPartDetails").IconClass("k-i-reload").HtmlAttributes(new { @class = "k-button k-button-icontext" });

       }).Width(60);
        columns.Bound(c => c.CoreCharge).Title("Unit Cost").Width(60);
        columns.Bound(c => c.Qty).Title("Qty").Width(40);
       
        columns.Bound(c => c.Percentage).Title("Percentage").Width(50);
        columns.Bound(c => c.TotalCost).Title("TotalCost").Width(60);
        columns.Bound(c => c.DetailedDesc).Title("Description").Width(70);
        columns.Bound(c => c.KeyWord).Title("KeyWord").Width(50);
        
        // columns.Bound(c => c.DateRevised).Title("Date Revised");
        //columns.Command(command => command.Edit()).Title("Actions");
        columns.Command(command =>
       {
           if (@ViewBag.RoleId == 1)
           {
               // command.Edit().Text(" ").IconClass("k-icon k-i-edit").HtmlAttributes(new { title = "Edit" }); // Edit button with tooltip
           }
           if (@ViewBag.RoleId == 1)
           {

               command.Destroy().Text(" ").IconClass("k-icon k-i-delete").HtmlAttributes(new { title = "Delete" }); // Delete button with tooltip
           }
       }).Width(100);
    })
    .ToolBar(toolbar =>
    {
        if (@ViewBag.RoleId == 1)
        {
            toolbar.Create();
            toolbar.Save();
        }
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Sortable()
    .Resizable(r => r.Columns(true))
    // .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            model.Id(c => c.RebuiltStockNum);
            model.Field(c => c.RebuiltStockNum);
        })


        .Read(read => read.Url(Url.Action("GetRbPartsUsedInRbParts", "RbPartsUsedInEstimates") + "?rebuiltPartNum=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Get))
        .Create(create => create.Url(Url.Action("CreateRbPartsUsedInRbtParts", "RbPartsUsedInEstimates") + "?rebuiltPartNum=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
        .Update(update => update.Url(Url.Action("UpdateRbPartsUsedInRbtParts", "RbPartsUsedInEstimates") + "?rebuiltPartNum=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
        .Destroy(delete => delete.Url(Url.Action("DeleteRbPartsUsedInRbtParts", "RbPartsUsedInEstimates") + "?rebuiltPartNum=" + ViewBag.PartNum + "&gridType=" + ViewBag.GridType).Type(HttpVerbs.Post))
    )
)
