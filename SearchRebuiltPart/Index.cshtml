@model IEnumerable<BCES.Models.Parts.RebuildPartsModel>

@{
    ViewData["Title"] = "Rebuilt Parts Management";
}

<h2>Rebuilt Parts Management</h2>

@(Html.Kendo().Grid<BCES.Models.Parts.RebuildPartsModel>()
    .Name("partsGrid")
    .Columns(columns =>
    {
        columns.Bound(p => p.StockPartID).Title("Stock Part ID");
        columns.Bound(p => p.MMSStockCode).Title("MMS Stock Code");
        columns.Bound(p => p.StockPartDescription).Title("Stock Part Description");
        columns.Bound(p => p.StockPartKeyword).Title("Stock Part Keyword");
        columns.Bound(p => p.Quantity).Title("Quantity");
        columns.Command(command => command.Edit()).Title("Actions").Width(180);
    })
    .ToolBar(toolbar => toolbar.Create().Text("Add New Rebuild Part"))
    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("RebuiltPartPopup"))
    .Pageable()
    .Sortable()
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Read(read => read.Url(Url.Action("ReadParts", "Parts")).Type(HttpVerbs.Get))
        .Create(create => create.Url(Url.Action("AddPart", "Parts")).Type(HttpVerbs.Post))
        .Model(model =>
        {
            model.Id(p => p.StockPartID);
            model.Field(p => p.MMSStockCode).Editable(true);
            model.Field(p => p.StockPartDescription).Editable(true);
            model.Field(p => p.StockPartKeyword).Editable(true);
            model.Field(p => p.Quantity).Editable(true);
            model.Field(p => p.CoreCost).Editable(true);
            model.Field(p => p.RebuiltStockCode).Editable(true);
            model.Field(p => p.RebuiltPartDescription).Editable(true);
            model.Field(p => p.RebuiltPartKeyword).Editable(true);
            model.Field(p => p.JobNumber).Editable(true);
            model.Field(p => p.CoreCode).Editable(true);
            model.Field(p => p.RebuiltPartCoreCost).Editable(true);
            model.Field(p => p.SOPNumber).Editable(true);
            model.Field(p => p.BusSeriesCode).Editable(true);
            model.Field(p => p.BusSeriesDescription).Editable(true);
            model.Field(p => p.PartTypeName).Editable(true);
            model.Field(p => p.CostCentreCode).Editable(true);
            model.Field(p => p.CostCentreDescription).Editable(true);
        })
        .Events(events => events.Error("errorHandler"))
    )
)

@section Scripts {
    <script>
        function errorHandler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
    </script>
}