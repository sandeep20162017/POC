Minimal Change Approach
ðŸ”§ Step 1: Add Attribute in Grid Column Command (Server-side)
Update your custom delete button definition to include data-rebuiltstocknum-field:

csharp
Copy
Edit
command.Custom("Delete")
    .Click("showDeleteConfirmation")
    .Text(" ")
    .IconClass("k-icon k-i-delete")
    .HtmlAttributes(new
    {
        @class = "text-danger",
        title = "Delete",
        data_grid = "RbPartsMaterialDetailsRebuiltPartsGrid",
        data_url = Url.Action("DeleteRbPartsUsedInRbtParts", "RbPartsUsedInEstimates"),
        data_id_field = "Id",
        data_grid_type = "RbPartGrid",
        data_rebuiltstocknum_field = "RebuiltStockNum" // âœ… Add this
    });
ðŸ”§ Step 2: Read and Send in JS (just like idField)
Update the relevant JS like so:

In showDeleteConfirmation(), read the new field:
js
Copy
Edit
var rebuiltStockNumField = $btn.data("rebuiltstocknum-field");
$dialog.data("rebuiltStockNumField", rebuiltStockNumField);
In confirm-btn handler, send it:
js
Copy
Edit
var rebuiltStockNumField = $dialog.data("rebuiltStockNumField");
dataToSend["rebuiltStockNum"] = dataItem[rebuiltStockNumField];
ðŸ§  Now the JS looks like this (only 2 lines added):

js
Copy
Edit
var rebuiltStockNumField = $dialog.data("rebuiltStockNumField");
dataToSend["rebuiltStockNum"] = dataItem[rebuiltStockNumField];
âœ… Step 3: Adjust Controller to Accept RebuiltStockNum
Add the new parameter:

csharp
Copy
Edit
public async Task<IActionResult> DeleteRbPartsUsedInRbtParts(
    [DataSourceRequest] DataSourceRequest request,
    RebuiltPartsViewModel model,
    string id,
    string parentPartId,
    string gridType,
    string rebuiltStockNum)
{
    // Use rebuiltStockNum as needed
}
